{
    "version": "https://jsonfeed.org/version/1",
    "title": "Luk's Blog • All posts by \"计算机科学\" category",
    "description": "",
    "home_page_url": "https://Vereatorm.github.io",
    "items": [
        {
            "id": "https://vereatorm.github.io/2023/11/17/computer-science/%E4%B8%AD%E9%97%B4%E4%BB%B6/redis%E5%AD%A6%E4%B9%A0/Day1/",
            "url": "https://vereatorm.github.io/2023/11/17/computer-science/%E4%B8%AD%E9%97%B4%E4%BB%B6/redis%E5%AD%A6%E4%B9%A0/Day1/",
            "title": "redis",
            "date_published": "2023-11-16T16:00:00.000Z",
            "content_html": "<p>note info:<br>第一天学习 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVM1NHkxUjdTQj9wPTExJnZkX3NvdXJjZT1lZTc2MGJmN2E0ZDg5ZDNlZTkyZjRmODNmM2E2ODJjOQ==\">Redis</span></p>\n<h1 id=\"redis-基础操作\"><a href=\"#redis-基础操作\" class=\"headerlink\" title=\"redis 基础操作\"></a>redis 基础操作</h1><ol>\n<li>存入内容</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379[15]&gt; select 0 #选择0号数据库</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; dbsize #当前数据库的大小</span><br><span class=\"line\">(integer) 17</span><br><span class=\"line\">127.0.0.1:6379&gt; get name #按照键寻找值</span><br><span class=\"line\">&quot;flower&quot;</span><br><span class=\"line\">127.0.0.1:6379&gt; set password 123 #存放值</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; keys *  #查看数据库所有的key</span><br><span class=\"line\">1) &quot;sys_dict:sys_notice_type&quot;</span><br><span class=\"line\">2) &quot;sys_dict:sys_user_sex&quot;</span><br><span class=\"line\">3) &quot;sys_dict:sys_show_hide&quot;</span><br><span class=\"line\">4) &quot;sys_dict:sys_job_group&quot;</span><br><span class=\"line\">5) &quot;sys_config:sys.index.sideTheme&quot;</span><br><span class=\"line\">6) &quot;sys_dict:sys_normal_disable&quot;</span><br><span class=\"line\">7) &quot;sys_dict:sys_common_status&quot;</span><br><span class=\"line\">8) &quot;password&quot;</span><br><span class=\"line\">9) &quot;sys_config:sys.index.skinName&quot;</span><br><span class=\"line\">10) &quot;sys_dict:sys_job_status&quot;</span><br><span class=\"line\">11) &quot;name&quot;</span><br><span class=\"line\">12) &quot;sys_dict:sys_notice_status&quot;</span><br><span class=\"line\">13) &quot;sys_config:sys.user.initPassword&quot;</span><br><span class=\"line\">14) &quot;sys_dict:sys_oper_type&quot;</span><br><span class=\"line\">15) &quot;sys_config:sys.account.captchaEnabled&quot;</span><br><span class=\"line\">16) &quot;sys_config:sys.account.registerUser&quot;</span><br><span class=\"line\">17) &quot;sys_dict:sys_yes_no&quot;</span><br><span class=\"line\">18) &quot;sys_config:sys.login.blackIPList&quot;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>清除数据库</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; flushdb #清除当前数据库</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; keys *</span><br><span class=\"line\">(empty list or set)</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li></li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "https://vereatorm.github.io/2023/10/06/computer-science/java/springboot/SpringbootSecurity/",
            "url": "https://vereatorm.github.io/2023/10/06/computer-science/java/springboot/SpringbootSecurity/",
            "title": "SpringBoot Security",
            "date_published": "2023-10-05T16:00:00.000Z",
            "content_html": "<p>note info<br>课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXo0NHkxajdXWi8/cD00JnZkX3NvdXJjZT1lZTc2MGJmN2E0ZDg5ZDNlZTkyZjRmODNmM2E2ODJjOQ==\">SpringBootSecurity</span></p>\n<h1 id=\"SpringBoot-Security-框架\"><a href=\"#SpringBoot-Security-框架\" class=\"headerlink\" title=\"SpringBoot Security 框架\"></a>SpringBoot Security 框架</h1><h1 id=\"整体架构\"><a href=\"#整体架构\" class=\"headerlink\" title=\"整体架构\"></a>整体架构</h1><p>在<strong>Spring Security</strong>的架构设计中，认证<em>Authentication</em>和<strong>授权 Authorization</strong>是分开的，无论使用什么样的认证方式。都不会影响授权，这是两个独立的存在，这种独立带来的好处之一，就是可以非常方便地整合一些外部的解决方案。<br><img data-src=\"/assets/SpringBootSecurity%E6%9E%B6%E6%9E%84.jpg\" alt=\"&quot;会话跟踪技术&quot;\"></p>\n<h1 id=\"引入依赖\"><a href=\"#引入依赖\" class=\"headerlink\" title=\"引入依赖\"></a>引入依赖</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-security<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"认证\"><a href=\"#认证\" class=\"headerlink\" title=\"认证\"></a>认证</h2><p>在 Spring Seourity 中认证是由 AuthenticationManager 接口来负责的，接口定义为:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">AuthenticationManager</span> &#123;</span><br><span class=\"line\">    Authentication <span class=\"title function_\">authenticate</span><span class=\"params\">(Authentication authentication)</span><span class=\"keyword\">throws</span> AuthenticationException;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>返回 Authentication 表示认证成功</li>\n<li>返回 AuthenticationException 表示认证失败</li>\n</ul>\n<ol>\n<li>AuthenticationManager 主要实现类为 ProviderManager，在 ProviderManager 中管理了众多 AuthenticationProvider 实例。</li>\n<li>在一次完整的认证流程中，Spring Security 允许存在多个 AuthenticationProvider，用来实现多种认证方式，这些 AuthencationProvider 都是由 ProviderManager 进行统一管理的。</li>\n</ol>\n<h2 id=\"Authentication\"><a href=\"#Authentication\" class=\"headerlink\" title=\"Authentication\"></a>Authentication</h2><p>认证以及认证成功的信息主要是由 Authentication 的实现类进行保存的，其接口定义为: Authentication</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Authentication</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Principal</span>，Serializable &#123;</span><br><span class=\"line\">    collection&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">GrantedAuthority</span>&gt; getAuthorities();</span><br><span class=\"line\">    Object <span class=\"title function_\">getcredentials</span><span class=\"params\">()</span>; <span class=\"comment\">//获取用户凭证信息，一般指密码</span></span><br><span class=\"line\">    Object <span class=\"title function_\">getDetails</span><span class=\"params\">( )</span>; <span class=\"comment\">//获取用户详细信息</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    Object <span class=\"title function_\">getPrincipal</span><span class=\"params\">()</span>; <span class=\"comment\">//获取用户身份信息，用户名、用户对象等</span></span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"title function_\">isAuthenticated</span><span class=\"params\">( )</span>; <span class=\"comment\">//用户是否认证成功</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">setAuthenticated</span><span class=\"params\">(<span class=\"type\">boolean</span> isAuthenticated)</span> <span class=\"keyword\">throws</span> IllegalArgumentException;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SecurityContextHolder\"><a href=\"#SecurityContextHolder\" class=\"headerlink\" title=\"SecurityContextHolder\"></a>SecurityContextHolder</h2><p><code>SecurityContextHolder</code> 用来获取登录之后用户信息。<br>Spring Security 会将登录用户数据保存在 Session 中。 但是，为了使用方便,Spring Security 在此基础上还做了一些改进，其中最主要的一个变化就是线程绑定。当用户登录成功后,Spring Security 会将登录成功的用户信息保存到 SecurityContextHolder 中。<br><code>SecurityContextHolder</code> 中的数据保存默认是通过 <code>ThreadLocal</code> 来实现的，使用 <code>ThreadLocal</code> 创建的变量只能被当前线程访问，不能被其他线程访问和修改，也就是用户数据和请求线程绑定在一起。当登录请求处理完毕后，Spring Security 会将 <code>SecurityContextHolder</code> 中的数据拿出来保存到 Session 中，同时将 SecurityContexHolder 中的数据清空。以后每当有请求到来时，Spring Security 就会先从 Session 中取出用户登录数据，保存到 <code>SecurityContextHolder</code> 中，方便在该请求的后续处理过程中使用，同时在请求结束时将 SecurityContextHolder 中的数据拿出来保存到 Session 中，然后将 Security<br><code>SecurityContextHolder</code> 中的数据清空。这一策略非常方便用户在 Controller、Service 层以及任何代码中获取当前登录用户数据。</p>\n<h2 id=\"授权\"><a href=\"#授权\" class=\"headerlink\" title=\"授权\"></a>授权</h2><p>当完成认证后，接下来就是授权了。在 SpringSecurity 的授权体系中，有两个关键接口<br><code>AccessDecisionManager</code>(访问决策管理器)，用来决定此次访问是否被允许。</p>\n<h3 id=\"AccessDecisionManager\"><a href=\"#AccessDecisionManager\" class=\"headerlink\" title=\"AccessDecisionManager\"></a>AccessDecisionManager</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decide(Authentication, Object, Collection&lt;ConfigAttribute&gt;): <span class=\"keyword\">void</span></span><br><span class=\"line\"><span class=\"title function_\">supports</span><span class=\"params\">(Class&lt;?&gt;)</span>: <span class=\"type\">boolean</span></span><br><span class=\"line\"><span class=\"title function_\">supports</span><span class=\"params\">(ConfigAttribute)</span>: <span class=\"type\">boolean</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"AccessDecisionVoter\"><a href=\"#AccessDecisionVoter\" class=\"headerlink\" title=\"AccessDecisionVoter\"></a>AccessDecisionVoter</h3><p>AccessDecisionVoter(访问决定投票器)，投票器会检查用户是否具备应有的角色，进而投出赞成、反对或者弃权票。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">supports(Class&lt;?&gt;): <span class=\"type\">boolean</span></span><br><span class=\"line\"><span class=\"title function_\">supports</span><span class=\"params\">(ConfigAttribute)</span>: <span class=\"type\">boolean</span></span><br><span class=\"line\"><span class=\"title function_\">vote</span><span class=\"params\">(Authentication,s, collection&lt;ConfigAttribute&gt;)</span>: <span class=\"type\">int</span></span><br></pre></td></tr></table></figure>\n\n<p>AccessDecisionVoter 和 AccessDecisionManager 都有众多的实现类，在 AccessDecisionManager 中会换个遍历 AccessDecisionVoter，进而决定是否允许用户访问，因而 AaccesDecisionVoter 和 AccessDecisionManager 两者的关系类似于 AuthenticationProvider 和 ProviderManager 的关系。</p>\n<h3 id=\"ConfigAttribute\"><a href=\"#ConfigAttribute\" class=\"headerlink\" title=\"ConfigAttribute\"></a>ConfigAttribute</h3><p>Configttribute，用来保存授权时的角色信息</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getAttribute(): String</span><br></pre></td></tr></table></figure>\n\n<p>在 Spring Security 中，用户请求一个资源(通常是一个接口或者一个 Java 方法)需要的角色会被封装成一个 <code>ConfigAttribute</code> 对象.<br>在 ConfigAttribute 中只有一个 getAttribute 方法，该方法返回一个 String 字符串，就是角色的名称。<br>一般来说，角色名称都带有一个 ROLE_前缀，投票器 AccessDecisionVoter 所做的事情，其实就是比较用户所具各的角色和请求某个资源所需的 ConfigAtuibute 之间的关系。</p>\n<h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><p>引入一个依赖会将所有的接口自动保护起来，若未登录将无法调用接口</p>\n<h1 id=\"自定义验证\"><a href=\"#自定义验证\" class=\"headerlink\" title=\"自定义验证\"></a>自定义验证</h1><h2 id=\"自定义资源权限规则\"><a href=\"#自定义资源权限规则\" class=\"headerlink\" title=\"自定义资源权限规则\"></a>自定义资源权限规则</h2><ul>\n<li>&#x2F;index 公共资源</li>\n<li>&#x2F;hello 受保护资源<br>在项目中添加如下配置就可以实现对资源权限规则设定:</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebSecurityConfigurer</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">       http.authorizeHttpRequests()    <span class=\"comment\">//开启请求权限</span></span><br><span class=\"line\">                .mvcMatchers( <span class=\"string\">&quot;/login.html&quot;</span>).permitAll() <span class=\"comment\">//放行资源在前</span></span><br><span class=\"line\">                .anyRequest().authenticated()</span><br><span class=\"line\">                .and()</span><br><span class=\"line\">                .formLogin()</span><br><span class=\"line\">                .loginPage(<span class=\"string\">&quot;/login.html&quot;</span>) <span class=\"comment\">//用来指定登录界面， 一旦自定义登录页面后必须只能登录url</span></span><br><span class=\"line\">                .loginProcessingUrl(<span class=\"string\">&quot;/doLogin&quot;</span>) <span class=\"comment\">//指定处理登录请求</span></span><br><span class=\"line\">                .usernameParameter(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">                .passwordParameter(<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">                .successHandler(<span class=\"keyword\">new</span> <span class=\"title class_\">MyAuthenticationSuccessHandler</span>()) <span class=\"comment\">//认真成功时处理，前后端分离的解决方案</span></span><br><span class=\"line\">                .failureHandler(<span class=\"keyword\">new</span> <span class=\"title class_\">MyAuthenticationFailedHandler</span>()) <span class=\"comment\">//登录失败时处理，前后端分离的解决方案，返回一个json数据</span></span><br><span class=\"line\">                .and()</span><br><span class=\"line\">                .csrf().disable(); <span class=\"comment\">//禁止csrf跨站请求保护</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>说明</strong></p>\n<ul>\n<li>permitAl1()代表放行该资源,该资源为公共资源无需认证和授权可以直接访问</li>\n<li>anyRequest().authenticated() 代表所有请求,必须认证之后才能访问</li>\n<li>formLogin(代表开启表单认证)<br>注意:故行资源必须故在所有认证请求之前!</li>\n</ul>\n<h2 id=\"自定义登录界面\"><a href=\"#自定义登录界面\" class=\"headerlink\" title=\"自定义登录界面\"></a>自定义登录界面</h2><ul>\n<li>引入模板依赖</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- thymeleaf --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在 templates 文件夹下创建</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span> <span class=\"attr\">xmlns:th</span>=<span class=\"string\">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>LOGIN<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span> <span class=\"attr\">th:action</span>=<span class=\"string\">&quot;@&#123;/doLogin&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">      用户名<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;uname&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;uname&quot;</span> /&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">      密码<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;password&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;登录&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建一个新的 controller</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoginController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/login.html&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  String <span class=\"title function_\">login</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;login&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>自定义成功响应</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAuthenticationSuccessHandler</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AuthenticationSuccessHandler</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onAuthenticationSuccess</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Authentication authentication)</span> <span class=\"keyword\">throws</span> IOException, ServletException &#123;</span><br><span class=\"line\">        Map&lt;String, Object&gt; map = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;msg&quot;</span>,<span class=\"string\">&quot;登录成功&quot;</span>);</span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;code&quot;</span>,<span class=\"number\">200</span>);</span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;authentication&quot;</span>,authentication);</span><br><span class=\"line\">        response.setContentType(<span class=\"string\">&quot;application/json;charset=UTF-8&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>().writeValueAsString(map);</span><br><span class=\"line\">        response.getWriter().println(s);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>自定义失败响应</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAuthenticationFailedHandler</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AuthenticationFailureHandler</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onAuthenticationFailure</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception)</span> <span class=\"keyword\">throws</span> IOException, ServletException &#123;</span><br><span class=\"line\">        HashMap&lt;Object, Object&gt; result = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">        result.put(<span class=\"string\">&quot;msg&quot;</span>,<span class=\"string\">&quot;登录失败&quot;</span>);</span><br><span class=\"line\">        result.put(<span class=\"string\">&quot;code&quot;</span>,<span class=\"number\">500</span>);</span><br><span class=\"line\">        response.setContentType(<span class=\"string\">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>().writeValueAsString(result);</span><br><span class=\"line\">        response.getWriter().println(s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"注销登录\"><a href=\"#注销登录\" class=\"headerlink\" title=\"注销登录\"></a>注销登录</h2><p>Spring Security 中也提供了默认的 住下登录配置，在开发中也可以按照自己的需求对注销进行个性化定制</p>\n<ul>\n<li>开启注销登录<code>默认开启</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebSecurityConfigurer</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">              ...</span><br><span class=\"line\">                .and()</span><br><span class=\"line\">                .logout()</span><br><span class=\"line\">                .logoutUrl(<span class=\"string\">&quot;/logout&quot;</span>) <span class=\"comment\">//指定注销登录url</span></span><br><span class=\"line\">                .invalidateHttpSession(<span class=\"literal\">true</span>) <span class=\"comment\">//默认对话失效</span></span><br><span class=\"line\">                .clearAuthentication(<span class=\"literal\">true</span>) <span class=\"comment\">//默认清楚登录凭证</span></span><br><span class=\"line\">                .logoutSuccessUrl(<span class=\"string\">&quot;/login.html&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"自定义认证数据源\"><a href=\"#自定义认证数据源\" class=\"headerlink\" title=\"自定义认证数据源\"></a>自定义认证数据源</h1><h2 id=\"配置全局-AuthenticationManager\"><a href=\"#配置全局-AuthenticationManager\" class=\"headerlink\" title=\"配置全局 AuthenticationManager\"></a>配置全局 AuthenticationManager</h2><ul>\n<li>默认全局的 AuthenticationManager<br>springboot 对 security 进行自动配置时自动在工厂创建一个全局 AuthenticationManager</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//springboot 对security默认配置，在工厂中默认创建AuthenticationManager</span></span><br><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">initialize</span><span class=\"params\">(AuthenticationManagerBuilder builder)</span><span class=\"keyword\">throws</span>  Exception&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;默认配置&quot;</span>+builder);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li>默认自动配置全局 AuthenticationManager 默认找当前项目中是否存在自定义的 UserDetailsService 实例自动讲当前项目 UserDetailsService 实例设为数据源</li>\n<li>默认自动配置全局 AuthenticationManager 在工厂中使用直接在代码中注入即可</li>\n</ol>\n<h2 id=\"自定义全局-AuthenticationManager\"><a href=\"#自定义全局-AuthenticationManager\" class=\"headerlink\" title=\"自定义全局 AuthenticationManager\"></a>自定义全局 AuthenticationManager</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> UserDetailsService <span class=\"title function_\">userDetailsService</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">      <span class=\"type\">InMemoryUserDetailsManager</span> <span class=\"variable\">userDetailsManager</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">InMemoryUserDetailsManager</span>();</span><br><span class=\"line\">      userDetailsManager.createUser(User.withUsername(<span class=\"string\">&quot;aaa&quot;</span>).password(<span class=\"string\">&quot;&#123;noop&#125;123&quot;</span>).roles(<span class=\"string\">&quot;admin&quot;</span>).build());</span><br><span class=\"line\">      <span class=\"keyword\">return</span> userDetailsManager;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(AuthenticationManagerBuilder builder)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;自定义AuthenticationManager&quot;</span>+builder);</span><br><span class=\"line\">      builder.userDetailsService(userDetailsService());</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 作用：用来在自定义AuthenticationManager在工厂中进行暴露，可以在任何位置注入</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"meta\">@Bean</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> AuthenticationManager <span class=\"title function_\">authenticationManagerBean</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.authenticationManagerBean();</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li>一旦通过 configure 方法自定义 AuthenticationManager 实现就回将工厂中自动配置 AuthenticationManager 进行覆盖</li>\n<li>一旦通过 configure 方法自定义 AuthenticationManager 实现需要在实现中指定认证数据源对象 UserDetaiService 实例</li>\n<li>一旦通过 configure 方法自定义 AuthenticationManager 这种方式创建的 AuthenticationManager 对象工厂内部本地一个 AuthenticationManager 对象，不允许在其他自定义组件中进行注入</li>\n</ol>\n<ul>\n<li>自定义内存数据源</li>\n</ul>\n",
            "tags": [
                "JAVA",
                "mybatis"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/08/22/computer-science/java/rouyi/Day1/",
            "url": "https://vereatorm.github.io/2023/08/22/computer-science/java/rouyi/Day1/",
            "title": "RuoYi框架",
            "date_published": "2023-08-21T16:00:00.000Z",
            "content_html": "<p>note info:<br>第一天 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUhUNHkxZDdvQT9wPTImdmRfc291cmNlPWVlNzYwYmY3YTRkODlkM2VlOTJmNGY4M2YzYTY4MmM5\">若依</span></p>\n<h1 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h1><h2 id=\"生成验证码\"><a href=\"#生成验证码\" class=\"headerlink\" title=\"生成验证码\"></a>生成验证码</h2><ol>\n<li>后端生成一个表达式，1+1&#x3D;2</li>\n<li>1+1&#x3D;？转成图片，传到前端进行展示</li>\n<li>把结果存到redis</li>\n<li>做了一个反向代理，url请求前端，映射到后端，解决跨域问题<br><img data-src=\"/.%5Cassets/poxy.jpg\"><br>&#x2F;dev-api 替换为’’ 在映射到’<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDgwLw==\">http://localhost:8080</span>‘<br><span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDgwL2NhcHRjaGFJbWFnZQ==\">http://localhost:8080/captchaImage</span></li>\n</ol>\n<h2 id=\"登录的具体流程\"><a href=\"#登录的具体流程\" class=\"headerlink\" title=\"登录的具体流程\"></a>登录的具体流程</h2><ol>\n<li>校验验证码</li>\n<li>校验用户名密码</li>\n<li>生成token<br>使用异步任务管理器，结合线程池，实现了异步的操作日志记录，和业务逻辑实现异步解耦合</li>\n</ol>\n<h2 id=\"getInfo\"><a href=\"#getInfo\" class=\"headerlink\" title=\"getInfo\"></a>getInfo</h2><p>获取当前用户的角色和权限信息，存储到Vuex中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//所有权限</span><br><span class=\"line\">*:*:*</span><br></pre></td></tr></table></figure>\n<h2 id=\"getRouters\"><a href=\"#getRouters\" class=\"headerlink\" title=\"getRouters\"></a>getRouters</h2><p>根据当前用户的去那先获取动态路由</p>\n",
            "tags": [
                "Vue",
                "web"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/08/18/computer-science/webLearning/vue/Day1/",
            "url": "https://vereatorm.github.io/2023/08/18/computer-science/webLearning/vue/Day1/",
            "title": "VUE",
            "date_published": "2023-08-17T16:00:00.000Z",
            "content_html": "<p>note info:<strong>查漏补缺</strong><br>第一天复习 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUN4NHkxSzd0ay8/cD04JnNwbV9pZF9mcm9tPXBhZ2VEcml2ZXImdmRfc291cmNlPWVlNzYwYmY3YTRkODlkM2VlOTJmNGY4M2YzYTY4MmM5\">Vue</span></p>\n<h1 id=\"安装-node\"><a href=\"#安装-node\" class=\"headerlink\" title=\"安装 node\"></a>安装 node</h1><h1 id=\"创建脚手架\"><a href=\"#创建脚手架\" class=\"headerlink\" title=\"创建脚手架\"></a>创建脚手架</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue create [projectName]</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run serve</span><br></pre></td></tr></table></figure>\n\n<p>创建组件放在 component 目录下</p>\n<h1 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;ul&gt;</span><br><span class=\"line\">    &lt;!--v-for --&gt;</span><br><span class=\"line\">    &lt;li</span><br><span class=\"line\">      v-for=&quot;(item, index) in newList&quot;</span><br><span class=\"line\">      :key=&quot;item.id&quot;</span><br><span class=\"line\">      v-show=&quot;item.id % 3 == 0&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">      &#123;&#123; item.name &#125;&#125;</span><br><span class=\"line\">      &#123;&#123; item.id &#125;&#125;</span><br><span class=\"line\">      &#123;&#123; index &#125;&#125;</span><br><span class=\"line\">    &lt;/li&gt;</span><br><span class=\"line\">  &lt;/ul&gt;</span><br><span class=\"line\">  &lt;!-- 绑定事件 --&gt;</span><br><span class=\"line\">  &lt;button @click=&quot;say(&#x27;hi&#x27;)&quot;&gt;say hi&lt;/button&gt;</span><br><span class=\"line\">  &lt;ul&gt;</span><br><span class=\"line\">    &lt;li @click=&quot;say(item)&quot; v-for=&quot;(item, index) in names&quot; :key=&quot;index&quot;&gt;</span><br><span class=\"line\">      &#123;&#123; item &#125;&#125;</span><br><span class=\"line\">    &lt;/li&gt;</span><br><span class=\"line\">  &lt;/ul&gt;</span><br><span class=\"line\">  &lt;!-- v-model --&gt;</span><br><span class=\"line\">  &lt;input type=&quot;text&quot; v-model.lazy=&quot;msg&quot; placeholder=&quot;edit me&quot; /&gt;</span><br><span class=\"line\">  &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;/h1&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;HelloWorld&quot;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      counter: 0,</span><br><span class=\"line\">      msg: &quot;你好&quot;,</span><br><span class=\"line\">      newList: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          id: 1000,</span><br><span class=\"line\">          name: &quot;saa&quot;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          id: 1010,</span><br><span class=\"line\">          name: &quot;qweqwe&quot;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          id: 1070,</span><br><span class=\"line\">          name: &quot;912123&quot;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      names: [&quot;zhangsan&quot;, &quot;lisi&quot;, &quot;wangwu&quot;],</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    clickHandle(event) &#123;</span><br><span class=\"line\">      console.log(&quot;hhhh&quot;);</span><br><span class=\"line\">      console.log(event);</span><br><span class=\"line\">      this.msg = &quot;消息没了&quot;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    say(param) &#123;</span><br><span class=\"line\">      console.log(param);</span><br><span class=\"line\">      console.log(&quot;触发了&quot;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"组件基础\"><a href=\"#组件基础\" class=\"headerlink\" title=\"组件基础\"></a>组件基础</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;/h1&gt;</span><br><span class=\"line\">  &lt;HelloWorld /&gt;</span><br><span class=\"line\">  &lt;!--使用  --&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import HelloWorld from &quot;./HelloWorld.vue&quot;; //引入</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      msg: &quot;helloWorld&quot;,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    HelloWorld, //声明</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"props-组件交互\"><a href=\"#props-组件交互\" class=\"headerlink\" title=\"props 组件交互\"></a>props 组件交互</h1><p>传递的页面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;img alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot; /&gt;</span><br><span class=\"line\">  &lt;demo1 :title=&quot;title&quot; :age=&quot;age&quot; :arr=&quot;arr&quot; /&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">// import HelloWorld from &#x27;./components/HelloWorld.vue&#x27;</span><br><span class=\"line\">// import myComponentVue from &#x27;./components/myComponent.vue&#x27;;</span><br><span class=\"line\">import demo1 from &quot;./components/demo1.vue&quot;;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;App&quot;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      title: &quot;我的是个标题&quot;,</span><br><span class=\"line\">      age: 20,</span><br><span class=\"line\">      arr: [&quot;weusad&quot;, &quot;qwwxas&quot;, &quot;presc&quot;],</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    demo1,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>传递到的页面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;h3&gt;prop传递数据&lt;/h3&gt;</span><br><span class=\"line\">  &lt;p&gt;&#123;&#123; title &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">  &lt;p&gt;age=&#123;&#123; age &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">  &lt;ul&gt;</span><br><span class=\"line\">    &lt;li v-for=&quot;(item, index) in arr&quot; :key=&quot;index&quot;&gt;</span><br><span class=\"line\">      &#123;&#123; item &#125;&#125;</span><br><span class=\"line\">    &lt;/li&gt;</span><br><span class=\"line\">  &lt;/ul&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;myPropComponent&quot;,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    title: &#123;</span><br><span class=\"line\">      type: String,</span><br><span class=\"line\">      default: &quot;&quot;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    age: &#123;</span><br><span class=\"line\">      type: Number,</span><br><span class=\"line\">      default: 20,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    names: &#123;</span><br><span class=\"line\">      type: Array,</span><br><span class=\"line\">      // 对象和数组必须使用函数</span><br><span class=\"line\">      default: function () &#123;</span><br><span class=\"line\">        return [];</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"自定义事件的组件交互\"><a href=\"#自定义事件的组件交互\" class=\"headerlink\" title=\"自定义事件的组件交互\"></a>自定义事件的组件交互</h1><p>自定义事件可以在组件中反向传递数据(从子组件传递到父组件),prop 可以将数据从父组件传递到子组件</p>\n<p>App.vue</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;demo1 @onEvent=&quot;getDataHandle&quot; /&gt;</span><br><span class=\"line\">  &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import demo1 from &quot;./components/demo1.vue&quot;;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;App&quot;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      message: &quot;&quot;,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    demo1,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    getDataHandle(data) &#123;</span><br><span class=\"line\">      console.log(data);</span><br><span class=\"line\">      this.message = data;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>子组件中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;h3&gt;自定义事件传递数据&lt;/h3&gt;</span><br><span class=\"line\">  &lt;button @click=&quot;sendClickHandle&quot;&gt;点击传递&lt;/button&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;myPropComponent&quot;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      msg: &quot;我是消息&quot;,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    sendClickHandle() &#123;</span><br><span class=\"line\">      //参数1:字符串</span><br><span class=\"line\">      //参数2:传递的数据</span><br><span class=\"line\">      this.$emit(&quot;onEvent&quot;, this.msg);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"生命周期钩子\"><a href=\"#生命周期钩子\" class=\"headerlink\" title=\"生命周期钩子\"></a>生命周期钩子</h1><p>创建时:beforeCreate 、created<br>渲染时:beforeMount 、mounted<br>更新时:beforeUpdate 、updated<br>卸载时: beforeUnmount 、unmounted</p>\n<h1 id=\"vue-引入第三方\"><a href=\"#vue-引入第三方\" class=\"headerlink\" title=\"vue 引入第三方\"></a>vue 引入第三方</h1><p>安装 swiper</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install --save swiper</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;demo2&quot;&gt;</span><br><span class=\"line\">    &lt;Swiper</span><br><span class=\"line\">      class=&quot;mySwiper&quot;</span><br><span class=\"line\">      :modules=&quot;modules&quot;</span><br><span class=\"line\">      :pagination=&quot;&#123; clickable: true &#125;&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">      &lt;SwiperSlide&gt;</span><br><span class=\"line\">        &lt;img src=&quot;../assets/img10.jpg&quot; alt=&quot;&quot; /&gt;</span><br><span class=\"line\">      &lt;/SwiperSlide&gt;</span><br><span class=\"line\">      &lt;SwiperSlide&gt;</span><br><span class=\"line\">        &lt;img src=&quot;../assets/img9.jpg&quot; alt=&quot;&quot; /&gt;</span><br><span class=\"line\">      &lt;/SwiperSlide&gt;</span><br><span class=\"line\">      &lt;SwiperSlide&gt;</span><br><span class=\"line\">        &lt;img src=&quot;../assets/img11.jpg&quot; alt=&quot;&quot; /&gt;</span><br><span class=\"line\">      &lt;/SwiperSlide&gt;</span><br><span class=\"line\">    &lt;/Swiper&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import &#123; Swiper, SwiperSlide &#125; from &quot;swiper/vue&quot;;</span><br><span class=\"line\">import &#123; Navigation, Pagination, Scrollbar, A11y &#125; from &quot;swiper/modules&quot;;</span><br><span class=\"line\">import &quot;swiper/css&quot;;</span><br><span class=\"line\">import &quot;swiper/css/pagination&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;demo2Componets&quot;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      modules: [Pagination],</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    Swiper,</span><br><span class=\"line\">    SwiperSlide,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">img &#123;</span><br><span class=\"line\">  width: 60%;</span><br><span class=\"line\">  height: 60%;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"axios-网络请求\"><a href=\"#axios-网络请求\" class=\"headerlink\" title=\"axios 网络请求\"></a>axios 网络请求</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install --save axios</span><br><span class=\"line\">cnpm install --save querystring</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"单文件引入-axios\"><a href=\"#单文件引入-axios\" class=\"headerlink\" title=\"单文件引入 axios\"></a>单文件引入 axios</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;h1&gt;&lt;/h1&gt;</span><br><span class=\"line\">  &lt;ul&gt;</span><br><span class=\"line\">    &lt;li v-for=&quot;(item, index) in info&quot; :key=&quot;index&quot;&gt;</span><br><span class=\"line\">      &#123;&#123; item.title &#125;&#125;</span><br><span class=\"line\">      &#123;&#123; item.content &#125;&#125;</span><br><span class=\"line\">      &lt;img :src=&quot;item.img[0]&quot; alt=&quot;&quot; /&gt;</span><br><span class=\"line\">    &lt;/li&gt;</span><br><span class=\"line\">  &lt;/ul&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import axios from &quot;axios&quot;;</span><br><span class=\"line\">import querystring from &quot;querystring&quot;;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;demoAxiosComponent&quot;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      info: [],</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    axios</span><br><span class=\"line\">      .get(&quot;http://iwenwiki.com/api/blueberrypai/getChengpinDetails.php&quot;)</span><br><span class=\"line\">      .then((res) =&gt; &#123;</span><br><span class=\"line\">        console.log(res);</span><br><span class=\"line\">        this.info = res.data.chengpinDetails;</span><br><span class=\"line\">        //console.log(res.data);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    axios</span><br><span class=\"line\">      .post(</span><br><span class=\"line\">        &quot;http://iwenwiki.com/api/blueberrypai/login.php&quot;,</span><br><span class=\"line\">        querystring.stringify(&#123;</span><br><span class=\"line\">          user_id: &quot;iwen@qq.com&quot;,</span><br><span class=\"line\">          password: &quot;iwen123&quot;,</span><br><span class=\"line\">          verification_code: &quot;crfvw&quot;,</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      )</span><br><span class=\"line\">      .then((res) =&gt; &#123;</span><br><span class=\"line\">        console.log(res);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"全局引用\"><a href=\"#全局引用\" class=\"headerlink\" title=\"全局引用\"></a>全局引用</h2><p>修改 main.js 配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;./App.vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&quot;axios&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>);</span><br><span class=\"line\">app.<span class=\"property\">config</span>.<span class=\"property\">globalProperties</span>.<span class=\"property\">$axios</span> = axios;</span><br><span class=\"line\">app.<span class=\"title function_\">mount</span>(<span class=\"string\">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"网络请求封装\"><a href=\"#网络请求封装\" class=\"headerlink\" title=\"网络请求封装\"></a>网络请求封装</h2><p>在 src&#x2F;utils&#x2F;request.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&quot;axios&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> queryString <span class=\"keyword\">from</span> <span class=\"string\">&quot;querystring&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> instance = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">//网络请求的公共配置</span></span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">5000</span>,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">errorHandle</span> = (<span class=\"params\">status, info</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (status) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">400</span>:</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;语义错误&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">500</span>:</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;服务器错误&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">502</span>:</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;服务器无响应&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(info);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 拦截器发送之前</span></span><br><span class=\"line\">instance.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// config 包含网络请求所有信息</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (config.<span class=\"property\">method</span> === <span class=\"string\">&quot;post&quot;</span>) &#123;</span><br><span class=\"line\">      config.<span class=\"property\">data</span> = queryString.<span class=\"title function_\">stringify</span>(config.<span class=\"property\">data</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> config;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(error);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">//获取数据之前</span></span><br><span class=\"line\">instance.<span class=\"property\">interceptors</span>.<span class=\"property\">response</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response.<span class=\"property\">status</span> == <span class=\"string\">&quot;200&quot;</span></span><br><span class=\"line\">      ? <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(response)</span><br><span class=\"line\">      : <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(response);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//整个网络请求错误</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; response &#125; = error;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(response);</span><br><span class=\"line\">    <span class=\"title function_\">errorHandle</span>(response.<span class=\"property\">status</span>, response.<span class=\"property\">info</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> instance;</span><br></pre></td></tr></table></figure>\n\n<p>创建 src\\api\\path.js 和 src\\api\\index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// path</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> base = &#123;</span><br><span class=\"line\">  <span class=\"attr\">baseUrl</span>: <span class=\"string\">&quot;http://iwenwiki.com&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">chengpin</span>: <span class=\"string\">&quot;/api/blueberrypai/getChengpinDetails.php&quot;</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> base;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&quot;../utils/request&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&quot;./path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> api = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 成品详情地址</span></span><br><span class=\"line\">  <span class=\"title function_\">getChengpinDetails</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//console.log(&#x27;地址&#x27;+path.baseUrl+base.chengpin);</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> axios.<span class=\"title function_\">get</span>(path.<span class=\"property\">baseUrl</span> + path.<span class=\"property\">chengpin</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> api;</span><br></pre></td></tr></table></figure>\n\n<p>在组件中的使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> api <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../api/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&quot;demoAxiosComponent&quot;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">mounted</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            api.<span class=\"title function_\">getChengpinDetails</span>().<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>&#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">data</span>);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置跨域请求\"><a href=\"#配置跨域请求\" class=\"headerlink\" title=\"配置跨域请求\"></a>配置跨域请求</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//vue.config.js 文件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; defineConfig &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;@vue/cli-service&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">defineConfig</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">transpileDependencies</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">7070</span>,</span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;/cinema&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&quot;http://localhost:9080/&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>组件中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">$axios</span>.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;cinema/GetFilmList&quot;</span>).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">info</span> = res.<span class=\"property\">data</span>.<span class=\"property\">chengpinDetails</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">data</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"路由配置\"><a href=\"#路由配置\" class=\"headerlink\" title=\"路由配置\"></a>路由配置</h1><ol>\n<li>安装路由<br>cnpm install –save vue-router</li>\n<li>路由传递参数</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createRouter, createWebHashHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">HomeView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;../views/HomeView.vue&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/news&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;news&quot;</span>,</span><br><span class=\"line\">    <span class=\"comment\">//异步加载</span></span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../views/NewView.vue&quot;</span>),</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/newsdetails/:name&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;newsdetails&quot;</span>,</span><br><span class=\"line\">    <span class=\"comment\">//异步加载</span></span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../views/NewDetailsView.vue&quot;</span>),</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHashHistory</span>(),</span><br><span class=\"line\">  routes,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br></pre></td></tr></table></figure>\n\n<p>带参</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- news页面 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;home&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>新闻<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/newsdetails/百度&quot;</span>&gt;</span>百度新闻<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/newsdetails/头条&quot;</span>&gt;</span>头条新闻<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/newsdetails/网易&quot;</span>&gt;</span>网易新闻<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>跳转的页面</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- /newdetail/:name --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>新闻详情<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $route.params.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"嵌套路由配置\"><a href=\"#嵌套路由配置\" class=\"headerlink\" title=\"嵌套路由配置\"></a>嵌套路由配置</h2><p><img data-src=\"/assets/tuli1.jpg\" alt=\"项目依赖\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/about&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;about&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span></span><br><span class=\"line\">      <span class=\"keyword\">import</span>(<span class=\"comment\">/* webpackChunkName: &quot;about&quot; */</span> <span class=\"string\">&quot;../views/AboutView.vue&quot;</span>),</span><br><span class=\"line\">    <span class=\"comment\">// 默认先跳转us</span></span><br><span class=\"line\">    <span class=\"attr\">redirect</span>: <span class=\"string\">&quot;/about/us&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">children</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&quot;us&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../views/AboutSub/AboutUs.vue&quot;</span>),</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&quot;info&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../views/AboutSub/AboutInfo.vue&quot;</span>),</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<p>about 页面</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;about&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>关于<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/about/us&quot;</span>&gt;</span>关于我们<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/about/info&quot;</span>&gt;</span>关于信息<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">router-view</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"vue-状态管理\"><a href=\"#vue-状态管理\" class=\"headerlink\" title=\"vue 状态管理\"></a>vue 状态管理</h1><h2 id=\"简单版\"><a href=\"#简单版\" class=\"headerlink\" title=\"简单版\"></a>简单版</h2><ol>\n<li>下载库</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install --save vuex</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>store\\index.js</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&quot;axios&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">createStore</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">counter</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">getCounter</span>(<span class=\"params\">state</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.<span class=\"property\">counter</span> &gt; <span class=\"number\">0</span> ? state.<span class=\"property\">counter</span> : <span class=\"string\">&quot;counter数据异常&quot;</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">addCounter</span>(<span class=\"params\">state, num</span>) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">counter</span> += num;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 异步操作</span></span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">asyncAddCounter</span>(<span class=\"params\">&#123; commit &#125;</span>) &#123;</span><br><span class=\"line\">      axios.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;http://iwenwiki.com/api/generator/list.php&quot;</span>).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">commit</span>(<span class=\"string\">&quot;addCounter&quot;</span>, res.<span class=\"property\">data</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;&#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>app.vue</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;home&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>counter=&#123;&#123; $store.getters.getCounter &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; getCounter &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;addClickHandle&quot;</span> &gt;</span>添加<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;asyncClickHandle&quot;</span>&gt;</span>异步<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">import</span> &#123;mapGetters,mapMutations,mapActions&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;HomeView&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">methods</span>:&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    ...<span class=\"title function_\">mapMutations</span>([<span class=\"string\">&#x27;addCounter&#x27;</span>]),</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    ...<span class=\"title function_\">mapActions</span>([<span class=\"string\">&#x27;asyncAddCounter&#x27;</span>]),</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title function_\">addClickHandle</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"comment\">//固定调用方式</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"comment\">//this.$store.commit(&#x27;addCounter&#x27;,20)</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">addCounter</span>(<span class=\"number\">20</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title function_\">asyncClickHandle</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">asyncAddCounter</span>()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"comment\">// this.$store.dispatch(&#x27;asyncAddCounter&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">computed</span>:&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    ...<span class=\"title function_\">mapGetters</span>([<span class=\"string\">&#x27;getCounter&#x27;</span>]),</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>main.js</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> strore <span class=\"keyword\">from</span> <span class=\"string\">&quot;./store&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>).<span class=\"title function_\">use</span>(strore).<span class=\"title function_\">mount</span>(<span class=\"string\">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Vue",
                "web"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/08/18/computer-science/webLearning/javascript/Day1/",
            "url": "https://vereatorm.github.io/2023/08/18/computer-science/webLearning/javascript/Day1/",
            "title": "JavaSrcipt",
            "date_published": "2023-08-17T16:00:00.000Z",
            "content_html": "<h1 id=\"javaScript-引擎\"><a href=\"#javaScript-引擎\" class=\"headerlink\" title=\"javaScript 引擎\"></a>javaScript 引擎</h1><h2 id=\"编译与解释\"><a href=\"#编译与解释\" class=\"headerlink\" title=\"编译与解释\"></a>编译与解释</h2><p>现代 JavaScript 引擎现在不再使用简单的解释，而是混合使用编译和解释，称为即时编译。这种方法基本上是将整个代码一次性编译成机器代码，然后立即执行。编译后立即执行。因此，当一段 JavaScript 代码进入引擎时，第一步是解析代码，这本质上意味着读取代码。在解析过程中，代码被解析为称为抽象语法树或 AST 的数据结构。其工作原理是首先将每行代码分割成对语言有意义的片段，例如 const 或 function 关键字，然后以结构化方式将所有这些片段保存到树中。此步骤还会检查是否存在任何语法错误，并且生成的树稍后将用于生成机器代码。</p>\n<h1 id=\"变量的作用域\"><a href=\"#变量的作用域\" class=\"headerlink\" title=\"变量的作用域\"></a>变量的作用域</h1><ol>\n<li>var<br>同一个 function 范围内均可访问 如果先使用后定义，则会 undefined</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">aaa</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> age = <span class=\"number\">12</span>;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">bbb</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> c = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">bbb</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">aaa</span>();</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>let&#x2F;const<br>block scope 范围内均可访问，出了块级访问区则报错({})<br>const 不可改变值,数组可以改变[index]改变<br>必须先初始化再使用</li>\n</ol>\n<h1 id=\"this-关键字\"><a href=\"#this-关键字\" class=\"headerlink\" title=\"this 关键字\"></a>this 关键字</h1><p>箭头 函数没有自己的 this，只能访问父级的 this，不访问本级的 this</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> joans = &#123;</span><br><span class=\"line\">  <span class=\"attr\">year</span>: <span class=\"number\">2003</span>,</span><br><span class=\"line\">  <span class=\"attr\">calcAge</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(this);</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">greet</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Solution 1</span></span><br><span class=\"line\">    <span class=\"comment\">//外部存一个变量 供内部访问</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> self = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> isMillenial = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2023</span> - self.<span class=\"property\">year</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"title function_\">isMillenial</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// solution2</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">isMillenial1</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2023</span> - self.<span class=\"property\">year</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"title function_\">isMillenial1</span>();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// joans.calcAge();</span></span><br><span class=\"line\">joans.<span class=\"title function_\">greet</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> matila = &#123;</span><br><span class=\"line\">  <span class=\"attr\">year</span>: <span class=\"number\">2018</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">matila.<span class=\"property\">calcAge</span> = joans.<span class=\"property\">calcAge</span>;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"引用数据类型\"><a href=\"#引用数据类型\" class=\"headerlink\" title=\"引用数据类型\"></a>引用数据类型</h1><p><img data-src=\"/assets/referenceValue.jpg\" alt=\"引用数据类型\"></p>\n<ol>\n<li>一开始再栈中声明变量，栈中变量的 value 指向堆中的地址</li>\n<li>friend&#x3D;me，在栈中指向同一个地址，</li>\n<li>改变 friend 的值，将直接改变堆中的地址</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> me = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;Joans&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">31</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> friend = me;</span><br><span class=\"line\">friend.<span class=\"property\">age</span> = <span class=\"number\">20</span>;</span><br><span class=\"line\">friend.<span class=\"property\">name</span> = <span class=\"string\">&quot;hweq&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`friend:<span class=\"subst\">$&#123;friend.name&#125;</span>,<span class=\"subst\">$&#123;friend.age&#125;</span>`</span>); <span class=\"comment\">//&#123;name: &#x27;hweq&#x27;, age: 20&#125;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(me); <span class=\"comment\">//&#123;name: &#x27;hweq&#x27;, age: 20&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//结果指向的将会是同一个地址</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"浅拷贝\"><a href=\"#浅拷贝\" class=\"headerlink\" title=\"浅拷贝\"></a>浅拷贝</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Shallow copy object 浅拷贝 若拷贝的对象中还有引用类型，指向的还将会是同一块内存地址</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> jessica2 = &#123;</span><br><span class=\"line\">  <span class=\"attr\">firstName</span>: <span class=\"string\">&quot;Jessica&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">lastName</span>: <span class=\"string\">&quot;Williams&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">28</span>,</span><br><span class=\"line\">  <span class=\"attr\">friends</span>: [<span class=\"string\">&quot;abz&quot;</span>, <span class=\"string\">&quot;dsz&quot;</span>],</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> jessicaCopy = <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(&#123;&#125;, jessica2);</span><br><span class=\"line\">jessicaCopy.<span class=\"property\">lastName</span> = <span class=\"string\">&quot;Davis&quot;</span>;</span><br><span class=\"line\">jessicaCopy.<span class=\"property\">friends</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;parena&quot;</span>);</span><br><span class=\"line\">jessicaCopy.<span class=\"property\">friends</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;marry&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Before marriage:&quot;</span>, jessica2);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;After marriage:&quot;</span>, jessicaCopy);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解构\"><a href=\"#解构\" class=\"headerlink\" title=\"解构\"></a>解构</h2><h3 id=\"解构数组\"><a href=\"#解构数组\" class=\"headerlink\" title=\"解构数组\"></a>解构数组</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//destructure array</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> restaurant = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;classico Italiano &quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">location</span>: <span class=\"string\">&quot;Via Angelo Tavanti 23,Firenze,Italy &quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">categories</span>: [<span class=\"string\">&quot;Italian&quot;</span>, <span class=\"string\">&quot;Pizzeria &quot;</span>, <span class=\"string\">&quot;Vegetarian &quot;</span>, <span class=\"string\">&quot;organic &quot;</span>],</span><br><span class=\"line\">  <span class=\"attr\">starterMenu</span>: [<span class=\"string\">&quot;Focaccia &quot;</span>, <span class=\"string\">&quot;Bruschetta&quot;</span>, <span class=\"string\">&quot;GarlicBread&quot;</span>, <span class=\"string\">&quot;Caprese Salad &quot;</span>],</span><br><span class=\"line\">  <span class=\"attr\">mainMenu</span>: [<span class=\"string\">&quot;Pizza&quot;</span>, <span class=\"string\">&quot;Pasta&quot;</span>, <span class=\"string\">&quot;Risotto &quot;</span>],</span><br><span class=\"line\">  <span class=\"attr\">order</span>: <span class=\"keyword\">function</span> (<span class=\"params\">starterindex, mainIndex</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"variable language_\">this</span>.<span class=\"property\">starterMenu</span>[starterindex], <span class=\"variable language_\">this</span>.<span class=\"property\">mainMenu</span>[mainIndex]];</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//取出第一个元素和第二个元素</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [first, second] = restaurant.<span class=\"property\">categories</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(first, second);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//取出第一个元素和第三个元素</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [first1, , second1] = restaurant.<span class=\"property\">categories</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(first1, second1);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//交换两个值</span></span><br><span class=\"line\">[first, second] = [second, first];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(first, second);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//receive 2 return values</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> [strater, main] = restaurant.<span class=\"title function_\">order</span>(<span class=\"number\">2</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(strater, main);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(restaurant.<span class=\"property\">categories</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> nested = [<span class=\"number\">2</span>, <span class=\"number\">4</span>, [<span class=\"number\">5</span>, <span class=\"number\">6</span>]];</span><br><span class=\"line\"><span class=\"comment\">// const [i, , j] = nested;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> [i, , [j, k]] = nested;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;res&quot;</span>, i, j, k);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//default value</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> [p = <span class=\"number\">1</span>, q = <span class=\"number\">32</span>, r = <span class=\"number\">43</span>] = [<span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p, q, r);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解构对象\"><a href=\"#解构对象\" class=\"headerlink\" title=\"解构对象\"></a>解构对象</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> restaurant = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;classico Italiano &quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">location</span>: <span class=\"string\">&quot;Via Angelo Tavanti 23,Firenze,Italy &quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">categories</span>: [<span class=\"string\">&quot;Italian&quot;</span>, <span class=\"string\">&quot;Pizzeria &quot;</span>, <span class=\"string\">&quot;Vegetarian &quot;</span>, <span class=\"string\">&quot;organic &quot;</span>],</span><br><span class=\"line\">  <span class=\"attr\">starterMenu</span>: [<span class=\"string\">&quot;Focaccia &quot;</span>, <span class=\"string\">&quot;Bruschetta&quot;</span>, <span class=\"string\">&quot;GarlicBread&quot;</span>, <span class=\"string\">&quot;Caprese Salad &quot;</span>],</span><br><span class=\"line\">  <span class=\"attr\">mainMenu</span>: [<span class=\"string\">&quot;Pizza&quot;</span>, <span class=\"string\">&quot;Pasta&quot;</span>, <span class=\"string\">&quot;Risotto &quot;</span>],</span><br><span class=\"line\">  <span class=\"attr\">openingHours</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">thu</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">open</span>: <span class=\"number\">12</span>,</span><br><span class=\"line\">      <span class=\"attr\">close</span>: <span class=\"number\">22</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">fri</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">open</span>: <span class=\"number\">11</span>,</span><br><span class=\"line\">      <span class=\"attr\">close</span>: <span class=\"number\">23</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">sat</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">open</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"attr\">close</span>: <span class=\"number\">24</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">order</span>: <span class=\"keyword\">function</span> (<span class=\"params\">starterindex, mainIndex</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"variable language_\">this</span>.<span class=\"property\">starterMenu</span>[starterindex], <span class=\"variable language_\">this</span>.<span class=\"property\">mainMenu</span>[mainIndex]];</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">orderDelivery</span>: <span class=\"keyword\">function</span> (<span class=\"params\">&#123;</span></span><br><span class=\"line\"><span class=\"params\">    starterIndex = <span class=\"number\">2</span>,</span></span><br><span class=\"line\"><span class=\"params\">    time = <span class=\"string\">&quot;23:11&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">    address = <span class=\"string\">&quot;myaddress&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">  &#125;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(starterIndex, time, address);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">restaurant.<span class=\"title function_\">orderDelivery</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">time</span>: <span class=\"string\">&quot;23:30&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">address</span>: <span class=\"string\">&quot;shasads&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">mainIndex</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">  <span class=\"attr\">starterIndex</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">restaurant.<span class=\"title function_\">orderDelivery</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">mainIndex</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">  <span class=\"attr\">starterIndex</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//解构对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; name, openingHours, categories &#125; = restaurant;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name, openingHours, categories);</span><br><span class=\"line\"><span class=\"comment\">//console.log(openTime);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//改名</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: restaurantName,</span><br><span class=\"line\">  <span class=\"attr\">openingHours</span>: hours,</span><br><span class=\"line\">  <span class=\"attr\">categories</span>: tags,</span><br><span class=\"line\">&#125; = restaurant;</span><br><span class=\"line\"><span class=\"comment\">// console.log(restaurantName, hours, tags);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; menu = [], <span class=\"attr\">starterMenu</span>: starters = [] &#125; = restaurant;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`menu=<span class=\"subst\">$&#123;menu&#125;</span>, starterMenu=<span class=\"subst\">$&#123;starters&#125;</span>`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//mutating varible变异变量</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">111</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">999</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123; <span class=\"attr\">a</span>: <span class=\"number\">23</span>, <span class=\"attr\">b</span>: <span class=\"number\">90</span>, <span class=\"attr\">c</span>: <span class=\"number\">14</span> &#125;;</span><br><span class=\"line\">(&#123; a, b &#125; = obj);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a, b);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//nested object 嵌套变量</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">sat</span>: &#123; open, close &#125;,</span><br><span class=\"line\">&#125; = hours;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(open, close);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"扩展运算符\"><a href=\"#扩展运算符\" class=\"headerlink\" title=\"扩展运算符\"></a>扩展运算符</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 扩展运算符</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> restaurant = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;classico Italiano &quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">location</span>: <span class=\"string\">&quot;Via Angelo Tavanti 23,Firenze,Italy &quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">categories</span>: [<span class=\"string\">&quot;Italian&quot;</span>, <span class=\"string\">&quot;Pizzeria &quot;</span>, <span class=\"string\">&quot;Vegetarian &quot;</span>, <span class=\"string\">&quot;organic &quot;</span>],</span><br><span class=\"line\">  <span class=\"attr\">starterMenu</span>: [<span class=\"string\">&quot;Focaccia &quot;</span>, <span class=\"string\">&quot;Bruschetta&quot;</span>, <span class=\"string\">&quot;GarlicBread&quot;</span>, <span class=\"string\">&quot;Caprese Salad &quot;</span>],</span><br><span class=\"line\">  <span class=\"attr\">mainMenu</span>: [<span class=\"string\">&quot;Pizza&quot;</span>, <span class=\"string\">&quot;Pasta&quot;</span>, <span class=\"string\">&quot;Risotto &quot;</span>],</span><br><span class=\"line\">  <span class=\"attr\">order</span>: <span class=\"keyword\">function</span> (<span class=\"params\">starterindex, mainIndex</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"variable language_\">this</span>.<span class=\"property\">starterMenu</span>[starterindex], <span class=\"variable language_\">this</span>.<span class=\"property\">mainMenu</span>[mainIndex]];</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">orderDelivery</span>: <span class=\"keyword\">function</span> (<span class=\"params\">&#123;</span></span><br><span class=\"line\"><span class=\"params\">    starterIndex = <span class=\"number\">2</span>,</span></span><br><span class=\"line\"><span class=\"params\">    time = <span class=\"string\">&quot;23:11&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">    address = <span class=\"string\">&quot;myaddress&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">  &#125;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(starterIndex, time, address);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">orderPasta</span>: <span class=\"keyword\">function</span> (<span class=\"params\">ing1, ing2, ing3</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`Here is your declicious pasta with <span class=\"subst\">$&#123;ing1&#125;</span>,<span class=\"subst\">$&#123;ing2&#125;</span>,<span class=\"subst\">$&#123;ing3&#125;</span>`</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> newArr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, ...arr];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(newArr); <span class=\"comment\">//(5) [1, 2, 7, 9, 8]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> newMenu = [...restaurant.<span class=\"property\">mainMenu</span>, <span class=\"string\">&quot;vegetables&quot;</span>, <span class=\"string\">&quot;ice&quot;</span>];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(newMenu);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">&quot;jonas&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> letter = [...str, <span class=\"string\">&quot;S&quot;</span>];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(letter);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> ingredients = [<span class=\"string\">&quot;vegetable&quot;</span>, <span class=\"string\">&quot;apple&quot;</span>, <span class=\"string\">&quot;meet&quot;</span>];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(...ingredients);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(restaurant.<span class=\"title function_\">orderPasta</span>(...ingredients));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> newRestaurant = &#123; <span class=\"attr\">foundedIn</span>: <span class=\"number\">1998</span>, ...restaurant, <span class=\"attr\">founder</span>: <span class=\"string\">&quot;Guiseppe&quot;</span> &#125;;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(newRestaurant);</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "web",
                "javaScript"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/08/01/computer-science/java/springboot/Day3/",
            "url": "https://vereatorm.github.io/2023/08/01/computer-science/java/springboot/Day3/",
            "title": "SpringBoot",
            "date_published": "2023-08-01T14:38:57.763Z",
            "content_html": "<h1 id=\"Spring-事务管理\"><a href=\"#Spring-事务管理\" class=\"headerlink\" title=\"Spring 事务管理\"></a>Spring 事务管理</h1><h2 id=\"rollbackFor\"><a href=\"#rollbackFor\" class=\"headerlink\" title=\"rollbackFor\"></a>rollbackFor</h2><p>默认情况下，只有出现 RuntimeException 才回滚异常。rollbackFor 属性用于控制出现何种异常类型</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"meta\">@Transactional(rollbackFor = Exception.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">deleteDept</span><span class=\"params\">(Integer id)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> deptMapper.deleteById(id);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">throw</span>  <span class=\"keyword\">new</span> <span class=\"title class_\">Exception</span>(<span class=\"string\">&quot;错误&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">res1</span> <span class=\"operator\">=</span> empMapper.deleteEmpByDept(id);</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  res!=<span class=\"number\">0</span>&amp;&amp;res1!=<span class=\"number\">0</span>?<span class=\"number\">1</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//设置日志</span></span><br><span class=\"line\">logging.level.org.springframework.jdbc.core.JdbcTemplate=debug</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"propagation\"><a href=\"#propagation\" class=\"headerlink\" title=\"propagation\"></a>propagation</h2><p>事务传播行为：指的是当一个事务方法被另一个事务方法调用时，这个事务方法如何进行事务控制</p>\n<h3 id=\"事务属性-传播行为\"><a href=\"#事务属性-传播行为\" class=\"headerlink\" title=\"事务属性-传播行为\"></a>事务属性-传播行为</h3><table>\n<thead>\n<tr>\n<th align=\"left\">属性值</th>\n<th align=\"left\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">REQUIRED</td>\n<td align=\"left\">【默认值】需要事务，有则加入，无则创建新事务</td>\n</tr>\n<tr>\n<td align=\"left\">REQUIRES_NEW</td>\n<td align=\"left\">需要新事务，无论有无，总是创建新事务</td>\n</tr>\n<tr>\n<td align=\"left\">SUPPORTS</td>\n<td align=\"left\">支持事务，有则加入，无则在无事务状态中运行</td>\n</tr>\n<tr>\n<td align=\"left\">NOT_SUPPORTED</td>\n<td align=\"left\">不支持事务，在无事务状态下运行,如果当前存在已有事务,则挂起当前</td>\n</tr>\n<tr>\n<td align=\"left\">MANDATORY</td>\n<td align=\"left\">必须有事务，否则抛异常</td>\n</tr>\n<tr>\n<td align=\"left\">NEVER</td>\n<td align=\"left\">必须没事务，否则抛异常</td>\n</tr>\n</tbody></table>\n<h1 id=\"AOP\"><a href=\"#AOP\" class=\"headerlink\" title=\"AOP\"></a>AOP</h1><p>场景<br>记录操作日志-&gt; 权限控制-&gt; 事务处理-&gt;</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-aop<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span>  <span class=\"comment\">//IOC</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span>     <span class=\"comment\">//AOP</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TimeAspect</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(* com.example.demo1.Service.*.*(..))&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Around(&quot;execution(* com.example.demo1.Service.*.*(..))&quot;)</span> <span class=\"comment\">//切入点表达式</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  Object <span class=\"title function_\">recordTime</span><span class=\"params\">(ProceedingJoinPoint joinPoint)</span> <span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 1. 记录开始时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">begin</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">        <span class=\"comment\">//调用原始方法运行</span></span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> joinPoint.proceed();</span><br><span class=\"line\">        <span class=\"comment\">//记录结束时间</span></span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">end</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\"></span><br><span class=\"line\">        log.info(joinPoint.getSignature()+<span class=\"string\">&quot;方法执行时间&#123;&#125;&quot;</span>,end-begin);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span>  result;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"AOP-核心概念\"><a href=\"#AOP-核心概念\" class=\"headerlink\" title=\"AOP 核心概念\"></a>AOP 核心概念</h2><ol>\n<li>连接点:JoinPoint,可以被 AOP 控制的方法（暗指方法执行时的相关信息）</li>\n<li>通知:Advice,指的哪些重复的逻辑，也就是共性功能（最终体现为一个方法）</li>\n<li>切入点: Pointcut，匹配连接点的条件，通知仅会在切入点方法执行时被应用</li>\n</ol>\n<h2 id=\"Conditional\"><a href=\"#Conditional\" class=\"headerlink\" title=\"@Conditional\"></a>@Conditional</h2><p>我们在跟踪 SpringBoot 自动配置的源码的时候，在自动配置类声明 bean 的时候，除了在方法上加了一个@Bean 注解以外，还会经常用到一个注解，就是以 Conditional 开头的这一类的注解。以 Conditional 开头的这些注解都是条件装配的注解。下面我们就来介绍下条件装配注解。</p>\n<p>@Conditional 注解：</p>\n<ul>\n<li>作用：按照一定的条件进行判断，在满足给定条件后才会注册对应的 bean 对象到 Spring 的 IOC 容器中。</li>\n<li>位置：方法、类</li>\n<li>@Conditional 本身是一个父注解，派生出大量的子注解：<ul>\n<li>@ConditionalOnClass：判断环境中有对应字节码文件，才注册 bean 到 IOC 容器。</li>\n<li>@ConditionalOnMissingBean：判断环境中没有对应的 bean(类型或名称)，才注册 bean 到 IOC 容器。</li>\n<li>@ConditionalOnProperty：判断配置文件中有对应属性和值，才注册 bean 到 IOC 容器。</li>\n</ul>\n</li>\n</ul>\n<p>下面我们通过代码来演示下 Conditional 注解的使用：</p>\n<ul>\n<li>@ConditionalOnClass 注解</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HeaderConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@ConditionalOnClass(name=&quot;io.jsonwebtoken.Jwts&quot;)</span><span class=\"comment\">//环境中存在指定的这个类，才会将该bean加入IOC容器</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> HeaderParser <span class=\"title function_\">headerParser</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HeaderParser</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//省略其他代码...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>pom.xml</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--JWT令牌--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.jsonwebtoken<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jjwt<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.9.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>测试类</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AutoConfigurationTests</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ApplicationContext applicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testHeaderParser</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(applicationContext.getBean(HeaderParser.class));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//省略其他代码...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>因为 io.jsonwebtoken.Jwts 字节码文件在启动 SpringBoot 程序时已存在，所以创建 HeaderParser 对象并注册到 IOC 容器中。</p>\n</blockquote>\n<ul>\n<li>@ConditionalOnMissingBean 注解</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HeaderConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@ConditionalOnMissingBean</span> <span class=\"comment\">//不存在该类型的bean，才会将该bean加入IOC容器</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> HeaderParser <span class=\"title function_\">headerParser</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HeaderParser</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//省略其他代码...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>执行 testHeaderParser()测试方法：</p>\n<p><img data-src=\"/assets/image-20230115211029855.png\" alt=\"image-20230115211029855\"></p>\n<p>SpringBoot 在调用@Bean 标识的 headerParser()前，IOC 容器中是没有 HeaderParser 类型的 bean，所以 HeaderParser 对象正常创建，并注册到 IOC 容器中。</p>\n</blockquote>\n<p>再次修改@ConditionalOnMissingBean 注解：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HeaderConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@ConditionalOnMissingBean(name=&quot;deptController2&quot;)</span><span class=\"comment\">//不存在指定名称的bean，才会将该bean加入IOC容器</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> HeaderParser <span class=\"title function_\">headerParser</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HeaderParser</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//省略其他代码...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>执行 testHeaderParser()测试方法：</p>\n<p><img data-src=\"/assets/image-20230115211351681.png\" alt=\"image-20230115211351681\"></p>\n<p>因为在 SpringBoot 环境中不存在名字叫 deptController2 的 bean 对象，所以创建 HeaderParser 对象并注册到 IOC 容器中。</p>\n</blockquote>\n<p>再次修改@ConditionalOnMissingBean 注解：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HeaderConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@ConditionalOnMissingBean(HeaderConfig.class)</span><span class=\"comment\">//不存在指定类型的bean，才会将bean加入IOC容器</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> HeaderParser <span class=\"title function_\">headerParser</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HeaderParser</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//省略其他代码...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AutoConfigurationTests</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ApplicationContext applicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testHeaderParser</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(applicationContext.getBean(HeaderParser.class));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//省略其他代码...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>执行 testHeaderParser()测试方法：</p>\n<p><img data-src=\"/assets/image-20230115211957191.png\" alt=\"image-20230115211957191\"></p>\n<p>因为 HeaderConfig 类中添加@Configuration 注解，而@Configuration 注解中包含了@Component，所以 SpringBoot 启动时会创建 HeaderConfig 类对象，并注册到 IOC 容器中。</p>\n<p>当 IOC 容器中有 HeaderConfig 类型的 bean 存在时，不会把创建 HeaderParser 对象注册到 IOC 容器中。而 IOC 容器中没有 HeaderParser 类型的对象时，通过 getBean(HeaderParser.class)方法获取 bean 对象时，引发异常：NoSuchBeanDefinitionException</p>\n</blockquote>\n<ul>\n<li>@ConditionalOnProperty 注解（这个注解和配置文件当中配置的属性有关系）</li>\n</ul>\n<p>先在 application.yml 配置文件中添加如下的键值对：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">itheima</span></span><br></pre></td></tr></table></figure>\n\n<p>在声明 bean 的时候就可以指定一个条件@ConditionalOnProperty</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HeaderConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@ConditionalOnProperty(name =&quot;name&quot;,havingValue = &quot;itheima&quot;)</span><span class=\"comment\">//配置文件中存在指定属性名与值，才会将bean加入IOC容器</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> HeaderParser <span class=\"title function_\">headerParser</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HeaderParser</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> HeaderGenerator <span class=\"title function_\">headerGenerator</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HeaderGenerator</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>执行 testHeaderParser()测试方法：</p>\n<p><img data-src=\"/assets/image-20230115220235511.png\" alt=\"image-20230115220235511\"></p>\n</blockquote>\n<p>修改@ConditionalOnProperty 注解： havingValue 的值修改为”itheima2”</p>\n<h1 id=\"maven\"><a href=\"#maven\" class=\"headerlink\" title=\"maven\"></a>maven</h1><h2 id=\"继承关系实现\"><a href=\"#继承关系实现\" class=\"headerlink\" title=\"继承关系实现\"></a>继承关系实现</h2><h3 id=\"继承关系\"><a href=\"#继承关系\" class=\"headerlink\" title=\"继承关系\"></a>继承关系</h3><ol>\n<li>创建 maven 模块的父类 打包成 pom tlias-parent</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.itheima<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>tlias-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.7.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">relativePath</span>/&gt;</span> <span class=\"comment\">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">     <span class=\"comment\">&lt;!--lombok--&gt;</span></span><br><span class=\"line\">     <span class=\"comment\">&lt;!-- ... 子工程定义需要的依赖 --&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>在子工程的 xml 文件里，配置继承关系</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.itheima<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>tlias-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">relativePath</span>&gt;</span>../tlias-parent/pom.xml<span class=\"tag\">&lt;/<span class=\"name\">relativePath</span>&gt;</span>     <span class=\"comment\">&lt;!-- 父工程的相对位置 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.itheima<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>tlias-pojo<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"版本锁定\"><a href=\"#版本锁定\" class=\"headerlink\" title=\"版本锁定\"></a>版本锁定</h3><p>在 maven 中，可以在父工程的 pom 文件中，通过<dependencyManagement>来统一管理依赖版本</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">lombok.version</span>&gt;</span>1.18.28<span class=\"tag\">&lt;/<span class=\"name\">lombok.version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">jwt.version</span>&gt;</span>0.9.1<span class=\"tag\">&lt;/<span class=\"name\">jwt.version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.jsonwebtoken<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jjwt<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;jwt.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"聚合\"><a href=\"#聚合\" class=\"headerlink\" title=\"聚合\"></a>聚合</h2><p>添加一个标签</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- tlias-parent --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modules</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">module</span>&gt;</span>../tlias-pojo<span class=\"tag\">&lt;/<span class=\"name\">module</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">module</span>&gt;</span>../tlias-utils<span class=\"tag\">&lt;/<span class=\"name\">module</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">module</span>&gt;</span>../tlias-web-management<span class=\"tag\">&lt;/<span class=\"name\">module</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">modules</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>三个项目分别 install<br>再将三个 module 分别执行 clean 再<br>然后再对 parent 项目进行打包</p>\n",
            "tags": [
                "JAVA",
                "事务"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/07/18/computer-science/java/spring/SpringDay2/",
            "url": "https://vereatorm.github.io/2023/07/18/computer-science/java/spring/SpringDay2/",
            "title": "Spring",
            "date_published": "2023-07-17T16:00:00.000Z",
            "content_html": "<p>note info:<br>第二天学习 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUZpNHkxUzdpeD9wPTYmdmRfc291cmNlPWVlNzYwYmY3YTRkODlkM2VlOTJmNGY4M2YzYTY4MmM5\">SSM 三件套</span></p>\n<h1 id=\"注解开发\"><a href=\"#注解开发\" class=\"headerlink\" title=\"注解开发\"></a>注解开发</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//配置类</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@ComponentScan(&quot;com.demo&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@PropertySource(&quot;jdbc.properties&quot;)</span>  <span class=\"comment\">//加载配置</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringConfig</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//给service层添加注解</span></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span>, InitializingBean, DisposableBean &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">//给dao层添加注解</span></span><br><span class=\"line\"><span class=\"meta\">@Repository(&quot;bookDao&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">//main</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">( String[] args )</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ApplicationContext ctx=<span class=\"keyword\">new</span> <span class=\"title class_\">AnnotationConfigApplicationContext</span>(SpringConfig.class);</span><br><span class=\"line\">    <span class=\"type\">BookDaoImpl</span> <span class=\"variable\">bookDao</span> <span class=\"operator\">=</span> ctx.getBean(BookDaoImpl.class);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"bean-作用范围\"><a href=\"#bean-作用范围\" class=\"headerlink\" title=\"bean 作用范围\"></a>bean 作用范围</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Repository(&quot;bookDao&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">//@Scope(&quot;singleton&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@Scope(&quot;prototype&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//自动装配值</span></span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;aaaa&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"meta\">@PostConstruct</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">init</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;init....&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@PreDestroy</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">destroy</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;destroy....&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;your name is&quot;</span>+name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"依赖注入\"><a href=\"#依赖注入\" class=\"headerlink\" title=\"依赖注入\"></a>依赖注入</h1><h2 id=\"自动装配\"><a href=\"#自动装配\" class=\"headerlink\" title=\"自动装配\"></a>自动装配</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Repository(&quot;bookDao&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">//@Scope(&quot;singleton&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@Scope(&quot;prototype&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;username&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"meta\">@Qualifier(&quot;bookDao&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookDao bookDao;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book service save ....&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第三方-bean-管理\"><a href=\"#第三方-bean-管理\" class=\"headerlink\" title=\"第三方 bean 管理\"></a>第三方 bean 管理</h2><ol>\n<li>导入式</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span>  <span class=\"comment\">//设置配置的注解，可以直接通过ComponentScan扫描导入配置</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JdbcConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> DataSource <span class=\"title function_\">dataSource</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        DruidDataSource ds=<span class=\"keyword\">new</span> <span class=\"title class_\">DruidDataSource</span>();</span><br><span class=\"line\">        ds.setDriverClassName(<span class=\"string\">&quot;$&#123;jdbc.driver&#125;&quot;</span>);</span><br><span class=\"line\">        ds.setUsername(<span class=\"string\">&quot;$&#123;jdbc.username&#125;&quot;</span>);</span><br><span class=\"line\">        ds.setUrl(<span class=\"string\">&quot;$&#123;jdbc.url&#125;&quot;</span>);</span><br><span class=\"line\">        ds.setPassword(<span class=\"string\">&quot;$&#123;jdbc.password&#125;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>  ds;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//使用@improt注解手动添加配置</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@ComponentScan(&quot;com.demo&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@PropertySource(&#123;&quot;jdbc.properties&quot;&#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Import(&#123;JdbcConfig.class&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "JAVA",
                "Spring"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/07/17/computer-science/java/spring/SpringDay1/",
            "url": "https://vereatorm.github.io/2023/07/17/computer-science/java/spring/SpringDay1/",
            "title": "Spring",
            "date_published": "2023-07-16T16:00:00.000Z",
            "content_html": "<p>note info:<br>第一天学习 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUZpNHkxUzdpeD9wPTYmdmRfc291cmNlPWVlNzYwYmY3YTRkODlkM2VlOTJmNGY4M2YzYTY4MmM5\">SSM三件套</span>  </p>\n<h1 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h1><h2 id=\"IOC入门案例（XML版）\"><a href=\"#IOC入门案例（XML版）\" class=\"headerlink\" title=\"IOC入门案例（XML版）\"></a>IOC入门案例（XML版）</h2><ol>\n<li>添加依赖<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.2.10.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>定义Spring管理的类（接口）<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BookService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookDao bookDao=<span class=\"keyword\">new</span> <span class=\"title class_\">BookDaoImpl</span>();</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book service save ....&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>创建Spring配置文件(spring config)，配置对应类作为Spring管理的Bean<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">   配置bean</span></span><br><span class=\"line\"><span class=\"comment\">   id属性给bean起名字</span></span><br><span class=\"line\"><span class=\"comment\">   class表示给bean定义类型</span></span><br><span class=\"line\"><span class=\"comment\">   --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.dao.impl.BookDaoImpl&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookService&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.service.impl.BookServiceImpl&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>初始化IOC容器，通过容器获取bean<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">App2</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        ApplicationContext ctx=<span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(<span class=\"string\">&quot;applicationContext.xml&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//        BookDaoImpl bookDao  = (BookDaoImpl) ctx.getBean(&quot;bookDao&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//        bookDao.save();</span></span><br><span class=\"line\">        <span class=\"type\">BookService</span> <span class=\"variable\">bookService</span>  <span class=\"operator\">=</span> (BookServiceImpl) ctx.getBean(<span class=\"string\">&quot;bookService&quot;</span>);</span><br><span class=\"line\">        bookService.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"DI入门\"><a href=\"#DI入门\" class=\"headerlink\" title=\"DI入门\"></a>DI入门</h2><ol>\n<li>删除new的形式创建对象的代码<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookDao bookDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBookDao</span><span class=\"params\">(BookDao bookDao)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.bookDao = bookDao;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book service save ....&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>配置service与dao之间的关系<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    配置bean</span></span><br><span class=\"line\"><span class=\"comment\">    id：给bean起名字</span></span><br><span class=\"line\"><span class=\"comment\">    name：给bean起名字</span></span><br><span class=\"line\"><span class=\"comment\">    class：给bean定义类型</span></span><br><span class=\"line\"><span class=\"comment\">    scope:是否单例， 默认为单例</span></span><br><span class=\"line\"><span class=\"comment\">    singleton:单例，property：非单例</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.dao.impl.BookDaoImpl&quot;</span> <span class=\"attr\">scope</span>=<span class=\"string\">&quot;prototype&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookService&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;service bookEbi&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.service.impl.BookServiceImpl&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--配置serice和dao的关系</span></span><br><span class=\"line\"><span class=\"comment\">    property：表示当前bean的属性</span></span><br><span class=\"line\"><span class=\"comment\">    name：表示具体哪个属性</span></span><br><span class=\"line\"><span class=\"comment\">    ref: 表示参照哪个bean(对应的bean的id/name的值)</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;bookDao&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"实例化bean-配置\"><a href=\"#实例化bean-配置\" class=\"headerlink\" title=\"实例化bean 配置\"></a>实例化bean 配置</h2><p>调用的是类的无参构造方法，调用的是private的构造方法，使用的反射</p>\n<ol>\n<li>使用静态方法实例化bean<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OrderDaoFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span> OrderDao <span class=\"title function_\">getOrderDao</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;factory  setup.....&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">OrderDaoImpl</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    &lt;bean id=<span class=\"string\">&quot;orderDao&quot;</span> class=<span class=\"string\">&quot;com.demo.SpringTest1.factory.OrderDaoFactory&quot;</span> factory-method=<span class=\"string\">&quot;getOrderDao&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/bean&gt;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">( String[] args )</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"comment\">//        OrderDao orderDao= OrderDaoFactory.getOrderDao();</span></span><br><span class=\"line\"><span class=\"comment\">//        orderDao.save();</span></span><br><span class=\"line\">        ApplicationContext ctx=<span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(<span class=\"string\">&quot;applicationContext1.xml&quot;</span>);</span><br><span class=\"line\">        OrderDao orderDao= (OrderDao) ctx.getBean(<span class=\"string\">&quot;orderDao&quot;</span>);</span><br><span class=\"line\">        orderDao.save();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></li>\n<li>使用实例工厂实例化bean<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class UserDaoFactory &#123;</span><br><span class=\"line\">    public UserDao getUserDao()&#123;</span><br><span class=\"line\">        return  new UserDaoImpl();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;bean id=&quot;userDaoFactory&quot; class=&quot;com.demo.SpringTest1.factory.UserDaoFactory&quot;/&gt;</span><br><span class=\"line\">&lt;bean id=&quot;userDao&quot; class=&quot;com.demo.SpringTest1.dao.impl.UserDaoImpl&quot;  factory-bean=&quot;userDaoFactory&quot; factory-method=&quot;getUserDao&quot;&gt;&lt;/bean&gt;</span><br></pre></td></tr></table></figure></li>\n<li>使用factoryBean实例化Bean<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.factory.UserDaoFactoryBean&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserDaoFactoryBean</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">FactoryBean</span>&lt;UserDao&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">//代替实例方法创建对象</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> UserDao <span class=\"title function_\">getObject</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserDaoImpl</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Class&lt;?&gt; getObjectType() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> UserDao.class;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isSingleton</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">( String[] args )</span></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     ApplicationContext ctx=<span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(<span class=\"string\">&quot;applicationContext1.xml&quot;</span>);</span><br><span class=\"line\">     UserDao userDao= (UserDaoImpl) ctx.getBean(<span class=\"string\">&quot;userDao&quot;</span>);</span><br><span class=\"line\">     userDao.save();</span><br><span class=\"line\">     System.out.println(userDao);</span><br><span class=\"line\">     UserDao userDao1= (UserDaoImpl) ctx.getBean(<span class=\"string\">&quot;userDao&quot;</span>);</span><br><span class=\"line\">     userDao1.save();</span><br><span class=\"line\">     System.out.println(userDao1);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"控制生命周期\"><a href=\"#控制生命周期\" class=\"headerlink\" title=\"控制生命周期\"></a>控制生命周期</h2><h3 id=\"阶段\"><a href=\"#阶段\" class=\"headerlink\" title=\"阶段\"></a>阶段</h3><ol>\n<li>创建对象(分配内存)</li>\n<li>执行构造方法</li>\n<li>执行属性注入(set)</li>\n<li>执行bean的初始化方法</li>\n<li></li>\n</ol>\n<h3 id=\"第一种方式\"><a href=\"#第一种方式\" class=\"headerlink\" title=\"第一种方式\"></a>第一种方式</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">init1</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;init......&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">destroy</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;destroy......&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao save&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        ClassPathXmlApplicationContext ctx=<span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(<span class=\"string\">&quot;applicationContext.xml&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">BookDaoImpl</span> <span class=\"variable\">bookDao</span>  <span class=\"operator\">=</span> (BookDaoImpl) ctx.getBean(<span class=\"string\">&quot;bookDao&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">        ctx.registerShutdownHook(); <span class=\"comment\">//设置关闭钩子(随时可以设置)</span></span><br><span class=\"line\">        <span class=\"comment\">//ctx.close(); 销毁</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &lt;bean id=<span class=\"string\">&quot;bookDao&quot;</span> name=<span class=\"string\">&quot;dao&quot;</span> class=<span class=\"string\">&quot;com.demo.SpringTest1.dao.impl.BookDaoImpl&quot;</span> init-method=<span class=\"string\">&quot;init1&quot;</span> destroy-method=<span class=\"string\">&quot;destroy&quot;</span>/&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"第二种方式\"><a href=\"#第二种方式\" class=\"headerlink\" title=\"第二种方式\"></a>第二种方式</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.dao.impl.BookDaoImpl&quot;</span> <span class=\"attr\">init-method</span>=<span class=\"string\">&quot;init1&quot;</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">&quot;destroy&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookService&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;service bookEbi&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.service.impl.BookServiceImpl&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--配置serice和dao的关系</span></span><br><span class=\"line\"><span class=\"comment\">    property：表示当前bean的属性</span></span><br><span class=\"line\"><span class=\"comment\">    name：表示具体哪个属性</span></span><br><span class=\"line\"><span class=\"comment\">    ref: 表示参照哪个bean(对应的bean的id/name的值)</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;bookDao&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span>, InitializingBean, DisposableBean &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookDao bookDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBookDao</span><span class=\"params\">(BookDao bookDao)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.bookDao = bookDao;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book service save ....&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">destroy</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;service destroy....&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">afterPropertiesSet</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;service init&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"setter-注入\"><a href=\"#setter-注入\" class=\"headerlink\" title=\"setter 注入\"></a>setter 注入</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//简单类型</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String str;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">int</span> num;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setStr</span><span class=\"params\">(String str)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.str = str;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setNum</span><span class=\"params\">(<span class=\"type\">int</span> num)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.num = num;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//引用类型</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookDao bookDao;</span><br><span class=\"line\"><span class=\"keyword\">private</span> UserDao userDao;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setUserDao</span><span class=\"params\">(UserDao userDao)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.userDao = userDao;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBookDao</span><span class=\"params\">(BookDao bookDao)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.bookDao = bookDao;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;service setting...&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;book service save ....&quot;</span>);</span><br><span class=\"line\">    bookDao.save();</span><br><span class=\"line\">    userDao.save();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.dao.impl.UserDaoImpl&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.dao.impl.BookDaoImpl&quot;</span> <span class=\"attr\">init-method</span>=<span class=\"string\">&quot;init1&quot;</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">&quot;destroy&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookService&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;service bookEbi&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.service.impl.BookServiceImpl&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--配置serice和dao的关系</span></span><br><span class=\"line\"><span class=\"comment\">    property：表示当前bean的属性</span></span><br><span class=\"line\"><span class=\"comment\">    name：表示具体哪个属性</span></span><br><span class=\"line\"><span class=\"comment\">    ref: 表示参照哪个bean(对应的bean的id/name的值)</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 引用类型需要创造出对应的bean --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;bookDao&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;userDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;userDao&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 简单类型 --&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;num&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;10&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;str&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;java&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"构造器注入\"><a href=\"#构造器注入\" class=\"headerlink\" title=\"构造器注入\"></a>构造器注入</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    private BookDao bookDao;</span><br><span class=\"line\">    public BookServiceImpl(BookDao bookDao) &#123;</span><br><span class=\"line\">        this.bookDao = bookDao;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">&lt;!--   name 对应形参--&gt;</span></span><br><span class=\"line\">    public BookServiceImpl(int num, String content) &#123;</span><br><span class=\"line\">        this.num = num;</span><br><span class=\"line\">        this.content = content;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;bookDao&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">constructor-arg</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;int&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">constructor-arg</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;java.lang.String&quot;</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;java&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">constructor-arg</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"依赖自动装配\"><a href=\"#依赖自动装配\" class=\"headerlink\" title=\"依赖自动装配\"></a>依赖自动装配</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.dao.impl.BookDaoImpl&quot;</span> <span class=\"attr\">init-method</span>=<span class=\"string\">&quot;init1&quot;</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">&quot;destroy&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 添加autowire属性</span></span><br><span class=\"line\"><span class=\"comment\">可选择byName或者byType</span></span><br><span class=\"line\"><span class=\"comment\"> --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookService&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;service bookEbi&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.service.impl.BookServiceImpl&quot;</span> <span class=\"attr\">autowire</span>=<span class=\"string\">&quot;byType&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>自动装配用于引用类型依赖注入，不能对简单类型进行操作</li>\n<li>使用按类型装配时( byType )必须保障容器中相同类型的bean唯一，推荐使用</li>\n<li>使用按名称装配时( byName )必须保障容器中具有指定名称的bean，因变量名与配置耦合，不推荐使用</li>\n<li>自动装配优先级低于setter注入与构造器注入，同时出现时自动装配配置失效</li>\n</ol>\n<h2 id=\"集合注入\"><a href=\"#集合注入\" class=\"headerlink\" title=\"集合注入\"></a>集合注入</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.dao.impl.BookDaoImpl&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;array&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">array</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>100<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>200<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>300<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>400<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">array</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;list&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>aasdy<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>qweaa<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>cvxvaa<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>asadwa<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;set&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">set</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>aasdy<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>aasdy<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>aasdy<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>qweaa<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>cvxvaa<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>asadwa<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">set</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;map&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">map</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;country&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;china&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;province&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;henan&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;city&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;shanghai&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">map</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;properties&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">props</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;country&quot;</span>&gt;</span>china<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;city&quot;</span>&gt;</span>shanghai<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;province&quot;</span>&gt;</span>beijing<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;whu&quot;</span>&gt;</span>ashdja<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">props</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span>[] array;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; list;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Set&lt;String&gt; set;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;String,String&gt; map;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Properties properties;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setArray</span><span class=\"params\">(<span class=\"type\">int</span>[] array)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.array = array;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setList</span><span class=\"params\">(List&lt;String&gt; list)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.list = list;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setSet</span><span class=\"params\">(Set&lt;String&gt; set)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.set = set;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMap</span><span class=\"params\">(Map&lt;String, String&gt; map)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.map = map;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setProperties</span><span class=\"params\">(Properties properties)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.properties = properties;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao save&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;遍历数组&quot;</span>+ Arrays.toString(array));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;list&quot;</span>+ list);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;set&quot;</span>+ set);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;map&quot;</span>+ map);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;properties&quot;</span>+ properties);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"案例\"><a href=\"#案例\" class=\"headerlink\" title=\"案例\"></a>案例</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdm5yZXBvc2l0b3J5LmNvbS8=\">加载依赖</span></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClassName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/db1&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;lu20031202&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;c3DataSource&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClass&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;jdbcUrl&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/db1&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;user&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;lu20031202&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;maxPoolSize&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1000&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"加载properties文件\"><a href=\"#加载properties文件\" class=\"headerlink\" title=\"加载properties文件\"></a>加载properties文件</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span>        //<span class=\"attr\">加入这句话</span></span></span><br><span class=\"line\"><span class=\"tag\">      </span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       &lt;!-- 添加命名空间 --&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       &quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--使用context空间加载文件 属性占位符</span></span><br><span class=\"line\"><span class=\"comment\">       system-properties-mode:never 不加载系统属性)</span></span><br><span class=\"line\"><span class=\"comment\">       classpath*:*.properties:可以读取所有的配置文件，包括加载的jar包</span></span><br><span class=\"line\"><span class=\"comment\">       --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">&quot;classpath*:*.properties&quot;</span> <span class=\"attr\">system-properties-mode</span>=<span class=\"string\">&quot;NEVER&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--  使用属性占位符$&#123;&#125; 读取properties中的文件--&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.demo.SpringTest1.dao.impl.BookDaoImpl&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>",
            "tags": [
                "JAVA",
                "Spring"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/07/14/computer-science/java/springboot/Day1/",
            "url": "https://vereatorm.github.io/2023/07/14/computer-science/java/springboot/Day1/",
            "title": "SpringBoot",
            "date_published": "2023-07-13T16:00:00.000Z",
            "content_html": "<p>note info:<strong>查漏补缺</strong><br>第一天复习 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW04NHkxdzdUYj9wPTExOCZzcG1faWRfZnJvbT1wYWdlRHJpdmVyJnZkX3NvdXJjZT1lZTc2MGJmN2E0ZDg5ZDNlZTkyZjRmODNmM2E2ODJjOQ==\">SpringBoot</span>  </p>\n<h1 id=\"mybatis-快速入门\"><a href=\"#mybatis-快速入门\" class=\"headerlink\" title=\"mybatis 快速入门\"></a>mybatis 快速入门</h1><p>在创建时需要<br><img data-src=\"/assets/springboot%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE.jpg\" alt=\"项目依赖\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Mapper</span></span><br><span class=\"line\"><span class=\"comment\">// 在运行时，会自动生成该接口的实现类对象(代理对象),并且讲该对象交给IOC容器管理</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Select(&quot;select id as ID,username,password,gender,addr from tb_user&quot;)</span></span><br><span class=\"line\">    List&lt;Users&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/User&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserMapper mapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/index&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">index</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        List&lt;Users&gt; users = mapper.selectAll();</span><br><span class=\"line\">        System.out.println(users);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>  users.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"数据库连接池\"><a href=\"#数据库连接池\" class=\"headerlink\" title=\"数据库连接池\"></a>数据库连接池</h1><ul>\n<li>特点</li>\n</ul>\n<ol>\n<li>数据库连接池是个容器，负责分配、管理数据库连接(Connection)资源重用</li>\n<li>它允许应用程序重复使用一个现有的数据库连接，而不是再重新建立一个</li>\n</ol>\n<ul>\n<li>优势</li>\n</ul>\n<ol>\n<li>提升系统响应速度  </li>\n<li>释放空闲时间超过最大空闲时间的连接，来避免因为没有释放连接而引起的数据库连接遗漏  </li>\n<li>避免数据库连接遗漏</li>\n</ol>\n<h1 id=\"lombok\"><a href=\"#lombok\" class=\"headerlink\" title=\"lombok\"></a>lombok</h1><p>Lombok是一个实用的Java类库，能通过注解的形式自动生成构造器、getter&#x2F;setter、equals、hashcode、toString等方法，并可以自动化生成日志变量，简化java开发、提高效率。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">注解</th>\n<th align=\"left\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">@Getter&#x2F;@Setter</td>\n<td align=\"left\">为所有的属性提供get&#x2F;set方法</td>\n</tr>\n<tr>\n<td align=\"left\">@ToString</td>\n<td align=\"left\">会给类自动生成易阅读的toString方法</td>\n</tr>\n<tr>\n<td align=\"left\">@EqualsAndHashode</td>\n<td align=\"left\">根据类所拥有的非静态字段自动重写equals方法和 hashCode方法</td>\n</tr>\n<tr>\n<td align=\"left\">@Data</td>\n<td align=\"left\">提供了更综合的生成代码功能 <strong>(@Getter +@Setter +@Tostring +@EqualsAndHashCode)</strong></td>\n</tr>\n<tr>\n<td align=\"left\">@NoArgsConstructor</td>\n<td align=\"left\">为实体类生成无参的构造器方法</td>\n</tr>\n<tr>\n<td align=\"left\">@AllArgsConstructor</td>\n<td align=\"left\">为实体类生成除了static修饰的字段之外带有各参数的构造器方法。</td>\n</tr>\n</tbody></table>\n",
            "tags": [
                "JAVA",
                "JAVASE"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/07/14/computer-science/java/springboot/Day2/",
            "url": "https://vereatorm.github.io/2023/07/14/computer-science/java/springboot/Day2/",
            "title": "SpringBoot",
            "date_published": "2023-07-13T16:00:00.000Z",
            "content_html": "<p>note info:<strong>查漏补缺</strong><br>课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW04NHkxdzdUYj9wPTExOCZzcG1faWRfZnJvbT1wYWdlRHJpdmVyJnZkX3NvdXJjZT1lZTc2MGJmN2E0ZDg5ZDNlZTkyZjRmODNmM2E2ODJjOQ==\">SpringBoot</span></p>\n<h1 id=\"Mybatis\"><a href=\"#Mybatis\" class=\"headerlink\" title=\"Mybatis\"></a>Mybatis</h1><h2 id=\"一级缓存\"><a href=\"#一级缓存\" class=\"headerlink\" title=\"一级缓存\"></a>一级缓存</h2><p>解决数据库的压力<br>client -&gt; executor &lt;–&gt; cache &lt;–&gt;DB<br>一级缓存是 SqlSession 级别的，通过同一个 SqlSession 查询的数据会被缓存，下次查询相同的数据，就会从缓存中直接获取，不会从数据库重新访问<br>使—级缓存失效的四种情况:</p>\n<ol>\n<li>不同的 SqlSession 对应不同的一级缓存</li>\n<li>同一个 SqlSession 但是查询条件不同</li>\n<li>同一个 SqlSession 两次查询期间执行了任何一次增删改操作</li>\n<li>同一个 SqlSession 两次查询期间手动清空了缓存</li>\n</ol>\n<h2 id=\"二级缓存\"><a href=\"#二级缓存\" class=\"headerlink\" title=\"二级缓存\"></a>二级缓存</h2><p>二级缓存是 SqlSessionFactory 级别，通过同一个 SqlSessionFactory 创建的 SqlSession 查询的结果会被缓存;此后若再次执行相同的查询语句，结果就会从缓存中获取<br>二级缓存开启的条件:<br><cache>在核心配置文件中，设置全局配置属性 cacheEnabled&#x3D;”true”，默认为 true，不需要设置 b&gt;在映射文件中设置标签<cache /></p>\n<h1 id=\"注解\"><a href=\"#注解\" class=\"headerlink\" title=\"注解\"></a>注解</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Mapper</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">EmpMapper</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Select(&quot;select count(*) from emp where username=#&#123;username&#125; and password=#&#123;pwd&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"type\">int</span> <span class=\"title function_\">select_user</span><span class=\"params\">(String username,String pwd)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//新增操作</span></span><br><span class=\"line\">    <span class=\"comment\">//useGenratedKeys 需要返回主键，设置返回的值</span></span><br><span class=\"line\">    <span class=\"meta\">@Options(useGeneratedKeys = true,keyProperty = &quot;id&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@Insert(&quot;insert into emp(username, name, gender, image, job, entrydate, dept_id, create_time, update_time) &quot; +</span></span><br><span class=\"line\"><span class=\"meta\">            &quot;values (#&#123;username&#125;,#&#123;name&#125;,#&#123;gender&#125;,#&#123;image&#125;,#&#123;job&#125;,#&#123;entrydate&#125;,#&#123;deptId&#125;,#&#123;createTime&#125;,#&#123;updateTime&#125;)&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">insertEmp</span><span class=\"params\">(Emp emp)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据封装\"><a href=\"#数据封装\" class=\"headerlink\" title=\"数据封装\"></a>数据封装</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//    方案一: 给字段起别名, 让别名与实体类属性一致</span></span><br><span class=\"line\">    <span class=\"meta\">@Select(&quot;select id, username, password, name, gender, image, job, entrydate, &quot; +</span></span><br><span class=\"line\"><span class=\"meta\">           &quot;dept_id deptId, create_time createTime, update_time updateTime from emp where id = #&#123;id&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Emp <span class=\"title function_\">getById</span><span class=\"params\">(Integer id)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//    方案二: 通过@Results, @Result注解手动映射封装</span></span><br><span class=\"line\">    <span class=\"meta\">@Results(&#123;</span></span><br><span class=\"line\"><span class=\"meta\">           @Result(column = &quot;dept_id&quot;, property = &quot;deptId&quot;),</span></span><br><span class=\"line\"><span class=\"meta\">           @Result(column = &quot;create_time&quot;, property = &quot;createTime&quot;),</span></span><br><span class=\"line\"><span class=\"meta\">           @Result(column = &quot;update_time&quot;, property = &quot;updateTime&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">    &#125;)</span></span><br><span class=\"line\">    <span class=\"meta\">@Select(&quot;select * from emp where id = #&#123;id&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Emp <span class=\"title function_\">getById</span><span class=\"params\">(Integer id)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Select(&quot;SELECT * from emp WHERE `name` LIKE concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;) and gender=#&#123;gender&#125; and entrydate BETWEEN #&#123;begin&#125; and  #&#123;end&#125;  order by update_time desc&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  List&lt;Emp&gt; <span class=\"title function_\">listEmp</span><span class=\"params\">(String name, Short gender, LocalDate begin , LocalDate end)</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"xml-配置文件\"><a href=\"#xml-配置文件\" class=\"headerlink\" title=\"xml 配置文件\"></a>xml 配置文件</h2><ol>\n<li>&lt; if&gt;<br>用于判断条件是否成立，如果条件为 true，则拼接 SQL。形式: &lt; if test&#x3D;”name !&#x3D; null”&gt;…&lt;&#x2F; if&gt;</li>\n<li>&lt; where&gt;<br>where 元素只会在子元素有内容的情况下才插入 where 子句，而且会自动去除子句的开头的 AND 或 OR</li>\n<li>&lt; set&gt;<br>动态地在行首插入 SET 关键字，并会删掉额外的逗号。(用在 update 语句中)</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span> <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.itheima.mapper.EmpMapper&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    动态sql--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectList&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;com.itheima.pojo.Emp&quot;</span>&gt;</span></span><br><span class=\"line\">        select  * from emp</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;name!=null&quot;</span>&gt;</span></span><br><span class=\"line\">                name like concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;)</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;gender!=null&quot;</span>&gt;</span></span><br><span class=\"line\">               and gender=#&#123;gender&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;begin != null and end!=null&quot;</span>&gt;</span></span><br><span class=\"line\">              and  entrydate between #&#123;begin&#125; and #&#123;end&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">        order by entrydate desc</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;update2&quot;</span>&gt;</span></span><br><span class=\"line\">       UPDATE emp</span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">set</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;username!=null&quot;</span>&gt;</span></span><br><span class=\"line\">            username = #&#123;username&#125;,</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;password!=null&quot;</span>&gt;</span></span><br><span class=\"line\">            `password` =  #&#123;password&#125;,</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;gender!=null&quot;</span>&gt;</span></span><br><span class=\"line\">            `gender` =  #&#123;gender&#125;,</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;image!=null&quot;</span>&gt;</span></span><br><span class=\"line\">            `image` =  #&#123;image&#125;,</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;job!=null&quot;</span>&gt;</span></span><br><span class=\"line\">            `job` = #&#123;job&#125;,</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;name!=null&quot;</span>&gt;</span></span><br><span class=\"line\">            `name` = #&#123;name&#125;,</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">set</span>&gt;</span></span><br><span class=\"line\">       WHERE `id` =  #&#123;id&#125;;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>&lt; foreach&gt;</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   List<span class=\"tag\">&lt;<span class=\"name\">Integer</span>&gt;</span> ids = Arrays.asList(13, 14, 15);</span><br><span class=\"line\">   empMapper.deleteByIds(ids);</span><br><span class=\"line\">   <span class=\"comment\">&lt;!--    -批量删除员工(18,19,20)</span></span><br><span class=\"line\"><span class=\"comment\">collection:遍历的集合</span></span><br><span class=\"line\"><span class=\"comment\">item:遍历出来的元素</span></span><br><span class=\"line\"><span class=\"comment\">separator:分隔符</span></span><br><span class=\"line\"><span class=\"comment\"> open :遍历开始前拼接的sQL片段</span></span><br><span class=\"line\"><span class=\"comment\"> close:遍历结束后拼接的SQL片段</span></span><br><span class=\"line\"><span class=\"comment\"> --&gt;</span></span><br><span class=\"line\"> <span class=\"comment\">&lt;!--    delete from emp where id in (18,19,20) --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;deleteByIds&quot;</span>&gt;</span></span><br><span class=\"line\">       delete from emp where  id in</span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;ids&quot;</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span> <span class=\"attr\">open</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">close</span>=<span class=\"string\">&quot;)&quot;</span>&gt;</span></span><br><span class=\"line\">           #&#123;id&#125;</span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>&lt; include&gt; &#x2F; &lt; sql&gt;</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sql</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;commonSelectEmp&quot;</span>&gt;</span></span><br><span class=\"line\">        select id, username, password, name, gender, image, job, entrydate, dept_id, create_time, update_time from emp</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">sql</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    引用sql--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectList&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;com.itheima.pojo.Emp&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">&quot;commonSelectEmp&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;name!=null&quot;</span>&gt;</span></span><br><span class=\"line\">                name like concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;)</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;gender!=null&quot;</span>&gt;</span></span><br><span class=\"line\">               and gender=#&#123;gender&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;begin != null and end!=null&quot;</span>&gt;</span></span><br><span class=\"line\">              and  entrydate between #&#123;begin&#125; and #&#123;end&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">        order by entrydate desc</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h1><h2 id=\"yarm-配置\"><a href=\"#yarm-配置\" class=\"headerlink\" title=\"yarm 配置\"></a>yarm 配置</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306/db_day9</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">lu20031202</span></span><br><span class=\"line\">  <span class=\"attr\">servlet:</span></span><br><span class=\"line\">    <span class=\"attr\">multipart:</span></span><br><span class=\"line\">      <span class=\"attr\">max-file-size:</span> <span class=\"string\">10MB</span></span><br><span class=\"line\">      <span class=\"attr\">max-request-size:</span> <span class=\"string\">100MB</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">9000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#mybatis 配置</span></span><br><span class=\"line\"><span class=\"attr\">mybatis:</span></span><br><span class=\"line\">  <span class=\"attr\">configuration:</span></span><br><span class=\"line\">    <span class=\"attr\">log-impl:</span> <span class=\"string\">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class=\"line\">    <span class=\"attr\">map-underscore-to-camel-case:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"登录校验\"><a href=\"#登录校验\" class=\"headerlink\" title=\"登录校验\"></a>登录校验</h1><p>http 无状态 每次请求都是独立的，新一次请求不会携带上一次请求的数据<br>存储一个登录标记</p>\n<h2 id=\"会话技术\"><a href=\"#会话技术\" class=\"headerlink\" title=\"会话技术\"></a>会话技术</h2><ol>\n<li>cookies</li>\n<li>session</li>\n<li>令牌<br><img data-src=\"/assets/%E4%BC%9A%E8%AF%9D%E8%B7%9F%E8%B8%AA%E6%8A%80%E6%9C%AF.jpg\" alt=\"&quot;会话跟踪技术&quot;\"></li>\n</ol>\n<h3 id=\"jwt-json-web-token\"><a href=\"#jwt-json-web-token\" class=\"headerlink\" title=\"jwt (json web token)\"></a>jwt (json web token)</h3><ol>\n<li>登陆成功后生成令牌，（返回给浏览器存储）</li>\n<li>后续每个请求携带 jwt 令牌，系统处理请求之前先校验令牌 （令牌存在浏览器中）</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.jsonwebtoken<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jjwt<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.9.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JwtUtils</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">String</span> <span class=\"variable\">signKey</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;itheima&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Long</span> <span class=\"variable\">expire</span> <span class=\"operator\">=</span> <span class=\"number\">43200000L</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成JWT令牌</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> claims JWT第二部分负载 payload 中存储的内容</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">generateJwt</span><span class=\"params\">(Map&lt;String, Object&gt; claims)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jwt</span> <span class=\"operator\">=</span> Jwts.builder()</span><br><span class=\"line\">                .signWith(SignatureAlgorithm.HS256, signKey)<span class=\"comment\">//设置签名算法</span></span><br><span class=\"line\">                .setClaims(claims)    <span class=\"comment\">//自定义内容 (载荷)</span></span><br><span class=\"line\">                .setExpiration(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(System.currentTimeMillis() + expire))</span><br><span class=\"line\">                .compact();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jwt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解析JWT令牌</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jwt JWT令牌</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> JWT第二部分负载 payload 中存储的内容</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Claims <span class=\"title function_\">parseJWT</span><span class=\"params\">(String jwt)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">Claims</span> <span class=\"variable\">claims</span> <span class=\"operator\">=</span> Jwts.parser()</span><br><span class=\"line\">                .setSigningKey(signKey)</span><br><span class=\"line\">                .parseClaimsJws(jwt)</span><br><span class=\"line\">                .getBody();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> claims;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"intercepter-拦截器\"><a href=\"#intercepter-拦截器\" class=\"headerlink\" title=\"intercepter 拦截器\"></a>intercepter 拦截器</h2><p>写一个配置类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebConfig</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">WebMvcConfigurer</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LoginCheckInterceptor loginCheckInterceptor;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addInterceptors</span><span class=\"params\">(InterceptorRegistry registry)</span> &#123;</span><br><span class=\"line\">        registry.addInterceptor(loginCheckInterceptor).addPathPatterns(<span class=\"string\">&quot;/*&quot;</span>).excludePathPatterns(<span class=\"string\">&quot;/login&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoginCheckInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">HandlerInterceptor</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">preHandle</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;preHandle...&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">postHandle</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;postHandle,...&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">afterCompletion</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;after...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>拦截路径</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">拦截路径</th>\n<th align=\"left\">含义</th>\n<th align=\"left\">举例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">&#x2F;_</td>\n<td align=\"left\">—级路径</td>\n<td align=\"left\">能匹配&#x2F;depts,&#x2F;emps，&#x2F;login，不能匹配&#x2F;depts&#x2F;1</td>\n</tr>\n<tr>\n<td align=\"left\">&#x2F;**</td>\n<td align=\"left\">任意级路径</td>\n<td align=\"left\">能匹配&#x2F;depts,&#x2F;depts&#x2F;1 ,&#x2F;depts&#x2F;1&#x2F;2</td>\n</tr>\n<tr>\n<td align=\"left\">&#x2F;depts&#x2F;_</td>\n<td align=\"left\">&#x2F;depts 下的一级路径</td>\n<td align=\"left\">能匹配&#x2F;depts&#x2F;1 ,不能匹配&#x2F;depts&#x2F;1&#x2F;2,&#x2F;depts</td>\n</tr>\n<tr>\n<td align=\"left\">depts&#x2F;**</td>\n<td align=\"left\">&#x2F;depts 下的任意级路径</td>\n<td align=\"left\">能匹配&#x2F;depts,&#x2F;depts&#x2F;1 , &#x2F;depts&#x2F;1&#x2F;2，不能匹配&#x2F;emps&#x2F;1</td>\n</tr>\n</tbody></table>\n",
            "tags": [
                "JAVA",
                "mybatis"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/07/09/computer-science/java/javase/JavaSE_Day5/",
            "url": "https://vereatorm.github.io/2023/07/09/computer-science/java/javase/JavaSE_Day5/",
            "title": "java网络通信、测试",
            "date_published": "2023-07-08T16:00:00.000Z",
            "content_html": "<p>note info:<strong>查漏补缺</strong><br>第五天复习 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUN2NDExMzcybT9wPTExMSZ2ZF9zb3VyY2U9ZWU3NjBiZjdhNGQ4OWQzZWU5MmY0ZjgzZjNhNjgyYzk=\">JAVA入门基础</span><br>JAVA 网络通信<br>Welcome to this note, which covers some basic syntax of javaSE.</p>\n<h1 id=\"TCP通信\"><a href=\"#TCP通信\" class=\"headerlink\" title=\"TCP通信\"></a>TCP通信</h1><p><strong>Client</strong><br>多手多发</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">      <span class=\"comment\">//Client 程序</span></span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;客户端启动成功&quot;</span>);</span><br><span class=\"line\">      <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"number\">8888</span>);</span><br><span class=\"line\">      <span class=\"type\">DataOutputStream</span> <span class=\"variable\">dos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataOutputStream</span>(socket.getOutputStream());</span><br><span class=\"line\">      <span class=\"comment\">//TCP 协议</span></span><br><span class=\"line\">      <span class=\"comment\">// 1发，1收，一发</span></span><br><span class=\"line\">      <span class=\"comment\">// C-&gt;S,C&lt;-S,C-&gt;S</span></span><br><span class=\"line\">      Scanner sc=<span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">      <span class=\"type\">boolean</span> FLAG=<span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (FLAG)&#123;</span><br><span class=\"line\">          <span class=\"type\">String</span> <span class=\"variable\">content</span> <span class=\"operator\">=</span> sc.nextLine();</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (content.equalsIgnoreCase(<span class=\"string\">&quot;Exit&quot;</span>))&#123;</span><br><span class=\"line\">              FLAG=<span class=\"literal\">false</span>;</span><br><span class=\"line\">              System.out.println(<span class=\"string\">&quot;退出成功&quot;</span>);</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              dos.writeUTF(content);</span><br><span class=\"line\">              dos.flush();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      dos.close();</span><br><span class=\"line\">      socket.close();</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>服务器端</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Server</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//服务端程序收到消息</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;服务端启动成功&quot;</span>);</span><br><span class=\"line\">        ServerSocket serverSocket=<span class=\"keyword\">new</span> <span class=\"title class_\">ServerSocket</span>(<span class=\"number\">8888</span>);</span><br><span class=\"line\">        <span class=\"comment\">//等待客户端连接请求</span></span><br><span class=\"line\">        <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span> serverSocket.accept();</span><br><span class=\"line\">        <span class=\"type\">DataInputStream</span> <span class=\"variable\">dis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataInputStream</span>(socket.getInputStream());</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> dis.readUTF();</span><br><span class=\"line\">                System.out.println(rs);</span><br><span class=\"line\">                System.out.println(socket.getRemoteSocketAddress());</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">                System.out.println(socket.getRemoteSocketAddress()+<span class=\"string\">&quot;离线了&quot;</span>);</span><br><span class=\"line\">                dis.close();</span><br><span class=\"line\">                socket.close();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>支持多个客户端同时通信</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServerReaderThread</span> <span class=\"keyword\">extends</span>  <span class=\"title class_\">Thread</span>&#123;</span><br><span class=\"line\">    Socket socket=<span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"title function_\">ServerReaderThread</span><span class=\"params\">(Socket socket)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.socket=socket;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">DataInputStream</span> <span class=\"variable\">dis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataInputStream</span>(socket.getInputStream());</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> dis.readUTF();</span><br><span class=\"line\">                    System.out.println(rs);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                    System.out.println(socket.getRemoteSocketAddress()+<span class=\"string\">&quot;下线了&quot;</span>);</span><br><span class=\"line\">                    dis.close();</span><br><span class=\"line\">                    socket.close();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Server</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//服务端程序收到消息</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;服务端启动成功&quot;</span>);</span><br><span class=\"line\">        ServerSocket serverSocket=<span class=\"keyword\">new</span> <span class=\"title class_\">ServerSocket</span>(<span class=\"number\">8888</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">            <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span> serverSocket.accept();</span><br><span class=\"line\">            System.out.println(socket.getRemoteSocketAddress()+<span class=\"string\">&quot;上线了&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">ServerReaderThread</span>(socket).start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//等待客户端连接请求</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"群聊\"><a href=\"#群聊\" class=\"headerlink\" title=\"群聊\"></a>群聊</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//Client 程序</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;客户端启动成功&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"number\">8888</span>);</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">ClientReaderThread</span>(socket).start();</span><br><span class=\"line\">        <span class=\"type\">DataOutputStream</span> <span class=\"variable\">dos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataOutputStream</span>(socket.getOutputStream());</span><br><span class=\"line\">        <span class=\"comment\">//TCP 协议</span></span><br><span class=\"line\">        <span class=\"comment\">// 1发，1收，一发</span></span><br><span class=\"line\">        <span class=\"comment\">// C-&gt;S,C&lt;-S,C-&gt;S</span></span><br><span class=\"line\">        Scanner sc=<span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"type\">boolean</span> FLAG=<span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (FLAG)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//接收服务端发送的消息</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">content</span> <span class=\"operator\">=</span> sc.nextLine();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (content.equalsIgnoreCase(<span class=\"string\">&quot;Exit&quot;</span>))&#123;</span><br><span class=\"line\">                FLAG=<span class=\"literal\">false</span>;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;退出成功&quot;</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                dos.writeUTF(content);</span><br><span class=\"line\">                dos.flush();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dos.close();</span><br><span class=\"line\">        socket.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Client接收数据的类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ClientReaderThread</span> <span class=\"keyword\">extends</span>  <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">    Socket socket;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"title function_\">ClientReaderThread</span><span class=\"params\">(Socket socket)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.socket=socket;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">DataInputStream</span> <span class=\"variable\">dis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataInputStream</span>(socket.getInputStream());</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> dis.readUTF();</span><br><span class=\"line\">                    System.out.println(rs);</span><br><span class=\"line\">                    <span class=\"comment\">//把消息分发给所有客户端</span></span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;自己下线了&quot;</span>);</span><br><span class=\"line\">                    dis.close();</span><br><span class=\"line\">                    socket.close();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Server类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Server</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> List&lt;Socket&gt; onlineSocket=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//服务端程序收到消息</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;服务端启动成功&quot;</span>);</span><br><span class=\"line\">        ServerSocket serverSocket=<span class=\"keyword\">new</span> <span class=\"title class_\">ServerSocket</span>(<span class=\"number\">8888</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">            <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span> serverSocket.accept();</span><br><span class=\"line\">            onlineSocket.add(socket);</span><br><span class=\"line\">            System.out.println(socket.getRemoteSocketAddress()+<span class=\"string\">&quot;上线了&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">ServerReaderThread</span>(socket).start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//等待客户端连接请求</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Server的多线程实现类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServerReaderThread</span> <span class=\"keyword\">extends</span>  <span class=\"title class_\">Thread</span>&#123;</span><br><span class=\"line\">    Socket socket=<span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"title function_\">ServerReaderThread</span><span class=\"params\">(Socket socket)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.socket=socket;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">DataInputStream</span> <span class=\"variable\">dis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataInputStream</span>(socket.getInputStream());</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> dis.readUTF();</span><br><span class=\"line\">                    System.out.println(rs);</span><br><span class=\"line\">                    <span class=\"comment\">//把消息分发给所有客户端</span></span><br><span class=\"line\">                    sendMsgToAll(rs);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                    System.out.println(socket.getRemoteSocketAddress()+<span class=\"string\">&quot;下线了&quot;</span>);</span><br><span class=\"line\">                    Server.onlineSocket.remove(socket);</span><br><span class=\"line\">                    dis.close();</span><br><span class=\"line\">                    socket.close();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendMsgToAll</span><span class=\"params\">(String rs)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Socket socket1 : Server.onlineSocket) &#123;</span><br><span class=\"line\">            <span class=\"type\">DataOutputStream</span> <span class=\"variable\">dos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataOutputStream</span>(socket1.getOutputStream());</span><br><span class=\"line\">            dos.writeUTF(rs);</span><br><span class=\"line\">            dos.flush();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"单元测试\"><a href=\"#单元测试\" class=\"headerlink\" title=\"单元测试\"></a>单元测试</h1><p>导入junit4的jar文件<br>String工具类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">stringutil</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">printNumber</span><span class=\"params\">(String name)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(name == <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>; <span class=\"comment\">//停掉方法</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;名字长度是:&quot;</span> + name.length());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getHaxIndex</span><span class=\"params\">(String data)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(data == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> data.length();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StringutilTest</span> &#123;</span><br><span class=\"line\"><span class=\"meta\">@Test</span> <span class=\"comment\">//测试方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testPrintNumber</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        StringUtils.printNumber(<span class=\"string\">&quot;admin&quot;</span>);</span><br><span class=\"line\">        StringUtils.printNumber(<span class=\"literal\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Test</span> <span class=\"comment\">//测试方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testGetHaxIndex</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">index1</span> <span class=\"operator\">=</span> Stringutil.getHaxIndex( data: <span class=\"literal\">null</span>); </span><br><span class=\"line\">        System.out.println(index1);</span><br><span class=\"line\">        <span class=\"type\">int</span> index2=Stringutil.getHaxIndex( data: <span class=\"string\">&quot;admin&quot;</span>);</span><br><span class=\"line\">        System.out.println(index2);</span><br><span class=\"line\">        Assert.assertEquals(<span class=\"string\">&quot;内部有bug&quot;</span>,<span class=\"number\">4</span>,index2);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//断言机制</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"反射\"><a href=\"#反射\" class=\"headerlink\" title=\"反射\"></a>反射</h1><p>反射就是:加载类，并允许以编程的方式解剖类中的各种成分（成员变量、方法、构造器等）。</p>\n<ol>\n<li>反射第一步:加载类,获取类的字节码:Class对象</li>\n<li>获取类的构造器:Constructor对象</li>\n<li>获取类的成员变量:Field对象</li>\n<li>获取类的成员方法: Method<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ObjectFrame</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">saveObject</span><span class=\"params\">(Object obj)</span> <span class=\"keyword\">throws</span> Exception  &#123;</span><br><span class=\"line\">       <span class=\"comment\">//保存任意字段的字段和其数据进入文件</span></span><br><span class=\"line\">       PrintStream ps=<span class=\"keyword\">new</span> <span class=\"title class_\">PrintStream</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"string\">&quot;src\\\\com\\\\test\\\\reflection\\\\data.txt&quot;</span>,<span class=\"literal\">true</span>));</span><br><span class=\"line\">       Class c=obj.getClass();</span><br><span class=\"line\">       <span class=\"type\">String</span> <span class=\"variable\">cname</span> <span class=\"operator\">=</span> c.getSimpleName();</span><br><span class=\"line\">        ps.println(<span class=\"string\">&quot;==============&quot;</span>+cname+<span class=\"string\">&quot;======================&quot;</span>);</span><br><span class=\"line\">       <span class=\"comment\">//提取所有的成员变量</span></span><br><span class=\"line\">       Field[] fields = c.getDeclaredFields();</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (Field field : fields) &#123;</span><br><span class=\"line\">           <span class=\"comment\">//拿到成员变量的名字</span></span><br><span class=\"line\">           field.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">           <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> field.getName();</span><br><span class=\"line\">            <span class=\"comment\">//huo</span></span><br><span class=\"line\">           <span class=\"type\">String</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>+field.get(obj);</span><br><span class=\"line\">           ps.println(name+<span class=\"string\">&quot;=&quot;</span>+value);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       ps.close();</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestFrame</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        Student stu=<span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;zhangsan&quot;</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        Teacher tc=<span class=\"keyword\">new</span> <span class=\"title class_\">Teacher</span>(<span class=\"number\">2</span>,<span class=\"string\">&quot;ashdj&quot;</span>,<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        ObjectFrame.saveObject(stu);</span><br><span class=\"line\">        ObjectFrame.saveObject(tc);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "JAVA",
                "JAVASE"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/07/07/computer-science/java/javase/JavaSE_Day3/",
            "url": "https://vereatorm.github.io/2023/07/07/computer-science/java/javase/JavaSE_Day3/",
            "title": "javaIO流",
            "date_published": "2023-07-06T16:00:00.000Z",
            "content_html": "<p>note info:<strong>查漏补缺</strong><br>第三天复习 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUN2NDExMzcybT9wPTExMSZ2ZF9zb3VyY2U9ZWU3NjBiZjdhNGQ4OWQzZWU5MmY0ZjgzZjNhNjgyYzk=\">JAVA入门基础</span><br>JAVA IO流<br>Welcome to this note, which covers some basic syntax of javaSE.</p>\n<p><strong>课堂笔记</strong></p>\n<h1 id=\"IO流\"><a href=\"#IO流\" class=\"headerlink\" title=\"IO流\"></a>IO流</h1><p>Input称为输入流：<strong>负责把数据读到内存中去</strong><br>Output称为输出流：<strong>负责把数据写出去</strong></p>\n<h2 id=\"字节流\"><a href=\"#字节流\" class=\"headerlink\" title=\"字节流\"></a>字节流</h2><p><strong>适合一切数据的拷贝(音配文件、文本)，不适合做输出</strong></p>\n<h3 id=\"FileInputStream\"><a href=\"#FileInputStream\" class=\"headerlink\" title=\"FileInputStream\"></a>FileInputStream</h3><p>每次读取一个字节，读取性能较差，读取汉字会乱码(汉字占三个字节)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">is</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;src\\\\com\\\\test\\\\IOTest\\\\aaa.txt&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">int</span> line=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((line=is.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        System.out.print((<span class=\"type\">char</span>)line);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println();</span><br><span class=\"line\">    System.out.println(System.getProperty(<span class=\"string\">&quot;user.dir&quot;</span>));</span><br><span class=\"line\">    <span class=\"comment\">//读取多个字节的数据,提高了性能依旧会出现中文乱码</span></span><br><span class=\"line\">    <span class=\"type\">byte</span>[] buffer=<span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((len=is.read(buffer))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//读多少倒多少 比如abcdw，第一次只读取了三个字节的数据，第二次只需要读取两个字节的数据</span></span><br><span class=\"line\">        String rs=<span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(buffer,<span class=\"number\">0</span>,len);</span><br><span class=\"line\">        System.out.println(rs);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//直接读取所有的数据</span></span><br><span class=\"line\">    <span class=\"type\">byte</span>[] buffer1=is.readAllBytes();</span><br><span class=\"line\">    len = is.read(buffer1);</span><br><span class=\"line\">    System.out.println(<span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(buffer));</span><br><span class=\"line\">    is.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Outputstream\"><a href=\"#Outputstream\" class=\"headerlink\" title=\"Outputstream\"></a>Outputstream</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"type\">OutputStream</span> <span class=\"variable\">os</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"string\">&quot;src\\\\com\\\\test\\\\IOTest\\\\aaa.txt&quot;</span>,<span class=\"literal\">true</span>); <span class=\"comment\">//第二个参数默认为在文件后追加信息</span></span><br><span class=\"line\">    <span class=\"type\">byte</span>[] bytes=<span class=\"string\">&quot;啊sadh我xnzads&quot;</span>.getBytes();</span><br><span class=\"line\">    os.write(bytes);</span><br><span class=\"line\">    <span class=\"comment\">//换行</span></span><br><span class=\"line\">    os.write(<span class=\"string\">&quot;\\r\\n&quot;</span>.getBytes());</span><br><span class=\"line\">    os.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"图片复制\"><a href=\"#图片复制\" class=\"headerlink\" title=\"图片复制\"></a>图片复制</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">try</span>(<span class=\"type\">InputStream</span> <span class=\"variable\">is</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;src/com/test/IOTest/img11.jpg&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">OutputStream</span> <span class=\"variable\">os</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"string\">&quot;D://img1.jpg&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//这里所定义的资源必须继承于Closeable接口，可以自动关闭流</span></span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">            <span class=\"type\">byte</span>[] buffer1=is.readAllBytes();</span><br><span class=\"line\">            os.write(buffer1);</span><br><span class=\"line\"><span class=\"comment\">//        byte[] buffer=new byte[1024];</span></span><br><span class=\"line\"><span class=\"comment\">//        int line=0;</span></span><br><span class=\"line\"><span class=\"comment\">//        while ((line=is.read(buffer))!=-1)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            os.write(buffer,0,line);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"字符流\"><a href=\"#字符流\" class=\"headerlink\" title=\"字符流\"></a>字符流</h2><p>适合做文件的读取,一个个字符读<br>代码和编码和读取的编码<strong>不一致</strong>会出现乱码</p>\n<h3 id=\"FileReader\"><a href=\"#FileReader\" class=\"headerlink\" title=\"FileReader\"></a>FileReader</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"type\">Reader</span> <span class=\"variable\">fr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(<span class=\"string\">&quot;src/com/test/IOTest/aaa.txt&quot;</span>);) &#123;</span><br><span class=\"line\"><span class=\"comment\">//            int c;</span></span><br><span class=\"line\"><span class=\"comment\">//            while ((c = fr.read()) != -1) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//                System.out.println((char) c);</span></span><br><span class=\"line\"><span class=\"comment\">//            &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//          高性能</span></span><br><span class=\"line\">            <span class=\"type\">char</span>[] buffer1 = <span class=\"keyword\">new</span> <span class=\"title class_\">char</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">            <span class=\"type\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ((len=fr.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(buffer1,<span class=\"number\">0</span>,len));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"FileWriter\"><a href=\"#FileWriter\" class=\"headerlink\" title=\"FileWriter\"></a>FileWriter</h3><p>字符输出写数据后，必须刷新流或者关闭流，写出去的数据才生效</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">try</span> (</span><br><span class=\"line\">             <span class=\"type\">Writer</span> <span class=\"variable\">fw</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileWriter</span>(<span class=\"string\">&quot;src/com/test/IOTest/aaa.txt&quot;</span>,<span class=\"literal\">true</span>)</span><br><span class=\"line\">     ) &#123;</span><br><span class=\"line\">         fw.write(<span class=\"string\">&quot;aaaa&quot;</span>);</span><br><span class=\"line\">         fw.write(<span class=\"string\">&quot;\\r\\n&quot;</span>);</span><br><span class=\"line\">         fw.write(<span class=\"string\">&quot;埃维亚的asd&quot;</span>,<span class=\"number\">0</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\">         fw.write(<span class=\"string\">&quot;\\r\\n&quot;</span>);</span><br><span class=\"line\">         fw.write(<span class=\"keyword\">new</span> <span class=\"title class_\">char</span>[]&#123;<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;w&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>&#125;);</span><br><span class=\"line\">         System.out.println(<span class=\"string\">&quot;写入完成&quot;</span>);</span><br><span class=\"line\">     &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">         e.printStackTrace();</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"缓冲流\"><a href=\"#缓冲流\" class=\"headerlink\" title=\"缓冲流\"></a>缓冲流</h1><ol>\n<li>对原始流进行包装、以提高原始流读写数据的性能</li>\n<li>原理:字节输入缓冲流自带8kb的缓冲池;字节输出缓冲流自带8kb的缓冲池;  <blockquote>\n<p>比如 原本16kb的数据，复制，每次读取一次1kb的数据，输入流需要循环16次，输出流也需要16次，累计32次<br>而使用缓冲流 则是在内存中直接读取缓冲区中的数据    </p>\n</blockquote>\n</li>\n<li>使用字节数组复制速度最快<br><img data-src=\"/assets%5Cbuffer.jpg\"></li>\n</ol>\n<h2 id=\"字节缓冲流\"><a href=\"#字节缓冲流\" class=\"headerlink\" title=\"字节缓冲流\"></a>字节缓冲流</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> (<span class=\"type\">InputStream</span> <span class=\"variable\">bis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedInputStream</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;src/com/test/IOTest/aaa.txt&quot;</span>),<span class=\"number\">8192</span>*<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"type\">OutputStream</span> <span class=\"variable\">bos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedOutputStream</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"string\">&quot;src/com/test/IOTest/b.txt&quot;</span>),<span class=\"number\">8192</span>*<span class=\"number\">2</span>)</span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] buffer=<span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"type\">int</span> len;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> ((len=bis.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            bos.write(buffer,<span class=\"number\">0</span>,len);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;复制成功&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"字符缓冲流\"><a href=\"#字符缓冲流\" class=\"headerlink\" title=\"字符缓冲流\"></a>字符缓冲流</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">try</span> (</span><br><span class=\"line\">               <span class=\"type\">BufferedReader</span> <span class=\"variable\">bis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(<span class=\"string\">&quot;src/com/test/IOTest/aaa.txt&quot;</span>),<span class=\"number\">8192</span>*<span class=\"number\">2</span>);</span><br><span class=\"line\">               <span class=\"type\">Writer</span> <span class=\"variable\">bos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedWriter</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileWriter</span>(<span class=\"string\">&quot;src/com/test/IOTest/b.txt&quot;</span>),<span class=\"number\">8192</span>*<span class=\"number\">2</span>)</span><br><span class=\"line\">       ) &#123;</span><br><span class=\"line\">           String line=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">           <span class=\"keyword\">while</span> ((line=bis.readLine())!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">               bos.write(line);</span><br><span class=\"line\">               bos.write(<span class=\"string\">&quot;\\r\\n&quot;</span>);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">           e.printStackTrace();</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        List&lt;String&gt; res = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (</span><br><span class=\"line\">                <span class=\"type\">BufferedReader</span> <span class=\"variable\">bis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(<span class=\"string\">&quot;src/com/test/IOTest/aaa.txt&quot;</span>),<span class=\"number\">8192</span>*<span class=\"number\">2</span>);</span><br><span class=\"line\">                <span class=\"type\">Writer</span> <span class=\"variable\">bos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedWriter</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileWriter</span>(<span class=\"string\">&quot;src/com/test/IOTest/b.txt&quot;</span>),<span class=\"number\">8192</span>*<span class=\"number\">2</span>)</span><br><span class=\"line\">        ) &#123;</span><br><span class=\"line\">            String line=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ((line=bis.readLine())!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">                res.add(line);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Collections.sort(res,String::compareToIgnoreCase);</span><br><span class=\"line\">            res.forEach(<span class=\"keyword\">new</span> <span class=\"title class_\">Consumer</span>&lt;String&gt;() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">accept</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        bos.write(s);</span><br><span class=\"line\">                        bos.write(<span class=\"string\">&quot;\\r\\n&quot;</span>);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"属性文件\"><a href=\"#属性文件\" class=\"headerlink\" title=\"属性文件\"></a>属性文件</h1><p>键值对形式</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">aaa</span>=<span class=\"string\">9090</span></span><br><span class=\"line\"><span class=\"attr\">ccc</span>=<span class=\"string\">0987</span></span><br><span class=\"line\"><span class=\"attr\">bbb</span>=<span class=\"string\">2020</span></span><br><span class=\"line\"><span class=\"attr\">admin</span>=<span class=\"string\">123456</span></span><br><span class=\"line\"><span class=\"attr\">abaabaab</span>=<span class=\"string\">982132</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        Properties properties=<span class=\"keyword\">new</span> <span class=\"title class_\">Properties</span>(); <span class=\"comment\">//map格式</span></span><br><span class=\"line\">        properties.load(<span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(<span class=\"string\">&quot;src/com/test/IOTest/user.properties&quot;</span>));</span><br><span class=\"line\">        System.out.println(properties.getProperty(<span class=\"string\">&quot;admin&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//遍历全部的键值对</span></span><br><span class=\"line\">        Set&lt;String&gt; keys = properties.stringPropertyNames();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String key : keys) &#123;</span><br><span class=\"line\">            String value=properties.getProperty(key);</span><br><span class=\"line\">            System.out.println(value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        properties.forEach((k,v)-&gt;&#123;</span><br><span class=\"line\">            System.out.println(k+<span class=\"string\">&quot;-------&quot;</span>+v);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//保存properties内容</span></span><br><span class=\"line\">        properties.setProperty(<span class=\"string\">&quot;abaabaab&quot;</span>,<span class=\"string\">&quot;982132&quot;</span>);</span><br><span class=\"line\">        properties.store(<span class=\"keyword\">new</span> <span class=\"title class_\">FileWriter</span>(<span class=\"string\">&quot;src/com/test/IOTest/user.properties&quot;</span>),<span class=\"string\">&quot;i save the info&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h1><h2 id=\"Logback\"><a href=\"#Logback\" class=\"headerlink\" title=\"Logback\"></a>Logback</h2><ol>\n<li>需要创建lib目录，添加logback-classic.jar、logback-core.jar、slf4j-api.jar<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Logger LOGGER=LoggerFactory.getLogger(<span class=\"string\">&quot;LogBackTest&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">    LOGGER.info(<span class=\"string\">&quot;开始执行方法&quot;</span>);</span><br><span class=\"line\">    chu(<span class=\"number\">10</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">    LOGGER.info(<span class=\"string\">&quot;执行方法成功&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">chu</span><span class=\"params\">(<span class=\"type\">int</span> a,<span class=\"type\">int</span> b)</span>&#123;</span><br><span class=\"line\">    LOGGER.debug(<span class=\"string\">&quot;参数A&quot;</span>+a);</span><br><span class=\"line\">    LOGGER.debug(<span class=\"string\">&quot;参数b&quot;</span>+b);</span><br><span class=\"line\">    <span class=\"type\">int</span> c=a/b;</span><br><span class=\"line\">    LOGGER.debug(c);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"日志级别-优先级从低到高\"><a href=\"#日志级别-优先级从低到高\" class=\"headerlink\" title=\"日志级别(优先级从低到高)\"></a>日志级别(优先级从低到高)</h2><table>\n<thead>\n<tr>\n<th>日志级别</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>trace</td>\n<td>追踪指名程序运行轨迹</td>\n</tr>\n<tr>\n<td>debug</td>\n<td>调试，实际应用中一般将其作为最低级别，而trace则很少使用</td>\n</tr>\n<tr>\n<td>info</td>\n<td>输出重要的运行信息，数据连接，网络连接，IO操作等等，使用的较多</td>\n</tr>\n<tr>\n<td>warn</td>\n<td>警告信息，可能会发生问题，使用的较多</td>\n</tr>\n<tr>\n<td>error</td>\n<td>错误信息，使用较多</td>\n</tr>\n</tbody></table>\n<p>只有日志级别<strong>大于或等于核心配置文件的日志级别</strong>，才会被记录，否则不记录</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">root</span> <span class=\"attr\">level</span>=<span class=\"string\">&quot;info&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;CONSOLE&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;FILE&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">root</span>&gt;</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "JAVA",
                "JAVASE"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/07/07/computer-science/java/javase/JavaSE_Day4/",
            "url": "https://vereatorm.github.io/2023/07/07/computer-science/java/javase/JavaSE_Day4/",
            "title": "java多线程",
            "date_published": "2023-07-06T16:00:00.000Z",
            "content_html": "<p>note info:<strong>查漏补缺</strong><br>第四天复习 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUN2NDExMzcybT9wPTExMSZ2ZF9zb3VyY2U9ZWU3NjBiZjdhNGQ4OWQzZWU5MmY0ZjgzZjNhNjgyYzk=\">JAVA 入门基础</span><br>JAVA 多线程<br>Welcome to this note, which covers some basic syntax of javaSE.</p>\n<p><strong>课堂笔记</strong></p>\n<h1 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h1><p>多条线程由 cpu 负责调度</p>\n<h2 id=\"创建线程\"><a href=\"#创建线程\" class=\"headerlink\" title=\"创建线程\"></a>创建线程</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//基本使用</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Runnable</span>() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;子线程输出:&quot;</span>+i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;).start();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;主线程输出:&quot;</span>+i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//需要返回值</span></span><br><span class=\"line\">    Callable&lt;String&gt; call = <span class=\"keyword\">new</span> <span class=\"title class_\">MyCallable</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"comment\">//callable对象不是一个任务对象，thread方法无法直接接收</span></span><br><span class=\"line\">    <span class=\"comment\">//要把callable对象转换成</span></span><br><span class=\"line\">    FutureTask&lt;String&gt; f1 = <span class=\"keyword\">new</span> <span class=\"title class_\">FutureTask</span>&lt;&gt;(call);</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(f1).start();</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> f1.get();</span><br><span class=\"line\">    System.out.println(s);</span><br><span class=\"line\">    Callable&lt;String&gt; call2 = <span class=\"keyword\">new</span> <span class=\"title class_\">MyCallable</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\">    <span class=\"comment\">//callable对象不是一个任务对象，thread方法无法直接接收</span></span><br><span class=\"line\">    <span class=\"comment\">//要把callable对象转换成</span></span><br><span class=\"line\">    FutureTask&lt;String&gt; f12 = <span class=\"keyword\">new</span> <span class=\"title class_\">FutureTask</span>&lt;&gt;(call2);</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(f12).start();</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">s1</span> <span class=\"operator\">=</span> f12.get();</span><br><span class=\"line\">    System.out.println(s1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyCallable</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Callable</span>&lt;String&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  <span class=\"type\">int</span> n;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyCallable</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.n = n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">call</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"comment\">//描述线程的任务</span></span><br><span class=\"line\">        <span class=\"type\">int</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            sum+=i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;求出1-&quot;</span>+n+<span class=\"string\">&quot;和为:&quot;</span>+sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sleep-方法和-join-方法\"><a href=\"#sleep-方法和-join-方法\" class=\"headerlink\" title=\"sleep 方法和 join 方法\"></a>sleep 方法和 join 方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class=\"line\">    Thread thread1=<span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\">            System.out.print(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//join方法 ，让调用当前方法的线程先执行完</span></span><br><span class=\"line\">    <span class=\"type\">Thread</span> <span class=\"variable\">t1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>(<span class=\"string\">&quot;线程2&quot;</span>);</span><br><span class=\"line\">    System.out.println(t1.getName());</span><br><span class=\"line\">    t1.start();</span><br><span class=\"line\">    t1.join();</span><br><span class=\"line\">    <span class=\"type\">Thread</span> <span class=\"variable\">t2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>(<span class=\"string\">&quot;线程3&quot;</span>);</span><br><span class=\"line\">    System.out.println(t2.getName());</span><br><span class=\"line\">    t2.start();</span><br><span class=\"line\">    t2.join();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyThread</span> <span class=\"keyword\">extends</span>  <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyThread</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">            System.out.println(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"线程安全问题\"><a href=\"#线程安全问题\" class=\"headerlink\" title=\"线程安全问题\"></a>线程安全问题</h2><h3 id=\"同步代码块\"><a href=\"#同步代码块\" class=\"headerlink\" title=\"同步代码块\"></a>同步代码块</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Accout</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  <span class=\"type\">double</span> money;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String cardId;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Accout</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Accout</span><span class=\"params\">(String cardId,<span class=\"type\">double</span> money)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.money = money;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.cardId = cardId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">drawMoney</span><span class=\"params\">(<span class=\"type\">double</span> money)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> Thread.currentThread().getName();</span><br><span class=\"line\">        <span class=\"comment\">// 同步代码块</span></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (<span class=\"built_in\">this</span>) &#123;   <span class=\"comment\">//锁对象，多线程竞争锁对象（代表共享资源）</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.money&lt;money)&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;余额不足&quot;</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                System.out.println(name+<span class=\"string\">&quot;来取钱&quot;</span>);</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.money-=money;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;余额为&quot;</span>+<span class=\"built_in\">this</span>.money);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//静态方法使用类名.class 作为锁</span></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (Accout.class)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">double</span> <span class=\"title function_\">getMoney</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMoney</span><span class=\"params\">(<span class=\"type\">double</span> money)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.money = money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getCardId</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cardId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCardId</span><span class=\"params\">(String cardId)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.cardId = cardId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyThread</span> <span class=\"keyword\">extends</span>  <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">    Accout acc=<span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyThread</span><span class=\"params\">(String name,Accout acc)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(name);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.acc=acc;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        acc.drawMoney(<span class=\"number\">100000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">Accout acc=<span class=\"keyword\">new</span> <span class=\"title class_\">Accout</span>(<span class=\"string\">&quot;ICBC-110&quot;</span>,<span class=\"number\">100000</span>);</span><br><span class=\"line\">     <span class=\"comment\">//创建两个线程，代表小明小红</span></span><br><span class=\"line\">     <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>(<span class=\"string\">&quot;小明&quot;</span>,acc).start();</span><br><span class=\"line\">     <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>(<span class=\"string\">&quot;小红&quot;</span>,acc).start();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">     Accout acc1=<span class=\"keyword\">new</span> <span class=\"title class_\">Accout</span>(<span class=\"string\">&quot;ICBC-110&quot;</span>,<span class=\"number\">100000</span>);</span><br><span class=\"line\">     <span class=\"comment\">//创建两个线程，代表小明小红</span></span><br><span class=\"line\">     <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>(<span class=\"string\">&quot;小黑&quot;</span>,acc1).start();</span><br><span class=\"line\">     <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>(<span class=\"string\">&quot;小白&quot;</span>,acc1).start();</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"同步方法\"><a href=\"#同步方法\" class=\"headerlink\" title=\"同步方法\"></a>同步方法</h3><p>在定义方法的时候添加一个 synchronized 修饰符</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title function_\">drawMoney</span><span class=\"params\">(<span class=\"type\">double</span> money)</span>&#123;</span><br><span class=\"line\">      <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> Thread.currentThread().getName();</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.money&lt;money)&#123;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">&quot;余额不足&quot;</span>);</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">          System.out.println(name+<span class=\"string\">&quot;来取钱&quot;</span>);</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.money-=money;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">&quot;余额为&quot;</span>+<span class=\"built_in\">this</span>.money);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Lock-锁\"><a href=\"#Lock-锁\" class=\"headerlink\" title=\"Lock 锁\"></a>Lock 锁</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Lock lk=<span class=\"keyword\">new</span> <span class=\"title class_\">ReentrantLock</span>();</span><br><span class=\"line\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">drawMoney</span><span class=\"params\">(<span class=\"type\">double</span> money)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> Thread.currentThread().getName();</span><br><span class=\"line\">    <span class=\"comment\">// 同步代码块</span></span><br><span class=\"line\">    lk.lock();</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.money&lt;money)&#123;</span><br><span class=\"line\">            System.out.println(name+<span class=\"string\">&quot;来取钱，余额不足&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.money-=money;</span><br><span class=\"line\">            System.out.println(name+<span class=\"string\">&quot;来取钱余额为&quot;</span>+<span class=\"built_in\">this</span>.money);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//即使中间代码出错，还是能解锁</span></span><br><span class=\"line\">        lk.unlock();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"线程通信\"><a href=\"#线程通信\" class=\"headerlink\" title=\"线程通信\"></a>线程通信</h2><p>当多个线程共同操作共享资源时，线程间通过某种方式互相告知自己的状态，以相互协调，并避免无效的资源争夺(生产者消费者)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"> <span class=\"comment\">//创建三个生产者者线程</span></span><br><span class=\"line\">    Desk desk=<span class=\"keyword\">new</span> <span class=\"title class_\">Desk</span>();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(()-&gt;&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">            desk.put();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,<span class=\"string\">&quot;厨师1&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(()-&gt;&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">            desk.put();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,<span class=\"string\">&quot;厨师2&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(()-&gt;&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">            desk.put();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,<span class=\"string\">&quot;厨师三&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//创建三个消费者线程</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(()-&gt;&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">            desk.get();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,<span class=\"string\">&quot;吃货1&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(()-&gt;&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">            desk.get();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,<span class=\"string\">&quot;吃货2&quot;</span>).start();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Desk</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; things=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//放包子</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title function_\">put</span><span class=\"params\">()</span>  &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> Thread.currentThread().getName();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (things.size()==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                things.add(name+<span class=\"string\">&quot;做的包子&quot;</span>);</span><br><span class=\"line\">                System.out.println(name+<span class=\"string\">&quot;做了一个包子&quot;</span>);</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">                <span class=\"comment\">//唤醒别人等待自己</span></span><br><span class=\"line\">                <span class=\"built_in\">this</span>.notifyAll();</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.wait();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.notifyAll();</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.wait();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title function_\">get</span><span class=\"params\">()</span>  &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> Thread.currentThread().getName();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (things.size()!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                System.out.println(name+<span class=\"string\">&quot;吃了&quot;</span>+things.remove(<span class=\"number\">0</span>));</span><br><span class=\"line\">                things.clear();</span><br><span class=\"line\">                <span class=\"comment\">//唤醒别人等待自己</span></span><br><span class=\"line\">                <span class=\"built_in\">this</span>.notifyAll();</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.wait();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.notifyAll();</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.wait();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"线程池\"><a href=\"#线程池\" class=\"headerlink\" title=\"线程池\"></a>线程池</h1><p><strong>一个可以复用线程的技术</strong>  </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">corePoolSize</td>\n<td align=\"left\">核心线程的数量</td>\n</tr>\n<tr>\n<td align=\"left\">maximumPoolSize</td>\n<td align=\"left\">指定线程池的最大线程数量（若核心线程数量为 3,最大线程数量为五，则有 2 个临时线程）</td>\n</tr>\n<tr>\n<td align=\"left\">KeepAliveTime</td>\n<td align=\"left\">临时线程的存活时间</td>\n</tr>\n<tr>\n<td align=\"left\">unit</td>\n<td align=\"left\">指定线程存活的时间</td>\n</tr>\n<tr>\n<td align=\"left\">workQueue</td>\n<td align=\"left\">指定线程池的任务队列</td>\n</tr>\n<tr>\n<td align=\"left\">threadFactory</td>\n<td align=\"left\">指定线程池的线程工厂</td>\n</tr>\n<tr>\n<td align=\"left\">handler</td>\n<td align=\"left\">指定线程池的任务拒绝策略(若都满了，如何拒绝)</td>\n</tr>\n<tr>\n<td align=\"left\">可以控制任务的数量，重复的利用线程</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<ul>\n<li>线程池的注意事项</li>\n</ul>\n<ol>\n<li>临时线程什么时候创建?<br>新任务提交时发现核心线程都在忙，任务队列也满了，并且还可以创建临时线程，此时才会创建临时线程。</li>\n<li>什么时候会开始拒绝新任务?<br>核心线程和临时线程都在忙，任务队列也满了，新的任务过来的时候才会开始拒绝任务。</li>\n</ol>\n<p>新任务拒绝策略</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">策略</th>\n<th align=\"left\">详解</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">ThreadPoolExecutor.AbortPolicy</td>\n<td align=\"left\">丢弃任务并抛出 RejectedExecutionException 异常。<strong>是默认的策略</strong></td>\n</tr>\n<tr>\n<td align=\"left\">ThreadPoolExecutor.DiscardPolicy</td>\n<td align=\"left\">丢弃任务，但是不抛出异常这是不推荐的做法</td>\n</tr>\n<tr>\n<td align=\"left\">ThreadPoolExecutor.DiscardoldestPolicy</td>\n<td align=\"left\">抛弃队列中等待最久的任务然后把当前任务加入队列中</td>\n</tr>\n<tr>\n<td align=\"left\">ThreadPoolExecutor.CallerRunsPolicy</td>\n<td align=\"left\">由主线程[main]负责调用任务的 run()方法从而绕过线程池直接执行</td>\n</tr>\n</tbody></table>\n<p>实现方式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyRunable</span> <span class=\"keyword\">implements</span>  <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//任务做什么</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> Thread.currentThread().getName();</span><br><span class=\"line\">            System.out.println(name+<span class=\"string\">&quot;==&gt;&quot;</span>+<span class=\"string\">&quot;6666&quot;</span>);</span><br><span class=\"line\">            Thread.sleep(Integer.MAX_VALUE);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"线程池处理-Runable-任务\"><a href=\"#线程池处理-Runable-任务\" class=\"headerlink\" title=\"线程池处理 Runable 任务\"></a>线程池处理 Runable 任务</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"><span class=\"type\">ExecutorService</span> <span class=\"variable\">pool</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadPoolExecutor</span>(<span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, TimeUnit.SECONDS,</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayBlockingQueue</span>&lt;&gt;(<span class=\"number\">4</span>), Executors.defaultThreadFactory(), <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadPoolExecutor</span>.AbortPolicy());</span><br><span class=\"line\">    <span class=\"type\">Runnable</span> <span class=\"variable\">target</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyRunable</span>();</span><br><span class=\"line\">    pool.execute(target);   <span class=\"comment\">//自动创建新线程，自动处理这个任务，自己执行</span></span><br><span class=\"line\">    pool.execute(target);   <span class=\"comment\">//自动创建新线程，自动处理这个任务，自己执行</span></span><br><span class=\"line\">    pool.execute(target);   <span class=\"comment\">//自动创建新线程，自动处理这个任务，自己执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    pool.execute(target);   <span class=\"comment\">//复用核心线程,若核心线程都在忙，进入任务队列排队</span></span><br><span class=\"line\">    pool.execute(target);   <span class=\"comment\">//复用核心线程</span></span><br><span class=\"line\">    pool.execute(target);   <span class=\"comment\">//复用核心线程</span></span><br><span class=\"line\">    pool.execute(target);   <span class=\"comment\">//复用核心线程</span></span><br><span class=\"line\"></span><br><span class=\"line\">    pool.execute(target);   <span class=\"comment\">//占满四个任务线程后</span></span><br><span class=\"line\">    pool.execute(target);   <span class=\"comment\">//占满四个任务线程后</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//全满了之后，需要拒绝</span></span><br><span class=\"line\">    pool.execute(target);   <span class=\"comment\">//占满四个任务线程后</span></span><br><span class=\"line\">    <span class=\"comment\">//启动</span></span><br><span class=\"line\"></span><br><span class=\"line\">    pool.shutdown(); <span class=\"comment\">//任务完成后关闭线程池</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"线程池处理-Callable-任务\"><a href=\"#线程池处理-Callable-任务\" class=\"headerlink\" title=\"线程池处理 Callable 任务\"></a>线程池处理 Callable 任务</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ExecutionException, InterruptedException&#123;</span><br><span class=\"line\">  <span class=\"type\">ExecutorService</span> <span class=\"variable\">pool</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadPoolExecutor</span>(<span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, TimeUnit.SECONDS,</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayBlockingQueue</span>&lt;&gt;(<span class=\"number\">4</span>), Executors.defaultThreadFactory(), <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadPoolExecutor</span>.AbortPolicy());</span><br><span class=\"line\">    Future&lt;String&gt; f1 = pool.submit(<span class=\"keyword\">new</span> <span class=\"title class_\">MyCallable</span>(<span class=\"number\">100</span>));</span><br><span class=\"line\">    System.out.println(f1.get());</span><br><span class=\"line\">    Future&lt;String&gt; f2 = pool.submit(<span class=\"keyword\">new</span> <span class=\"title class_\">MyCallable</span>(<span class=\"number\">200</span>));</span><br><span class=\"line\">    System.out.println(f2.get());</span><br><span class=\"line\">    Future&lt;String&gt; f3 = pool.submit(<span class=\"keyword\">new</span> <span class=\"title class_\">MyCallable</span>(<span class=\"number\">300</span>));</span><br><span class=\"line\">    System.out.println(f3.get());</span><br><span class=\"line\">    Future&lt;String&gt; f4 = pool.submit(<span class=\"keyword\">new</span> <span class=\"title class_\">MyCallable</span>(<span class=\"number\">400</span>));</span><br><span class=\"line\">    System.out.println(f4.get());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Executors-类\"><a href=\"#Executors-类\" class=\"headerlink\" title=\"Executors 类\"></a>Executors 类</h2><table>\n<thead>\n<tr>\n<th align=\"left\">方法名称</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">public static ExecutorService newFixedThreadPool(int nThreads)</td>\n<td align=\"left\">创建固定线程数量的线程池，如果某个线程因为执行异常而结束，那么线程池会补充一个新线程替代它。</td>\n</tr>\n<tr>\n<td align=\"left\">public static Executorservice newsingleThreadExecutor()</td>\n<td align=\"left\">创建只有一个线程的线程池对象，如果该线程出现异常而结束，那么线程池会补充一个新线程。</td>\n</tr>\n<tr>\n<td align=\"left\">public static ExecutorService newcachedThreadPoo1()</td>\n<td align=\"left\">线程数量随着任务增加而增加，如果线程任务执行完毕且空闲了 60s 则会被回收掉。</td>\n</tr>\n<tr>\n<td align=\"left\">public static ScheduledExecutorService newScheduledThreadPoo1(int corePoolsize)</td>\n<td align=\"left\">创建一个线程池，可以实现在给定的延迟后运行任务，或者定期执行任务。</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class=\"line\">   <span class=\"type\">ExecutorService</span> <span class=\"variable\">pool</span> <span class=\"operator\">=</span> Executors.newFixedThreadPool(<span class=\"number\">3</span>);</span><br><span class=\"line\">    Future&lt;String&gt; f1 = pool.submit(<span class=\"keyword\">new</span> <span class=\"title class_\">MyCallable</span>(<span class=\"number\">100</span>));</span><br><span class=\"line\">    System.out.println(f1.get());</span><br><span class=\"line\">    Future&lt;String&gt; f2 = pool.submit(<span class=\"keyword\">new</span> <span class=\"title class_\">MyCallable</span>(<span class=\"number\">200</span>));</span><br><span class=\"line\">    System.out.println(f2.get());</span><br><span class=\"line\">    Future&lt;String&gt; f3 = pool.submit(<span class=\"keyword\">new</span> <span class=\"title class_\">MyCallable</span>(<span class=\"number\">300</span>));</span><br><span class=\"line\">    System.out.println(f3.get());</span><br><span class=\"line\">    Future&lt;String&gt; f4 = pool.submit(<span class=\"keyword\">new</span> <span class=\"title class_\">MyCallable</span>(<span class=\"number\">400</span>));</span><br><span class=\"line\">    System.out.println(f4.get());</span><br><span class=\"line\">    pool.shutdown();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>核心线程数量</p>\n<ol>\n<li>计算密集型的任务: 核心线程数量:CPU 核数+1</li>\n<li>IO 密集型的任务:CPU 核数*2</li>\n</ol>\n<h2 id=\"线程状态\"><a href=\"#线程状态\" class=\"headerlink\" title=\"线程状态\"></a>线程状态</h2><p><img data-src=\"/assets%5CThreadStatus.jpg\"></p>\n",
            "tags": [
                "JAVA",
                "JAVASE"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/07/06/computer-science/java/javase/JavaSE_Day2/",
            "url": "https://vereatorm.github.io/2023/07/06/computer-science/java/javase/JavaSE_Day2/",
            "title": "java泛型",
            "date_published": "2023-07-05T16:00:00.000Z",
            "content_html": "<p>note info:<strong>查漏补缺</strong><br>第二天复习 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUN2NDExMzcybT9wPTExMSZ2ZF9zb3VyY2U9ZWU3NjBiZjdhNGQ4OWQzZWU5MmY0ZjgzZjNhNjgyYzk=\">JAVA入门基础</span><br>JAVA Generic Content and Common Method<br>Welcome to this note, which covers some basic syntax of javaSE.</p>\n<p><strong>课堂笔记</strong></p>\n<h1 id=\"泛型\"><a href=\"#泛型\" class=\"headerlink\" title=\"泛型\"></a>泛型</h1><h2 id=\"泛型接口\"><a href=\"#泛型接口\" class=\"headerlink\" title=\"泛型接口\"></a>泛型接口</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Data</span>&lt;T&gt; &#123;</span><br><span class=\"line\">    ArrayList&lt;T&gt; <span class=\"title function_\">getByName</span><span class=\"params\">(String name)</span>;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(T t)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>创建一个实现类 实现这个泛型接口把需要的类型填入进去</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"type\">int</span> num=<span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  String Name=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title function_\">student</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentData</span> <span class=\"keyword\">implements</span>  <span class=\"title class_\">Data</span>&lt;student&gt; &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ArrayList&lt;student&gt; <span class=\"title function_\">getByName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(student student)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"常用API\"><a href=\"#常用API\" class=\"headerlink\" title=\"常用API\"></a>常用API</h1><h2 id=\"Object类\"><a href=\"#Object类\" class=\"headerlink\" title=\"Object类\"></a>Object类</h2><ol>\n<li>equals()默认比较两个对象的地址,重写后比较两个对象的值</li>\n<li>clone()对象，clone方法是protected修饰的 <strong>protected任意包的父类的子类，能访问到他父类的protected方法，而父类的对象也无法访问protected方法</strong><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">student</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Cloneable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>     <span class=\"type\">int</span> num=<span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  String Name=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">student</span><span class=\"params\">(<span class=\"type\">int</span> num, String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.num = num;</span><br><span class=\"line\">        Name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Object <span class=\"title function_\">clone</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> CloneNotSupportedException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.clone();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">equals</span><span class=\"params\">(Object o)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//比较两个对象的地址</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span> == o) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"comment\">//比较的对象为null或者比较的两者类型不同 直接返回false</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (o == <span class=\"literal\">null</span> || getClass() != o.getClass()) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">//开始比较内容</span></span><br><span class=\"line\">        <span class=\"type\">student</span> <span class=\"variable\">student</span> <span class=\"operator\">=</span> (student) o;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num == student.num &amp;&amp;</span><br><span class=\"line\">                Objects.equals(Name, student.Name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">hashCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Objects.hash(num, Name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> CloneNotSupportedException &#123;</span><br><span class=\"line\">        student stu=<span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">        student stu1=<span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">        System.out.println(stu.equals(stu1));</span><br><span class=\"line\">        <span class=\"type\">student</span> <span class=\"variable\">stu2</span> <span class=\"operator\">=</span> (student) stu.clone();</span><br><span class=\"line\">        System.out.println(stu2);;</span><br><span class=\"line\">        System.out.println(stu);;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"Array类\"><a href=\"#Array类\" class=\"headerlink\" title=\"Array类\"></a>Array类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> CloneNotSupportedException &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">23</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">        <span class=\"comment\">//截取数组</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr1 = Arrays.copyOfRange(arr, <span class=\"number\">1</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr1));</span><br><span class=\"line\">        <span class=\"comment\">//拷贝指定长度的数组</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr2 = Arrays.copyOf(arr, <span class=\"number\">10</span>);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr2));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">double</span>[] prices = &#123;<span class=\"number\">98.2</span>, <span class=\"number\">120</span>, <span class=\"number\">100</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//把所有的价格打八折存进去</span></span><br><span class=\"line\">        Arrays.setAll(prices, <span class=\"keyword\">new</span> <span class=\"title class_\">IntToDoubleFunction</span>() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"type\">double</span> <span class=\"title function_\">applyAsDouble</span><span class=\"params\">(<span class=\"type\">int</span> i)</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> prices[i] * <span class=\"number\">0.8</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        System.out.println(Arrays.toString(prices));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Arrays排序\"><a href=\"#Arrays排序\" class=\"headerlink\" title=\"Arrays排序\"></a>Arrays排序</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>  &#123;</span><br><span class=\"line\">        <span class=\"comment\">//数组排序</span></span><br><span class=\"line\">        <span class=\"type\">double</span>[] prices = &#123;<span class=\"number\">98.2</span>, <span class=\"number\">120</span>, <span class=\"number\">100</span>&#125;;</span><br><span class=\"line\">        Arrays.sort(prices);</span><br><span class=\"line\">        System.out.println(Arrays.toString(prices));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//对对象排序</span></span><br><span class=\"line\">        student[] students = <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>[]&#123;</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">3</span>, <span class=\"string\">&quot;zhangsan&quot;</span>, <span class=\"number\">32</span>),</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">4</span>, <span class=\"string\">&quot;lisi&quot;</span>, <span class=\"number\">28</span>),</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;wy&quot;</span>, <span class=\"number\">12</span>),</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">5</span>, <span class=\"string\">&quot;aadasjdas&quot;</span>, <span class=\"number\">43</span>)</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        Arrays.sort(students);</span><br><span class=\"line\">        System.out.println(Arrays.toString(students));</span><br><span class=\"line\">        Arrays.sort(students, <span class=\"keyword\">new</span> <span class=\"title class_\">Comparator</span>&lt;student&gt;() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">compare</span><span class=\"params\">(student student, student t1)</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 约定1：认为左边对象 &gt; 右边对象 返回一个正整数</span></span><br><span class=\"line\">                <span class=\"comment\">// 约定2：认为左边对象 &lt; 右边对象 返回一个负整数</span></span><br><span class=\"line\">                <span class=\"comment\">// 约定3：认为左边对象 = 右边对象 返回一个负整数</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (student.age &gt; t1.age) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (student.age &lt; t1.age) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"comment\">//return  student.age-t1.age; 升序</span></span><br><span class=\"line\">                <span class=\"comment\">//return  student.age-this.age;   降序</span></span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//Arrays.sort(students, (student,t1)-&gt;student.age-t1.age); 缩略写法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Lambda表达式\"><a href=\"#Lambda表达式\" class=\"headerlink\" title=\"Lambda表达式\"></a>Lambda表达式</h1><p>只能简化函数式接口(<strong>是接口，且只有一个抽象方法</strong>)的匿名内部类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        go(()-&gt;&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;游泳ing&quot;</span>);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">go</span><span class=\"params\">(Swimming sw)</span>&#123;</span><br><span class=\"line\">        sw.swin();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span>  <span class=\"title class_\">Swimming</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">swin</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"方法引用\"><a href=\"#方法引用\" class=\"headerlink\" title=\"方法引用\"></a>方法引用</h1><h2 id=\"静态-x2F-实例方法\"><a href=\"#静态-x2F-实例方法\" class=\"headerlink\" title=\"静态&#x2F;实例方法\"></a>静态&#x2F;实例方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        student[] students = <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>[]&#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">3</span>, <span class=\"string\">&quot;zhangsan&quot;</span>, <span class=\"number\">32</span>),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">4</span>, <span class=\"string\">&quot;lisi&quot;</span>, <span class=\"number\">28</span>),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;wy&quot;</span>, <span class=\"number\">12</span>),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">5</span>, <span class=\"string\">&quot;aadasjdas&quot;</span>, <span class=\"number\">43</span>)</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"><span class=\"comment\">//      Arrays.sort(students, (student,t1)-&gt;student.age-t1.age);</span></span><br><span class=\"line\">        <span class=\"comment\">//静态方法引用</span></span><br><span class=\"line\">        Arrays.sort(students,CompareByData::compareByAge);</span><br><span class=\"line\">        <span class=\"comment\">//实例方法引用</span></span><br><span class=\"line\">        CompareByData compare=<span class=\"keyword\">new</span> <span class=\"title class_\">CompareByData</span>();</span><br><span class=\"line\">        Arrays.sort(students,compare::compareByAgeDesc);</span><br><span class=\"line\">        System.out.println(Arrays.toString(students));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CompareByData</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">compareByAge</span><span class=\"params\">(student stu1,student stu2&#123;</span></span><br><span class=\"line\"><span class=\"params\">        return  stu1.age-stu2.age;</span></span><br><span class=\"line\"><span class=\"params\">    &#125;</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"keyword\">public</span>  <span class=\"type\">int</span> compareByAgeDesc(student stu1,student stu2)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>  stu2.age-stu1.age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"特例类型方法引用\"><a href=\"#特例类型方法引用\" class=\"headerlink\" title=\"特例类型方法引用\"></a>特例类型方法引用</h2><p>如果某个lambda表达式中只是调用一个实例方法，并且参数列表的第一个参数是作为方法的主调，后面的参数是作为该实例方法入参的，则此时可以使用特定的类型方法引用</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        String[] name=&#123;<span class=\"string\">&quot;ahasd&quot;</span>,<span class=\"string\">&quot;aaasd&quot;</span>,<span class=\"string\">&quot;pppadas&quot;</span>,<span class=\"string\">&quot;Zasdas&quot;</span>,<span class=\"string\">&quot;Asdsa&quot;</span>,<span class=\"string\">&quot;TUasd&quot;</span>&#125;;</span><br><span class=\"line\">        Arrays.sort(name);</span><br><span class=\"line\">        <span class=\"comment\">//忽略首字符大小写进行排序</span></span><br><span class=\"line\">        <span class=\"comment\">//Arrays.sort(name, (s,t1)-&gt; s.compareToIgnoreCase(t1));</span></span><br><span class=\"line\">        <span class=\"comment\">//特定类型方法引用</span></span><br><span class=\"line\">        Arrays.sort(name, String::compareToIgnoreCase);</span><br><span class=\"line\">        System.out.println(Arrays.toString(name));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"构造器引用\"><a href=\"#构造器引用\" class=\"headerlink\" title=\"构造器引用\"></a>构造器引用</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//CreateStu cstu=(num,name,age)-&gt;new student(num,name,age);</span></span><br><span class=\"line\">    CreateStu cstu1=student::<span class=\"keyword\">new</span>;</span><br><span class=\"line\">    <span class=\"type\">student</span> <span class=\"variable\">student</span> <span class=\"operator\">=</span> cstu1.create(<span class=\"number\">1</span>, <span class=\"string\">&quot;zhangsan&quot;</span>, <span class=\"number\">89</span>);</span><br><span class=\"line\">    System.out.println(student);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h1><h2 id=\"Collectioon-接口-单列集合\"><a href=\"#Collectioon-接口-单列集合\" class=\"headerlink\" title=\"Collectioon(接口)单列集合\"></a>Collectioon(接口)单列集合</h2><ul>\n<li>List<E> 有序、可重复、有索引<blockquote>\n<p>ArrayList<E>、LinkedList<E>:有序、可重复、有索引<br>ArrayList 查询快、删除慢，添加效率低</p>\n</blockquote>\n</li>\n<li>Set<E> 无序、不重复、无索引<blockquote>\n<p>HashSet: 无序(<strong>添加的顺序喝读取的顺序不一致</strong>)、不重复、无索引<br>LinkHashSet: <strong>有序</strong>、不重复、无索引<br>TreeSet:按照大小默认升序排列、不重复、无索引</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//遍历</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">    List&lt;String&gt; res=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    Iterator&lt;String&gt; iterator = res.iterator();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (iterator.hasNext())&#123;</span><br><span class=\"line\">        System.out.println(iterator.next());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res.forEach(s-&gt; System.out.println(s));</span><br><span class=\"line\">    res.forEach(System.out::println);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"HashSet特点\"><a href=\"#HashSet特点\" class=\"headerlink\" title=\"HashSet特点\"></a>HashSet特点</h2><ul>\n<li>哈希值<blockquote>\n<p>不同对象的，它们的哈希值可能相同(哈希碰撞),一般不同<br>JDK8 之前是数组+链表，JDK8 之后是数组+链表+红黑树</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"Conllections工具类\"><a href=\"#Conllections工具类\" class=\"headerlink\" title=\"Conllections工具类\"></a>Conllections工具类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    List&lt;String&gt; res=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//添加元素</span></span><br><span class=\"line\">    Collections.addAll(res,<span class=\"string\">&quot;张三&quot;</span>,<span class=\"string\">&quot;lisi&quot;</span>,<span class=\"string\">&quot;wangwu&quot;</span>);</span><br><span class=\"line\">    System.out.println(res);</span><br><span class=\"line\">    <span class=\"comment\">//打乱集合</span></span><br><span class=\"line\">    Collections.shuffle(res);</span><br><span class=\"line\">    List&lt;Movies&gt; movies=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    movies.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Movies</span>(<span class=\"string\">&quot;zxjkasdsa&quot;</span>,<span class=\"number\">9.0</span>,<span class=\"string\">&quot;asdasd&quot;</span>));</span><br><span class=\"line\">    movies.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Movies</span>(<span class=\"string\">&quot;awrwer&quot;</span>,<span class=\"number\">8.0</span>,<span class=\"string\">&quot;wewq&quot;</span>));</span><br><span class=\"line\">    movies.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Movies</span>(<span class=\"string\">&quot;zcxzxcz&quot;</span>,<span class=\"number\">9.1</span>,<span class=\"string\">&quot;vxcvdf&quot;</span>));</span><br><span class=\"line\">    Collections.sort(movies,(m1,m2)-&gt;Double.compare(m1.getSc(),m2.getSc()));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Map集合-双列集合\"><a href=\"#Map集合-双列集合\" class=\"headerlink\" title=\"Map集合 双列集合\"></a>Map集合 双列集合</h2><ul>\n<li>HashMap  <blockquote>\n<p>按照键、无序(<strong>对象比较依赖重写equals()和hashcode()方法</strong>)、不重复、无索引</p>\n</blockquote>\n</li>\n<li>LinkHashMap  <blockquote>\n<p>按照键、有序、不重复、无索引</p>\n</blockquote>\n</li>\n<li>TreeMap<blockquote>\n<p>可排序(默认升序)、不重复、无索引</p>\n</blockquote>\n</li>\n</ul>\n<p><strong>常用方法</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>  &#123;</span><br><span class=\"line\">      Map&lt;String,Integer&gt; map1=<span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">      map1.put(<span class=\"string\">&quot;zs&quot;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">      map1.put(<span class=\"string\">&quot;aca&quot;</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">      map1.put(<span class=\"string\">&quot;ww&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">      map1.put(<span class=\"string\">&quot;ls&quot;</span>,<span class=\"number\">29</span>);</span><br><span class=\"line\">      <span class=\"comment\">//获取键对应的值</span></span><br><span class=\"line\">      System.out.println(map1.get(<span class=\"string\">&quot;zs&quot;</span>));</span><br><span class=\"line\">      <span class=\"comment\">//是否包含值/键</span></span><br><span class=\"line\">      System.out.println(map1.containsKey(<span class=\"string\">&quot;zs&quot;</span>));</span><br><span class=\"line\">      System.out.println(map1.containsValue(<span class=\"number\">2</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">      Set&lt;String&gt; keys = map1.keySet();</span><br><span class=\"line\">      keys.forEach((System.out::println));</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//合并Map集合</span></span><br><span class=\"line\">      Map&lt;String,Integer&gt; maps=<span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">      maps.put(<span class=\"string\">&quot;aaa&quot;</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">      <span class=\"comment\">//把map1的全倒入maps中</span></span><br><span class=\"line\">      maps.putAll(map1);</span><br><span class=\"line\">      <span class=\"comment\">//遍历方法1</span></span><br><span class=\"line\">      Set&lt;Map.Entry&lt;String, Integer&gt;&gt; entries = maps.entrySet();</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (Map.Entry&lt;String, Integer&gt; entry : entries) &#123;</span><br><span class=\"line\">          <span class=\"type\">String</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> entry.getKey();</span><br><span class=\"line\">          <span class=\"type\">Integer</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> entry.getValue();</span><br><span class=\"line\">          System.out.println(key+<span class=\"string\">&quot;:&quot;</span>+value);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//2</span></span><br><span class=\"line\">      maps.forEach((k,v)-&gt;&#123;</span><br><span class=\"line\">          System.out.println(k+<span class=\"string\">&quot;:&quot;</span>+v);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Stream流\"><a href=\"#Stream流\" class=\"headerlink\" title=\"Stream流\"></a>Stream流</h1><p>Stream流只能对Collection类型的<br><strong>流只能收集一次</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    List&lt;String&gt; names=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    Collections.addAll(names,<span class=\"string\">&quot;qwecx&quot;</span>,<span class=\"string\">&quot;lsi&quot;</span>,<span class=\"string\">&quot;wws&quot;</span>,<span class=\"string\">&quot;absaw&quot;</span>,<span class=\"string\">&quot;cxasd&quot;</span><span class=\"string\">&quot;aaa&quot;</span>,<span class=\"string\">&quot;acdsd&quot;</span>);</span><br><span class=\"line\">    List&lt;String&gt; res = names.stream().filter(s -&gt; s.startsWit(<span class=\"string\">&quot;a&quot;</span>) &amp;&amp; s.length() &gt;<span class=\"number\">2</span>).collect(Collectors.toList());</span><br><span class=\"line\">    System.out.println(res);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//Map集合获取stream流</span></span><br><span class=\"line\">    Map&lt;String,Integer&gt; map1=<span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">    map1.put(<span class=\"string\">&quot;zs&quot;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    map1.put(<span class=\"string\">&quot;aca&quot;</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    map1.put(<span class=\"string\">&quot;ww&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">    map1.put(<span class=\"string\">&quot;ls&quot;</span>,<span class=\"number\">29</span>);</span><br><span class=\"line\">    map1.entrySet().stream().filter(s-&gt;s.getKey().contains(<span class=\"string\">&quot;a&quot;</span>))collect(Collectors.toList()).forEach(System.out::println);</span><br><span class=\"line\">    <span class=\"comment\">//数组获取stream流</span></span><br><span class=\"line\">    String[] selected=&#123;<span class=\"string\">&quot;AB&quot;</span>,<span class=\"string\">&quot;Ba&quot;</span>,<span class=\"string\">&quot;Casd&quot;</span>,<span class=\"string\">&quot;Dwe&quot;</span>&#125;;</span><br><span class=\"line\">    Stream&lt;String&gt; stream = Arrays.stream(selected);</span><br><span class=\"line\">    Stream&lt;String&gt; selected1 = Stream.of(selected);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>具体使用</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">     Collections.addAll(students,<span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;zhangsan&quot;</span>,<span class=\"number\">67</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;lisi&quot;</span>,<span class=\"number\">23</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;lisi&quot;</span>,<span class=\"number\">23</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;we&quot;</span>,<span class=\"number\">54</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;wqe&quot;</span>,<span class=\"number\">12</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;znxcj&quot;</span>,<span class=\"number\">30</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;wmoad&quot;</span>,<span class=\"number\">26</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;wetyqw&quot;</span>,<span class=\"number\">56</span>));</span><br><span class=\"line\">        <span class=\"comment\">//找出年龄&gt;=23 ,小于30的学生，按照年龄升序排序</span></span><br><span class=\"line\">        students.stream().filter(x-&gt;x.getAge()&gt;=<span class=\"number\">23</span>&amp;&amp;x.getAge()&lt;=<span class=\"number\">30</span>)</span><br><span class=\"line\">                .sorted(Comparator.comparingInt(student::getAge))</span><br><span class=\"line\">                .collect(Collectors.toList())</span><br><span class=\"line\">                .forEach(System.out::println);</span><br><span class=\"line\">        <span class=\"comment\">//取出年龄最大的三位学生</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;======================&quot;</span>);</span><br><span class=\"line\">        students.stream().sorted((t1, t2) -&gt; t2.getAge()-t1.getAge()).limit(<span class=\"number\">3</span>).forEach(System.out::println);</span><br><span class=\"line\">        <span class=\"comment\">//取出年龄最小的两名学生</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;======================&quot;</span>);</span><br><span class=\"line\">        students.stream().sorted((t1, t2) -&gt; t1.getAge()-t2.getAge()).limit(<span class=\"number\">2</span>).forEach(System.out::println);</span><br><span class=\"line\">        <span class=\"comment\">//找出年龄超过20岁的，学生名字去重</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;======================&quot;</span>);</span><br><span class=\"line\">        students.stream().filter(x-&gt;x.getAge()&gt;<span class=\"number\">20</span>).map(s-&gt;s.getName()).distinct().forEach(System.out::println); <span class=\"comment\">//取出名字</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;============================&quot;</span>);</span><br><span class=\"line\">        students.stream().filter(x-&gt;x.getAge()&gt;<span class=\"number\">20</span>).distinct().forEach(System.out::println);</span><br><span class=\"line\">         <span class=\"comment\">//获取最大年龄的对象</span></span><br><span class=\"line\">        System.out.println(students.stream().max((o1, o2) -&gt; o1.getAge() - o2.getAge()).get());</span><br><span class=\"line\">        <span class=\"comment\">//获取超过20岁的人数和</span></span><br><span class=\"line\">        System.out.println(students.stream().filter(s-&gt;s.getAge()&gt;<span class=\"number\">20</span>).count());</span><br><span class=\"line\">        <span class=\"comment\">//找出年龄&gt;=23 ,小于30的学生，按照年龄升序排序,存到一个新集合中</span></span><br><span class=\"line\">        List&lt;student&gt; stu_list = students.stream().filter(x -&gt; x.getAge() &gt;= <span class=\"number\">23</span> &amp;&amp; x.getAge() &lt;= <span class=\"number\">30</span>)</span><br><span class=\"line\">                .sorted(Comparator.comparingInt(student::getAge))</span><br><span class=\"line\">                .collect(Collectors.toList());</span><br><span class=\"line\">        <span class=\"comment\">//存到一个新的map集合中 必须手动去重</span></span><br><span class=\"line\">        Map&lt;String, Integer&gt; collect = students.stream().filter(x -&gt; x.getAge() &gt;= <span class=\"number\">23</span> &amp;&amp; x.getAge() &lt;= <span class=\"number\">30</span>)</span><br><span class=\"line\">                .sorted(Comparator.comparingInt(student::getAge))</span><br><span class=\"line\">                .distinct()</span><br><span class=\"line\">                .collect(Collectors.toMap(a -&gt; a.getName(), a -&gt; a.getAge()));</span><br><span class=\"line\">        <span class=\"comment\">//转换成数组</span></span><br><span class=\"line\">        student[] students1 = students.stream()</span><br><span class=\"line\">            .filter(x -&gt; x.getAge() &gt;= <span class=\"number\">23</span>)</span><br><span class=\"line\">            .sorted(Comparator.comparingInt(student::getAge))</span><br><span class=\"line\">            .toArray(len -&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>[len]);    </span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "JAVA",
                "JAVASE"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/07/05/computer-science/java/javase/JavaSE_Day1/",
            "url": "https://vereatorm.github.io/2023/07/05/computer-science/java/javase/JavaSE_Day1/",
            "title": "java面向对象",
            "date_published": "2023-07-04T16:00:00.000Z",
            "content_html": "<p>note info:<strong>查漏补缺</strong><br>第一天复习 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUN2NDExMzcybT9wPTExMSZ2ZF9zb3VyY2U9ZWU3NjBiZjdhNGQ4OWQzZWU5MmY0ZjgzZjNhNjgyYzk=\">JAVA 入门基础</span><br>JAVA Object-Oriented Content<br>Welcome to this note, which covers some basic syntax of javaSE.</p>\n<p><strong>课堂笔记</strong></p>\n<h1 id=\"内部类\"><a href=\"#内部类\" class=\"headerlink\" title=\"内部类\"></a>内部类</h1><h2 id=\"普通的内部类\"><a href=\"#普通的内部类\" class=\"headerlink\" title=\"普通的内部类\"></a>普通的内部类</h2><p>可以直接访问外部类的实例成员、静态成员</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Outer</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String a;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age=<span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"comment\">//成员内部类</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">class</span> <span class=\"title class_\">Inner</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">        <span class=\"keyword\">private</span>  <span class=\"type\">int</span> age=<span class=\"number\">90</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">            System.out.println(age);</span><br><span class=\"line\">            System.out.println(a);</span><br><span class=\"line\">            <span class=\"type\">int</span> age=<span class=\"number\">77</span>;</span><br><span class=\"line\">            System.out.println(age);</span><br><span class=\"line\">            System.out.println(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">            <span class=\"comment\">//获取外部类变量</span></span><br><span class=\"line\">            System.out.println(Outer.<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"实现创建方法\"><a href=\"#实现创建方法\" class=\"headerlink\" title=\"实现创建方法\"></a>实现创建方法</h2><p>– 成员内部类需要先创建外部对象才能创建内部对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Outer.Inner in=<span class=\"keyword\">new</span> <span class=\"title class_\">Outer</span>().<span class=\"keyword\">new</span> <span class=\"title class_\">Inner</span>();</span><br><span class=\"line\">        in.test();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"静态内部类\"><a href=\"#静态内部类\" class=\"headerlink\" title=\"静态内部类\"></a>静态内部类</h2><p>创建静态内部类对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Outer.<span class=\"type\">Inner</span> <span class=\"variable\">inner</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Outer</span>.Inner();</span><br><span class=\"line\">        inner.test1();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以把静态内部类理解为一个静态方法，**<em>可以直接访问静态的外部成员变量</em>**，但不能直接访问普通成员变量</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Outer</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String schoolName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age=<span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"comment\">//静态内部类</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Inner</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> a=<span class=\"number\">90</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//访问外部类的成员</span></span><br><span class=\"line\">        System.out.println(schoolName);</span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">new</span> <span class=\"title class_\">Outer</span>().age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"匿名内部类\"><a href=\"#匿名内部类\" class=\"headerlink\" title=\"匿名内部类\"></a>匿名内部类</h2><hr>\n<h3 id=\"不使用匿名内部类写法\"><a href=\"#不使用匿名内部类写法\" class=\"headerlink\" title=\"不使用匿名内部类写法\"></a>不使用匿名内部类写法</h3><ol>\n<li>需要先创建一个抽象方法</li>\n<li>再使用一个类继承这个抽象方法来实现</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Aninmal cat=<span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>();</span><br><span class=\"line\">        cat.cry();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span>  <span class=\"title class_\">Cat</span> <span class=\"keyword\">extends</span>  <span class=\"title class_\">Aninmal</span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">cry</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;mmm&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Aninmal</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">cry</span><span class=\"params\">()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"使用匿名内部类之后\"><a href=\"#使用匿名内部类之后\" class=\"headerlink\" title=\"使用匿名内部类之后\"></a>使用匿名内部类之后</h3><ol>\n<li><strong>匿名内部类本质就是一个子类 并会立即创建出一个子类对象</strong></li>\n<li>通常作为一个参数传输给方法</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">      Animal animal=<span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"meta\">@Override</span></span><br><span class=\"line\">          <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">cry</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">              System.out.println(<span class=\"string\">&quot;ccc&quot;</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      animal.cry();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">abstract</span>  <span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">abstract</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">cry</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>实际使用场景</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        go( <span class=\"keyword\">new</span> <span class=\"title class_\">Swimming</span>()&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">swin</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;猫游泳&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">go</span><span class=\"params\">(Swimming sw)</span>&#123;</span><br><span class=\"line\">        sw.swin();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span>  <span class=\"title class_\">Swimming</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">swin</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"枚举\"><a href=\"#枚举\" class=\"headerlink\" title=\"枚举\"></a>枚举</h1><h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><ol>\n<li>枚举是一种特殊的类</li>\n<li>枚举类的第一行都是常量记住的都是枚举类的对象</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    X,Y,Z;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        A a1=A.X;</span><br><span class=\"line\">        A[] values = A.values();    <span class=\"comment\">//获取所有的对象</span></span><br><span class=\"line\">        System.out.println(a1.getName());</span><br><span class=\"line\">        System.out.println(a1.ordinal());   <span class=\"comment\">//获得索引</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"枚举使用场景\"><a href=\"#枚举使用场景\" class=\"headerlink\" title=\"枚举使用场景\"></a>枚举使用场景</h2><p>作信息的筛选，约束参数值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        check(Constant.BOY);</span><br><span class=\"line\">        check(Constant.GIRL);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">check</span><span class=\"params\">(Constant flag)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (flag)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> GIRL:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;女生&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span>  BOY:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;男生&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>创建一个独立的常量包</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">Constant</span> &#123;</span><br><span class=\"line\">    GIRL,BOY;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Lambda-表达式\"><a href=\"#Lambda-表达式\" class=\"headerlink\" title=\"Lambda 表达式\"></a>Lambda 表达式</h1><p>只能简化函数式接口(<strong>是接口，且只有一个抽象方法</strong>)的匿名内部类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        go(()-&gt;&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;游泳ing&quot;</span>);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">go</span><span class=\"params\">(Swimming sw)</span>&#123;</span><br><span class=\"line\">        sw.swin();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span>  <span class=\"title class_\">Swimming</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">swin</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "JAVA",
                "JAVASE"
            ]
        }
    ]
}