<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Luk&#39;s Blog • Posts by &#34;stm32单片机&#34; category</title>
        <link>https://Meteora233.github.io</link>
        <description></description>
        <language>en</language>
        <pubDate>Fri, 31 Jan 2025 00:00:00 +0800</pubDate>
        <lastBuildDate>Fri, 31 Jan 2025 00:00:00 +0800</lastBuildDate>
        <category>JAVA</category>
        <category>JAVASE</category>
        <category>Vue</category>
        <category>web</category>
        <category>Spring</category>
        <category>mybatis</category>
        <category>事务</category>
        <category>javaScript</category>
        <category>security框架</category>
        <category>小程序</category>
        <item>
            <guid isPermalink="true">https://meteora233.github.io/2025/01/31/Electronic-information/STM32/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
            <title>STM32单片机环境配置</title>
            <link>https://meteora233.github.io/2025/01/31/Electronic-information/STM32/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
            <pubDate>Fri, 31 Jan 2025 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;note info:&lt;br&gt;第一天学习 课程：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXRoNDExejdzbi8/c3BtX2lkX2Zyb209MzMzLjEzOTEuMC4wJnA9NCZ2ZF9zb3VyY2U9ZWU3NjBiZjdhNGQ4OWQzZWU5MmY0ZjgzZjNhNjgyYzk=&#34;&gt;STM32标准库&lt;/span&gt;  &lt;/p&gt;
&lt;h1 id=&#34;新建工程&#34;&gt;&lt;a href=&#34;#新建工程&#34; class=&#34;headerlink&#34; title=&#34;新建工程&#34;&gt;&lt;/a&gt;新建工程&lt;/h1&gt;&lt;h2 id=&#34;步骤&#34;&gt;&lt;a href=&#34;#步骤&#34; class=&#34;headerlink&#34; title=&#34;步骤&#34;&gt;&lt;/a&gt;步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;创建项目Project-&amp;gt;new Project ,选择STM32F103&lt;br&gt;&lt;img data-src=&#34;https://s21.ax1x.com/2025/01/31/pEZSYT0.png&#34; alt=&#34;选择芯片型号&#34;&gt;&lt;/li&gt;
&lt;li&gt;创建启动库文件&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;stm32启动文件&lt;br&gt;stm32f10x.h 就是stm32的外设寄存器描述文件，作用和51单片机的头文件REGX52.H 一样，用来描述stm32有哪些寄存器和它对应的地址两个system是用来配置时钟，stm32主频72MHz,也就是system函数配置的&lt;br&gt;文件目录:固件库\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x&lt;/li&gt;
&lt;li&gt;core文件&lt;br&gt;因为stm32是内核和内核外围的设备组成的，而且这个内核的寄存器描述和外围设备的描述文件不在一起，需要添加一个内核寄存器的描述文件两个cm3 core是内核的寄存器描述文件，还含带了一些内核的配置函数，所以多了个.c文件&lt;br&gt;文件目录:固件库\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\CMSIS\CM3\CoreSupport&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;p&gt;在项目文件夹下创建一个Start文件夹，将上述的启动的文件复制进去&lt;br&gt;&lt;a href=&#34;https://imgse.com/i/pEZSX9S&#34;&gt;&lt;img data-src=&#34;https://s21.ax1x.com/2025/01/31/pEZSX9S.png&#34; alt=&#34;Start文件夹&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Keil软件内，将Source Group1的名称修改为Start&lt;br&gt;&lt;a href=&#34;https://imgse.com/i/pEZp97q&#34;&gt;&lt;img data-src=&#34;https://s21.ax1x.com/2025/01/31/pEZp97q.png&#34; alt=&#34;修改名称.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将启动文件、.c、.h文件添加到start文件夹&lt;br&gt;&lt;a href=&#34;https://imgse.com/i/pEZpPA0&#34;&gt;&lt;img data-src=&#34;https://s21.ax1x.com/2025/01/31/pEZpPA0.png&#34; alt=&#34;添加文件.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加头文件路径&lt;br&gt;&lt;a href=&#34;https://imgse.com/i/pEZpQN6&#34;&gt;&lt;img data-src=&#34;https://s21.ax1x.com/2025/01/31/pEZpQN6.png&#34; alt=&#34;添加头文件路径&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建main文件&lt;br&gt;&lt;a href=&#34;https://imgse.com/i/pEZptud&#34;&gt;&lt;img data-src=&#34;https://s21.ax1x.com/2025/01/31/pEZptud.png&#34; alt=&#34;创建main文件&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编写main文件&lt;br&gt;&lt;a href=&#34;https://imgse.com/i/pEZph5V&#34;&gt;&lt;img data-src=&#34;https://s21.ax1x.com/2025/01/31/pEZph5V.png&#34; alt=&#34;pEZph5V.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;寄存器点灯&#34;&gt;&lt;a href=&#34;#寄存器点灯&#34; class=&#34;headerlink&#34; title=&#34;寄存器点灯&#34;&gt;&lt;/a&gt;寄存器点灯&lt;/h1&gt;&lt;h2 id=&#34;RCC寄存器&#34;&gt;&lt;a href=&#34;#RCC寄存器&#34; class=&#34;headerlink&#34; title=&#34;RCC寄存器&#34;&gt;&lt;/a&gt;RCC寄存器&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;打开stm32的参考手册，首先是一个RCC的寄存器，来使能GPIOC时钟，GPIO都是APB2的外设，所以在这个APB2外设时钟使能寄存器RCC_APB2ENR里面配置，&lt;/li&gt;
&lt;li&gt;打开说明有个IOPCEN ，这一位就是使能GPIOC时钟的，&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;IOPCEN：IO端口C时钟使能 (I&amp;#x2F;O port C clock enable) &lt;/li&gt;
&lt;li&gt;由软件置’1’或清’0’ &lt;/li&gt;
&lt;li&gt;0：IO端口C时钟关闭；&lt;/li&gt;
&lt;li&gt;1：IO端口C时钟开启。 &amp;#x2F;&amp;#x2F;这一位写1就是打开GPIOC的时钟&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;代码实现：&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;PC13口的模式&#34;&gt;&lt;a href=&#34;#PC13口的模式&#34; class=&#34;headerlink&#34; title=&#34;PC13口的模式&#34;&gt;&lt;/a&gt;PC13口的模式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;手册中的8.2.2&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;CNF13 和Mode13就是用来配置13号口的&lt;/li&gt;
&lt;li&gt;CNFy,CNF需要配置为00：通用推挽输出模式&lt;/li&gt;
&lt;li&gt;Mode需要配置为11：输出模式，最搭速度为50MHz&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;端口输出数据寄存器GPIOx-ODR&#34;&gt;&lt;a href=&#34;#端口输出数据寄存器GPIOx-ODR&#34; class=&#34;headerlink&#34; title=&#34;端口输出数据寄存器GPIOx_ODR&#34;&gt;&lt;/a&gt;端口输出数据寄存器GPIOx_ODR&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;手册中的8.2.4&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;中间有一位ODR13，这一位写1，13号口就是高电平，写0就是低电平&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;代码实现&#34;&gt;&lt;a href=&#34;#代码实现&#34; class=&#34;headerlink&#34; title=&#34;代码实现&#34;&gt;&lt;/a&gt;代码实现&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;stm32f10x.h&amp;quot;&lt;/span&gt;                  &lt;span class=&#34;comment&#34;&gt;// Device header&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  RCC-&amp;gt;APB2ENR=&lt;span class=&#34;number&#34;&gt;0x00000010&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  GPIOC-&amp;gt;CRH=&lt;span class=&#34;number&#34;&gt;0x00300000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//GPIOC-&amp;gt;ODR=0x00000000; // 因为这个灯是低电平点亮的，所以我们给ODR全0就是亮，ODR2000就是灭&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  GPIOC-&amp;gt;ODR=&lt;span class=&#34;number&#34;&gt;0x00002000&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// 因为这个灯是低电平点亮的，所以我们给ODR全0就是亮，ODR2000就是灭&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;可以看出这种方式需要不断的地查手册来了解每个寄存器的每一位的作用，这个操作也有一个弊端，比如我们把除了PC13之外的所有位都配置成了0，这样会影响到其他端口的原有配置，如果要只做到配置PC13而不影响其他位，那还需要&amp;amp;&amp;#x3D;和|&amp;#x3D;的操作。所以这种寄存器的方式虽然代码简洁，但还是不大方便&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;库函数调用方式&#34;&gt;&lt;a href=&#34;#库函数调用方式&#34; class=&#34;headerlink&#34; title=&#34;库函数调用方式&#34;&gt;&lt;/a&gt;库函数调用方式&lt;/h1&gt;&lt;h2 id=&#34;准备工作&#34;&gt;&lt;a href=&#34;#准备工作&#34; class=&#34;headerlink&#34; title=&#34;准备工作&#34;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;为工程添加库函数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在工程目录下创建Library文件夹，用来存放库函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开固件库&lt;em&gt;STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\STM32F10x_StdPeriph_Driver\src”&lt;em&gt;和&lt;/em&gt;STM32F10x_StdPeriph_Driver\inc&lt;/em&gt;将其中的文件都复制到Library文件夹中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其中misc.c 是内核的库函数，其他的是内核外的库函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;回到keil软件，创建右击Target,创建Group,名为:Library,然后添加现有项,选择Library文件夹中所有的文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将这三个文件复制到工程目录的User文件夹下，然后对keil软件内的User添加现有项，将这三个文件添加进来&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;固件库\STM32F10x_StdPeriph_Lib_V3.5.0\Project\STM32F10x_StdPeriph_Template&lt;/em&gt; 目录下&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件名&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;stm32f10x_conf.h&lt;/td&gt;
&lt;td&gt;用来配置库函数头文件的包含关系、然后这里面还有个用来检查参数检查的函数定义的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stm32f10x_it.c、stm32f10x_it.h&lt;/td&gt;
&lt;td&gt;用来存放中断函数的&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击魔法棒内-&amp;gt; C&amp;#x2F;C++，define 输入USE_STDPERIPH_DRIVER&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为stm32f10x.h内有这么一段语句，所以要先存在这个字符串，下面的include 才有效&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;ifdef&lt;/span&gt; USE_STDPERIPH_DRIVER&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;stm32f10x_conf.h&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同时把include Path中的User路径和Library路径都选择上&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;这样我们基于库函数的工程文件就创建好了&lt;br&gt;创建完成后如下图:&lt;br&gt;&lt;a href=&#34;https://imgse.com/i/pEZEeTH&#34;&gt;&lt;img data-src=&#34;https://s21.ax1x.com/2025/01/31/pEZEeTH.png&#34; alt=&#34;pEZEeTH.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;使用库文件进行点灯&#34;&gt;&lt;a href=&#34;#使用库文件进行点灯&#34; class=&#34;headerlink&#34; title=&#34;使用库文件进行点灯&#34;&gt;&lt;/a&gt;使用库文件进行点灯&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;库函数也是间接的配置寄存器，所以步骤一致&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;首先是使能时钟， 那库函数有这么一个函数（&lt;strong&gt;RCC_APB2PeriphClockCmd&lt;/strong&gt;）来开启时钟&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
    </channel>
</rss>
