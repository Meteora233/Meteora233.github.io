{
    "version": "https://jsonfeed.org/version/1",
    "title": "Luk's Blog • All posts by \"java\" category",
    "description": "",
    "home_page_url": "https://Vereatorm.github.io",
    "items": [
        {
            "id": "https://vereatorm.github.io/2023/07/06/computer-science/java/javase/JavaSE_Day2/",
            "url": "https://vereatorm.github.io/2023/07/06/computer-science/java/javase/JavaSE_Day2/",
            "title": "java泛型",
            "date_published": "2023-07-05T16:00:00.000Z",
            "content_html": "<p>note info:<strong>查漏补缺</strong><br>第一天复习 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUN2NDExMzcybT9wPTExMSZ2ZF9zb3VyY2U9ZWU3NjBiZjdhNGQ4OWQzZWU5MmY0ZjgzZjNhNjgyYzk=\">JAVA入门基础</span><br>JAVA Generic Content and Common Method<br>Welcome to this note, which covers some basic syntax of javaSE.</p>\n<p><strong>课堂笔记</strong></p>\n<h1 id=\"泛型\"><a href=\"#泛型\" class=\"headerlink\" title=\"泛型\"></a>泛型</h1><h2 id=\"泛型接口\"><a href=\"#泛型接口\" class=\"headerlink\" title=\"泛型接口\"></a>泛型接口</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Data</span>&lt;T&gt; &#123;</span><br><span class=\"line\">    ArrayList&lt;T&gt; <span class=\"title function_\">getByName</span><span class=\"params\">(String name)</span>;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(T t)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>创建一个实现类 实现这个泛型接口把需要的类型填入进去</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"type\">int</span> num=<span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  String Name=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title function_\">student</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentData</span> <span class=\"keyword\">implements</span>  <span class=\"title class_\">Data</span>&lt;student&gt; &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ArrayList&lt;student&gt; <span class=\"title function_\">getByName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(student student)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"常用API\"><a href=\"#常用API\" class=\"headerlink\" title=\"常用API\"></a>常用API</h1><h2 id=\"Object类\"><a href=\"#Object类\" class=\"headerlink\" title=\"Object类\"></a>Object类</h2><ol>\n<li>equals()默认比较两个对象的地址,重写后比较两个对象的值</li>\n<li>clone()对象，clone方法是protected修饰的 <strong>protected任意包的父类的子类，能访问到他父类的protected方法，而父类的对象也无法访问protected方法</strong><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">student</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Cloneable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>     <span class=\"type\">int</span> num=<span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  String Name=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">student</span><span class=\"params\">(<span class=\"type\">int</span> num, String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.num = num;</span><br><span class=\"line\">        Name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Object <span class=\"title function_\">clone</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> CloneNotSupportedException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.clone();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">equals</span><span class=\"params\">(Object o)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//比较两个对象的地址</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span> == o) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"comment\">//比较的对象为null或者比较的两者类型不同 直接返回false</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (o == <span class=\"literal\">null</span> || getClass() != o.getClass()) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">//开始比较内容</span></span><br><span class=\"line\">        <span class=\"type\">student</span> <span class=\"variable\">student</span> <span class=\"operator\">=</span> (student) o;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num == student.num &amp;&amp;</span><br><span class=\"line\">                Objects.equals(Name, student.Name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">hashCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Objects.hash(num, Name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> CloneNotSupportedException &#123;</span><br><span class=\"line\">        student stu=<span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">        student stu1=<span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">        System.out.println(stu.equals(stu1));</span><br><span class=\"line\">        <span class=\"type\">student</span> <span class=\"variable\">stu2</span> <span class=\"operator\">=</span> (student) stu.clone();</span><br><span class=\"line\">        System.out.println(stu2);;</span><br><span class=\"line\">        System.out.println(stu);;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"Array类\"><a href=\"#Array类\" class=\"headerlink\" title=\"Array类\"></a>Array类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> CloneNotSupportedException &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">23</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">        <span class=\"comment\">//截取数组</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr1 = Arrays.copyOfRange(arr, <span class=\"number\">1</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr1));</span><br><span class=\"line\">        <span class=\"comment\">//拷贝指定长度的数组</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr2 = Arrays.copyOf(arr, <span class=\"number\">10</span>);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr2));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">double</span>[] prices = &#123;<span class=\"number\">98.2</span>, <span class=\"number\">120</span>, <span class=\"number\">100</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//把所有的价格打八折存进去</span></span><br><span class=\"line\">        Arrays.setAll(prices, <span class=\"keyword\">new</span> <span class=\"title class_\">IntToDoubleFunction</span>() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"type\">double</span> <span class=\"title function_\">applyAsDouble</span><span class=\"params\">(<span class=\"type\">int</span> i)</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> prices[i] * <span class=\"number\">0.8</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        System.out.println(Arrays.toString(prices));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Arrays排序\"><a href=\"#Arrays排序\" class=\"headerlink\" title=\"Arrays排序\"></a>Arrays排序</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>  &#123;</span><br><span class=\"line\">        <span class=\"comment\">//数组排序</span></span><br><span class=\"line\">        <span class=\"type\">double</span>[] prices = &#123;<span class=\"number\">98.2</span>, <span class=\"number\">120</span>, <span class=\"number\">100</span>&#125;;</span><br><span class=\"line\">        Arrays.sort(prices);</span><br><span class=\"line\">        System.out.println(Arrays.toString(prices));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//对对象排序</span></span><br><span class=\"line\">        student[] students = <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>[]&#123;</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">3</span>, <span class=\"string\">&quot;zhangsan&quot;</span>, <span class=\"number\">32</span>),</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">4</span>, <span class=\"string\">&quot;lisi&quot;</span>, <span class=\"number\">28</span>),</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;wy&quot;</span>, <span class=\"number\">12</span>),</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">5</span>, <span class=\"string\">&quot;aadasjdas&quot;</span>, <span class=\"number\">43</span>)</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        Arrays.sort(students);</span><br><span class=\"line\">        System.out.println(Arrays.toString(students));</span><br><span class=\"line\">        Arrays.sort(students, <span class=\"keyword\">new</span> <span class=\"title class_\">Comparator</span>&lt;student&gt;() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">compare</span><span class=\"params\">(student student, student t1)</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 约定1：认为左边对象 &gt; 右边对象 返回一个正整数</span></span><br><span class=\"line\">                <span class=\"comment\">// 约定2：认为左边对象 &lt; 右边对象 返回一个负整数</span></span><br><span class=\"line\">                <span class=\"comment\">// 约定3：认为左边对象 = 右边对象 返回一个负整数</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (student.age &gt; t1.age) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (student.age &lt; t1.age) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"comment\">//return  student.age-t1.age; 升序</span></span><br><span class=\"line\">                <span class=\"comment\">//return  student.age-this.age;   降序</span></span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//Arrays.sort(students, (student,t1)-&gt;student.age-t1.age); 缩略写法</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Lambda表达式\"><a href=\"#Lambda表达式\" class=\"headerlink\" title=\"Lambda表达式\"></a>Lambda表达式</h1><p>只能简化函数式接口(<strong>是接口，且只有一个抽象方法</strong>)的匿名内部类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        go(()-&gt;&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;游泳ing&quot;</span>);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">go</span><span class=\"params\">(Swimming sw)</span>&#123;</span><br><span class=\"line\">        sw.swin();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span>  <span class=\"title class_\">Swimming</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">swin</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"方法引用\"><a href=\"#方法引用\" class=\"headerlink\" title=\"方法引用\"></a>方法引用</h1><h2 id=\"静态-x2F-实例方法\"><a href=\"#静态-x2F-实例方法\" class=\"headerlink\" title=\"静态&#x2F;实例方法\"></a>静态&#x2F;实例方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        student[] students = <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>[]&#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">3</span>, <span class=\"string\">&quot;zhangsan&quot;</span>, <span class=\"number\">32</span>),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">4</span>, <span class=\"string\">&quot;lisi&quot;</span>, <span class=\"number\">28</span>),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;wy&quot;</span>, <span class=\"number\">12</span>),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">student</span>(<span class=\"number\">5</span>, <span class=\"string\">&quot;aadasjdas&quot;</span>, <span class=\"number\">43</span>)</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"><span class=\"comment\">//      Arrays.sort(students, (student,t1)-&gt;student.age-t1.age);</span></span><br><span class=\"line\">        <span class=\"comment\">//静态方法引用</span></span><br><span class=\"line\">        Arrays.sort(students,CompareByData::compareByAge);</span><br><span class=\"line\">        <span class=\"comment\">//实例方法引用</span></span><br><span class=\"line\">        CompareByData compare=<span class=\"keyword\">new</span> <span class=\"title class_\">CompareByData</span>();</span><br><span class=\"line\">        Arrays.sort(students,compare::compareByAgeDesc);</span><br><span class=\"line\">        System.out.println(Arrays.toString(students));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CompareByData</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">compareByAge</span><span class=\"params\">(student stu1,student stu2&#123;</span></span><br><span class=\"line\"><span class=\"params\">        return  stu1.age-stu2.age;</span></span><br><span class=\"line\"><span class=\"params\">    &#125;</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"keyword\">public</span>  <span class=\"type\">int</span> compareByAgeDesc(student stu1,student stu2)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>  stu2.age-stu1.age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"特例类型方法引用\"><a href=\"#特例类型方法引用\" class=\"headerlink\" title=\"特例类型方法引用\"></a>特例类型方法引用</h2><p>如果某个lambda表达式中只是调用一个实例方法，并且参数列表的第一个参数是作为方法的主调，后面的参数是作为该实例方法入参的，则此时可以使用特定的类型方法引用</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        String[] name=&#123;<span class=\"string\">&quot;ahasd&quot;</span>,<span class=\"string\">&quot;aaasd&quot;</span>,<span class=\"string\">&quot;pppadas&quot;</span>,<span class=\"string\">&quot;Zasdas&quot;</span>,<span class=\"string\">&quot;Asdsa&quot;</span>,<span class=\"string\">&quot;TUasd&quot;</span>&#125;;</span><br><span class=\"line\">        Arrays.sort(name);</span><br><span class=\"line\">        <span class=\"comment\">//忽略首字符大小写进行排序</span></span><br><span class=\"line\">        <span class=\"comment\">//Arrays.sort(name, (s,t1)-&gt; s.compareToIgnoreCase(t1));</span></span><br><span class=\"line\">        <span class=\"comment\">//特定类型方法引用</span></span><br><span class=\"line\">        Arrays.sort(name, String::compareToIgnoreCase);</span><br><span class=\"line\">        System.out.println(Arrays.toString(name));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"构造器引用\"><a href=\"#构造器引用\" class=\"headerlink\" title=\"构造器引用\"></a>构造器引用</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//CreateStu cstu=(num,name,age)-&gt;new student(num,name,age);</span></span><br><span class=\"line\">    CreateStu cstu1=student::<span class=\"keyword\">new</span>;</span><br><span class=\"line\">    <span class=\"type\">student</span> <span class=\"variable\">student</span> <span class=\"operator\">=</span> cstu1.create(<span class=\"number\">1</span>, <span class=\"string\">&quot;zhangsan&quot;</span>, <span class=\"number\">89</span>);</span><br><span class=\"line\">    System.out.println(student);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h1><h2 id=\"Collectioon-接口-单列集合\"><a href=\"#Collectioon-接口-单列集合\" class=\"headerlink\" title=\"Collectioon(接口)单列集合\"></a>Collectioon(接口)单列集合</h2><ul>\n<li>List<E> 有序、可重复、有索引<blockquote>\n<p>ArrayList<E>、LinkedList<E>:有序、可重复、有索引<br>ArrayList 查询快、删除慢，添加效率低</p>\n</blockquote>\n</li>\n<li>Set<E> 无序、不重复、无索引<blockquote>\n<p>HashSet: 无序(<strong>添加的顺序喝读取的顺序不一致</strong>)、不重复、无索引<br>LinkHashSet: <strong>有序</strong>、不重复、无索引<br>TreeSet:按照大小默认升序排列、不重复、无索引</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//遍历</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">    List&lt;String&gt; res=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    Iterator&lt;String&gt; iterator = res.iterator();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (iterator.hasNext())&#123;</span><br><span class=\"line\">        System.out.println(iterator.next());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res.forEach(s-&gt; System.out.println(s));</span><br><span class=\"line\">    res.forEach(System.out::println);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"HashSet特点\"><a href=\"#HashSet特点\" class=\"headerlink\" title=\"HashSet特点\"></a>HashSet特点</h2><ul>\n<li>哈希值<blockquote>\n<p>不同对象的，它们的哈希值可能相同(哈希碰撞),一般不同<br>JDK8 之前是数组+链表，JDK8 之后是数组+链表+红黑树</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"Conllections工具类\"><a href=\"#Conllections工具类\" class=\"headerlink\" title=\"Conllections工具类\"></a>Conllections工具类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    List&lt;String&gt; res=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//添加元素</span></span><br><span class=\"line\">    Collections.addAll(res,<span class=\"string\">&quot;张三&quot;</span>,<span class=\"string\">&quot;lisi&quot;</span>,<span class=\"string\">&quot;wangwu&quot;</span>);</span><br><span class=\"line\">    System.out.println(res);</span><br><span class=\"line\">    <span class=\"comment\">//打乱集合</span></span><br><span class=\"line\">    Collections.shuffle(res);</span><br><span class=\"line\">    List&lt;Movies&gt; movies=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    movies.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Movies</span>(<span class=\"string\">&quot;zxjkasdsa&quot;</span>,<span class=\"number\">9.0</span>,<span class=\"string\">&quot;asdasd&quot;</span>));</span><br><span class=\"line\">    movies.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Movies</span>(<span class=\"string\">&quot;awrwer&quot;</span>,<span class=\"number\">8.0</span>,<span class=\"string\">&quot;wewq&quot;</span>));</span><br><span class=\"line\">    movies.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Movies</span>(<span class=\"string\">&quot;zcxzxcz&quot;</span>,<span class=\"number\">9.1</span>,<span class=\"string\">&quot;vxcvdf&quot;</span>));</span><br><span class=\"line\">    Collections.sort(movies,(m1,m2)-&gt;Double.compare(m1.getSc(),m2.getSc()));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Map集合-双列集合\"><a href=\"#Map集合-双列集合\" class=\"headerlink\" title=\"Map集合 双列集合\"></a>Map集合 双列集合</h2><ul>\n<li>HashMap  <blockquote>\n<p>按照键、无序(<strong>对象比较依赖重写equals()和hashcode()方法</strong>)、不重复、无索引</p>\n</blockquote>\n</li>\n<li>LinkHashMap  <blockquote>\n<p>按照键、有序、不重复、无索引</p>\n</blockquote>\n</li>\n<li>TreeMap<blockquote>\n<p>可排序(默认升序)、不重复、无索引</p>\n</blockquote>\n</li>\n</ul>\n<p><strong>常用方法</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>  &#123;</span><br><span class=\"line\">      Map&lt;String,Integer&gt; map1=<span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">      map1.put(<span class=\"string\">&quot;zs&quot;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">      map1.put(<span class=\"string\">&quot;aca&quot;</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">      map1.put(<span class=\"string\">&quot;ww&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">      map1.put(<span class=\"string\">&quot;ls&quot;</span>,<span class=\"number\">29</span>);</span><br><span class=\"line\">      <span class=\"comment\">//获取键对应的值</span></span><br><span class=\"line\">      System.out.println(map1.get(<span class=\"string\">&quot;zs&quot;</span>));</span><br><span class=\"line\">      <span class=\"comment\">//是否包含值/键</span></span><br><span class=\"line\">      System.out.println(map1.containsKey(<span class=\"string\">&quot;zs&quot;</span>));</span><br><span class=\"line\">      System.out.println(map1.containsValue(<span class=\"number\">2</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">      Set&lt;String&gt; keys = map1.keySet();</span><br><span class=\"line\">      keys.forEach((System.out::println));</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//合并Map集合</span></span><br><span class=\"line\">      Map&lt;String,Integer&gt; maps=<span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">      maps.put(<span class=\"string\">&quot;aaa&quot;</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">      <span class=\"comment\">//把map1的全倒入maps中</span></span><br><span class=\"line\">      maps.putAll(map1);</span><br><span class=\"line\">      <span class=\"comment\">//遍历方法1</span></span><br><span class=\"line\">      Set&lt;Map.Entry&lt;String, Integer&gt;&gt; entries = maps.entrySet();</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (Map.Entry&lt;String, Integer&gt; entry : entries) &#123;</span><br><span class=\"line\">          <span class=\"type\">String</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> entry.getKey();</span><br><span class=\"line\">          <span class=\"type\">Integer</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> entry.getValue();</span><br><span class=\"line\">          System.out.println(key+<span class=\"string\">&quot;:&quot;</span>+value);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//2</span></span><br><span class=\"line\">      maps.forEach((k,v)-&gt;&#123;</span><br><span class=\"line\">          System.out.println(k+<span class=\"string\">&quot;:&quot;</span>+v);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Stream流\"><a href=\"#Stream流\" class=\"headerlink\" title=\"Stream流\"></a>Stream流</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n",
            "tags": [
                "JAVA,JAVASE"
            ]
        },
        {
            "id": "https://vereatorm.github.io/2023/07/05/computer-science/java/javase/JavaSE_Day1/",
            "url": "https://vereatorm.github.io/2023/07/05/computer-science/java/javase/JavaSE_Day1/",
            "title": "java面向对象",
            "date_published": "2023-07-04T16:00:00.000Z",
            "content_html": "<p>note info:<strong>查漏补缺</strong><br>第一天复习 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUN2NDExMzcybT9wPTExMSZ2ZF9zb3VyY2U9ZWU3NjBiZjdhNGQ4OWQzZWU5MmY0ZjgzZjNhNjgyYzk=\">JAVA入门基础</span><br>JAVA Object-Oriented Content<br>Welcome to this note, which covers some basic syntax of javaSE.</p>\n<p><strong>课堂笔记</strong></p>\n<h1 id=\"内部类\"><a href=\"#内部类\" class=\"headerlink\" title=\"内部类\"></a>内部类</h1><h2 id=\"普通的内部类\"><a href=\"#普通的内部类\" class=\"headerlink\" title=\"普通的内部类\"></a>普通的内部类</h2><p>可以直接访问外部类的实例成员、静态成员</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Outer</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String a;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age=<span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"comment\">//成员内部类</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">class</span> <span class=\"title class_\">Inner</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">        <span class=\"keyword\">private</span>  <span class=\"type\">int</span> age=<span class=\"number\">90</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">            System.out.println(age);</span><br><span class=\"line\">            System.out.println(a);</span><br><span class=\"line\">            <span class=\"type\">int</span> age=<span class=\"number\">77</span>;</span><br><span class=\"line\">            System.out.println(age);</span><br><span class=\"line\">            System.out.println(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">            <span class=\"comment\">//获取外部类变量</span></span><br><span class=\"line\">            System.out.println(Outer.<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"实现创建方法\"><a href=\"#实现创建方法\" class=\"headerlink\" title=\"实现创建方法\"></a>实现创建方法</h2><p>– 成员内部类需要先创建外部对象才能创建内部对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Outer.Inner in=<span class=\"keyword\">new</span> <span class=\"title class_\">Outer</span>().<span class=\"keyword\">new</span> <span class=\"title class_\">Inner</span>();</span><br><span class=\"line\">        in.test();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"静态内部类\"><a href=\"#静态内部类\" class=\"headerlink\" title=\"静态内部类\"></a>静态内部类</h2><p>创建静态内部类对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Outer.<span class=\"type\">Inner</span> <span class=\"variable\">inner</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Outer</span>.Inner();</span><br><span class=\"line\">        inner.test1();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以把静态内部类理解为一个静态方法，<em><strong>可以直接访问静态的外部成员变量</strong></em>，但不能直接访问普通成员变量</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Outer</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String schoolName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age=<span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"comment\">//静态内部类</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Inner</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> a=<span class=\"number\">90</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//访问外部类的成员</span></span><br><span class=\"line\">        System.out.println(schoolName);</span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">new</span> <span class=\"title class_\">Outer</span>().age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"匿名内部类\"><a href=\"#匿名内部类\" class=\"headerlink\" title=\"匿名内部类\"></a>匿名内部类</h2><hr>\n<h3 id=\"不使用匿名内部类写法\"><a href=\"#不使用匿名内部类写法\" class=\"headerlink\" title=\"不使用匿名内部类写法\"></a>不使用匿名内部类写法</h3><ol>\n<li>需要先创建一个抽象方法</li>\n<li>再使用一个类继承这个抽象方法来实现<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Aninmal cat=<span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>();</span><br><span class=\"line\">        cat.cry();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span>  <span class=\"title class_\">Cat</span> <span class=\"keyword\">extends</span>  <span class=\"title class_\">Aninmal</span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">cry</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;mmm&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Aninmal</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">cry</span><span class=\"params\">()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<hr>\n<h3 id=\"使用匿名内部类之后\"><a href=\"#使用匿名内部类之后\" class=\"headerlink\" title=\"使用匿名内部类之后\"></a>使用匿名内部类之后</h3><ol>\n<li><strong>匿名内部类本质就是一个子类 并会立即创建出一个子类对象</strong></li>\n<li>通常作为一个参数传输给方法</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">      Animal animal=<span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"meta\">@Override</span></span><br><span class=\"line\">          <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">cry</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">              System.out.println(<span class=\"string\">&quot;ccc&quot;</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      animal.cry();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">abstract</span>  <span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">abstract</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">cry</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>实际使用场景</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">       </span><br><span class=\"line\">        go( <span class=\"keyword\">new</span> <span class=\"title class_\">Swimming</span>()&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">swin</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;猫游泳&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">go</span><span class=\"params\">(Swimming sw)</span>&#123;</span><br><span class=\"line\">        sw.swin();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span>  <span class=\"title class_\">Swimming</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">swin</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"枚举\"><a href=\"#枚举\" class=\"headerlink\" title=\"枚举\"></a>枚举</h1><h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><ol>\n<li>枚举是一种特殊的类</li>\n<li>枚举类的第一行都是常量记住的都是枚举类的对象<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    X,Y,Z;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<hr>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        A a1=A.X;</span><br><span class=\"line\">        A[] values = A.values();    <span class=\"comment\">//获取所有的对象</span></span><br><span class=\"line\">        System.out.println(a1.getName());</span><br><span class=\"line\">        System.out.println(a1.ordinal());   <span class=\"comment\">//获得索引</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"枚举使用场景\"><a href=\"#枚举使用场景\" class=\"headerlink\" title=\"枚举使用场景\"></a>枚举使用场景</h2><p>作信息的筛选，约束参数值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        check(Constant.BOY);</span><br><span class=\"line\">        check(Constant.GIRL);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">check</span><span class=\"params\">(Constant flag)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (flag)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> GIRL:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;女生&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span>  BOY:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;男生&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>创建一个独立的常量包</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">Constant</span> &#123;</span><br><span class=\"line\">    GIRL,BOY;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Lambda表达式\"><a href=\"#Lambda表达式\" class=\"headerlink\" title=\"Lambda表达式\"></a>Lambda表达式</h1><p>只能简化函数式接口(<strong>是接口，且只有一个抽象方法</strong>)的匿名内部类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        go(()-&gt;&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;游泳ing&quot;</span>);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">go</span><span class=\"params\">(Swimming sw)</span>&#123;</span><br><span class=\"line\">        sw.swin();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span>  <span class=\"title class_\">Swimming</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">swin</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "JAVA,JAVASE"
            ]
        }
    ]
}