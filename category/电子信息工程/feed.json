{
    "version": "https://jsonfeed.org/version/1",
    "title": "Luk's Blog • All posts by \"电子信息工程\" category",
    "description": "",
    "home_page_url": "https://Meteora233.github.io",
    "items": [
        {
            "id": "https://meteora233.github.io/2025/01/31/Electronic-information/STM32/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/",
            "url": "https://meteora233.github.io/2025/01/31/Electronic-information/STM32/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/",
            "title": "STM32单片机环境配置",
            "date_published": "2025-01-30T16:00:00.000Z",
            "content_html": "<p>note info:<br>第一天学习 课程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXRoNDExejdzbi8/c3BtX2lkX2Zyb209MzMzLjEzOTEuMC4wJnA9NCZ2ZF9zb3VyY2U9ZWU3NjBiZjdhNGQ4OWQzZWU5MmY0ZjgzZjNhNjgyYzk=\">STM32标准库</span>  </p>\n<h1 id=\"新建工程\"><a href=\"#新建工程\" class=\"headerlink\" title=\"新建工程\"></a>新建工程</h1><h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><ol>\n<li>创建项目Project-&gt;new Project ,选择STM32F103<br><img data-src=\"https://s21.ax1x.com/2025/01/31/pEZSYT0.png\" alt=\"选择芯片型号\"></li>\n<li>创建启动库文件</li>\n</ol>\n<ul>\n<li>stm32启动文件<br>stm32f10x.h 就是stm32的外设寄存器描述文件，作用和51单片机的头文件REGX52.H 一样，用来描述stm32有哪些寄存器和它对应的地址两个system是用来配置时钟，stm32主频72MHz,也就是system函数配置的<br>文件目录:固件库\\STM32F10x_StdPeriph_Lib_V3.5.0\\Libraries\\CMSIS\\CM3\\DeviceSupport\\ST\\STM32F10x</li>\n<li>core文件<br>因为stm32是内核和内核外围的设备组成的，而且这个内核的寄存器描述和外围设备的描述文件不在一起，需要添加一个内核寄存器的描述文件两个cm3 core是内核的寄存器描述文件，还含带了一些内核的配置函数，所以多了个.c文件<br>文件目录:固件库\\STM32F10x_StdPeriph_Lib_V3.5.0\\Libraries\\CMSIS\\CM3\\CoreSupport</li>\n</ul>\n<ol start=\"3\">\n<li><p>在项目文件夹下创建一个Start文件夹，将上述的启动的文件复制进去<br><a href=\"https://imgse.com/i/pEZSX9S\"><img data-src=\"https://s21.ax1x.com/2025/01/31/pEZSX9S.png\" alt=\"Start文件夹\"></a></p>\n</li>\n<li><p>在Keil软件内，将Source Group1的名称修改为Start<br><a href=\"https://imgse.com/i/pEZp97q\"><img data-src=\"https://s21.ax1x.com/2025/01/31/pEZp97q.png\" alt=\"修改名称.png\"></a></p>\n</li>\n<li><p>将启动文件、.c、.h文件添加到start文件夹<br><a href=\"https://imgse.com/i/pEZpPA0\"><img data-src=\"https://s21.ax1x.com/2025/01/31/pEZpPA0.png\" alt=\"添加文件.png\"></a></p>\n</li>\n<li><p>添加头文件路径<br><a href=\"https://imgse.com/i/pEZpQN6\"><img data-src=\"https://s21.ax1x.com/2025/01/31/pEZpQN6.png\" alt=\"添加头文件路径\"></a></p>\n</li>\n<li><p>创建main文件<br><a href=\"https://imgse.com/i/pEZptud\"><img data-src=\"https://s21.ax1x.com/2025/01/31/pEZptud.png\" alt=\"创建main文件\"></a></p>\n</li>\n<li><p>编写main文件<br><a href=\"https://imgse.com/i/pEZph5V\"><img data-src=\"https://s21.ax1x.com/2025/01/31/pEZph5V.png\" alt=\"pEZph5V.png\"></a></p>\n</li>\n</ol>\n<h1 id=\"寄存器点灯\"><a href=\"#寄存器点灯\" class=\"headerlink\" title=\"寄存器点灯\"></a>寄存器点灯</h1><h2 id=\"RCC寄存器\"><a href=\"#RCC寄存器\" class=\"headerlink\" title=\"RCC寄存器\"></a>RCC寄存器</h2><ol>\n<li>打开stm32的参考手册，首先是一个RCC的寄存器，来使能GPIOC时钟，GPIO都是APB2的外设，所以在这个APB2外设时钟使能寄存器RCC_APB2ENR里面配置，</li>\n<li>打开说明有个IOPCEN ，这一位就是使能GPIOC时钟的，</li>\n</ol>\n<ul>\n<li>IOPCEN：IO端口C时钟使能 (I&#x2F;O port C clock enable) </li>\n<li>由软件置’1’或清’0’ </li>\n<li>0：IO端口C时钟关闭；</li>\n<li>1：IO端口C时钟开启。 &#x2F;&#x2F;这一位写1就是打开GPIOC的时钟</li>\n</ul>\n<ol start=\"3\">\n<li>代码实现：<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"PC13口的模式\"><a href=\"#PC13口的模式\" class=\"headerlink\" title=\"PC13口的模式\"></a>PC13口的模式</h2><ul>\n<li>手册中的8.2.2</li>\n</ul>\n<ol>\n<li>CNF13 和Mode13就是用来配置13号口的</li>\n<li>CNFy,CNF需要配置为00：通用推挽输出模式</li>\n<li>Mode需要配置为11：输出模式，最搭速度为50MHz</li>\n</ol>\n<h2 id=\"端口输出数据寄存器GPIOx-ODR\"><a href=\"#端口输出数据寄存器GPIOx-ODR\" class=\"headerlink\" title=\"端口输出数据寄存器GPIOx_ODR\"></a>端口输出数据寄存器GPIOx_ODR</h2><ul>\n<li>手册中的8.2.4</li>\n</ul>\n<ol>\n<li>中间有一位ODR13，这一位写1，13号口就是高电平，写0就是低电平</li>\n</ol>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stm32f10x.h&quot;</span>                  <span class=\"comment\">// Device header</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">void</span>)</span>&#123;</span><br><span class=\"line\">  RCC-&gt;APB2ENR=<span class=\"number\">0x00000010</span>;</span><br><span class=\"line\">  GPIOC-&gt;CRH=<span class=\"number\">0x00300000</span>;</span><br><span class=\"line\">  <span class=\"comment\">//GPIOC-&gt;ODR=0x00000000; // 因为这个灯是低电平点亮的，所以我们给ODR全0就是亮，ODR2000就是灭</span></span><br><span class=\"line\"></span><br><span class=\"line\">  GPIOC-&gt;ODR=<span class=\"number\">0x00002000</span>; <span class=\"comment\">// 因为这个灯是低电平点亮的，所以我们给ODR全0就是亮，ODR2000就是灭</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>可以看出这种方式需要不断的地查手册来了解每个寄存器的每一位的作用，这个操作也有一个弊端，比如我们把除了PC13之外的所有位都配置成了0，这样会影响到其他端口的原有配置，如果要只做到配置PC13而不影响其他位，那还需要&amp;&#x3D;和|&#x3D;的操作。所以这种寄存器的方式虽然代码简洁，但还是不大方便</li>\n</ul>\n<h1 id=\"库函数调用方式\"><a href=\"#库函数调用方式\" class=\"headerlink\" title=\"库函数调用方式\"></a>库函数调用方式</h1><h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ol>\n<li><p>为工程添加库函数</p>\n<blockquote>\n<p>在工程目录下创建Library文件夹，用来存放库函数</p>\n</blockquote>\n</li>\n<li><p>打开固件库<em>STM32F10x_StdPeriph_Lib_V3.5.0\\Libraries\\STM32F10x_StdPeriph_Driver\\src”<em>和</em>STM32F10x_StdPeriph_Driver\\inc</em>将其中的文件都复制到Library文件夹中</p>\n<blockquote>\n<p>其中misc.c 是内核的库函数，其他的是内核外的库函数</p>\n</blockquote>\n</li>\n<li><p>回到keil软件，创建右击Target,创建Group,名为:Library,然后添加现有项,选择Library文件夹中所有的文件</p>\n</li>\n<li><p>将这三个文件复制到工程目录的User文件夹下，然后对keil软件内的User添加现有项，将这三个文件添加进来</p>\n<blockquote>\n<p><em>固件库\\STM32F10x_StdPeriph_Lib_V3.5.0\\Project\\STM32F10x_StdPeriph_Template</em> 目录下</p>\n<table>\n<thead>\n<tr>\n<th>文件名</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>stm32f10x_conf.h</td>\n<td>用来配置库函数头文件的包含关系、然后这里面还有个用来检查参数检查的函数定义的</td>\n</tr>\n<tr>\n<td>stm32f10x_it.c、stm32f10x_it.h</td>\n<td>用来存放中断函数的</td>\n</tr>\n</tbody></table>\n</blockquote>\n</li>\n<li><p>点击魔法棒内-&gt; C&#x2F;C++，define 输入USE_STDPERIPH_DRIVER</p>\n<blockquote>\n<p>因为stm32f10x.h内有这么一段语句，所以要先存在这个字符串，下面的include 才有效</p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> USE_STDPERIPH_DRIVER</span></span><br><span class=\"line\">  <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stm32f10x_conf.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br></pre></td></tr></table></figure></li>\n<li><p>同时把include Path中的User路径和Library路径都选择上</p>\n</li>\n<li><p>这样我们基于库函数的工程文件就创建好了<br>创建完成后如下图:<br><a href=\"https://imgse.com/i/pEZEeTH\"><img data-src=\"https://s21.ax1x.com/2025/01/31/pEZEeTH.png\" alt=\"pEZEeTH.png\"></a></p>\n</li>\n</ol>\n<h1 id=\"使用库文件进行点灯\"><a href=\"#使用库文件进行点灯\" class=\"headerlink\" title=\"使用库文件进行点灯\"></a>使用库文件进行点灯</h1><blockquote>\n<p>库函数也是间接的配置寄存器，所以步骤一致</p>\n</blockquote>\n<ol>\n<li>首先是使能时钟， 那库函数有这么一个函数（<strong>RCC_APB2PeriphClockCmd</strong>）来开启时钟</li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "https://meteora233.github.io/2024/04/20/Electronic-information/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/",
            "url": "https://meteora233.github.io/2024/04/20/Electronic-information/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/",
            "title": "一些考研相关的碎碎念",
            "date_published": "2024-04-19T16:00:00.000Z",
            "content_html": "<h1 id=\"数学\"><a href=\"#数学\" class=\"headerlink\" title=\"数学\"></a>数学</h1><p>张宇基础班+武忠祥提高班<br>1800+武忠祥严选+990（或660）+真题+合工大超越+李林6+4</p>\n<p>数二大纲<br>考试科目<br>高等数学、线性代数<br>1、试卷满分及考试时间<br>试卷满分为150分，考试时间为180分钟<br>2、答题方式<br>答题方式为闭卷、笔试<br>3、试卷内容结构<br>高等数学 80%<br>线性代数 20%<br>4、试卷题型结构<br>试卷题型结构为：<br>单选题 10小题，每题5分，共50分<br>填空题 6小题，每题5分，共30分<br>解答题（包括证明题） 6小题，共70分</p>\n<h2 id=\"高等数学\"><a href=\"#高等数学\" class=\"headerlink\" title=\"高等数学\"></a>高等数学</h2><h3 id=\"函数、极限、连续\"><a href=\"#函数、极限、连续\" class=\"headerlink\" title=\"函数、极限、连续\"></a>函数、极限、连续</h3><p>考试内容：函数的概念及表示法、函数的有界性、单调性、周期性和奇偶性、复合函数、反函数、分段函数和隐函数、基本初等函数的性质及其图形、初等函数、函数关系的建立、数列极限与函数极限的定义及其性质、函数的左极限和右极限、无穷小量和无穷大量的概念及其关系、无穷小量的性质及无穷小量的比较、极限的四则运算、极限存在的两个准则：单调有界准则和夹逼准则、两个重要极限：<br>函数连续的概念、函数间断点的类型、初等函数的连续性、闭区间上连续函数的性质<br>考试要求</p>\n<ul>\n<li>1.理解函数的概念，掌握函数的表示法，会建立应用问题的函数关系。</li>\n<li>2.了解函数的有界性、单调性、周期性和奇偶性。</li>\n<li>3.理解复合函数及分段函数的概念了解反函数及隐函数的概念。</li>\n<li>4.掌握基本初等函数的性质及其图形，了解初等函数的概念。</li>\n<li>5.理解极限的概念，理解函数左极限与右极限的概念以及函数极限存在与左、右极限之间的关系。</li>\n<li>6.掌握极限的性质及四则运算法则。</li>\n<li>7.掌握极限存在的两个准则，并会利用它们求极限，掌握利用两个重要极限求极限的方法。</li>\n<li>8.理解无穷小量、无穷大量的概念，掌握无穷小量的比较方法，会用等价无穷小量求极限。</li>\n<li>9.理解函数连续性的概念（含左连续与右连续），会判别函数间断点的类型。</li>\n<li>10.了解连续函数的性质和初等函数一的连续性，理解闭区间上连续函数的性质（有界性、最大值和最小值定理、介值定理），并会应用这些性质。</li>\n</ul>\n<h3 id=\"一元函数微分学\"><a href=\"#一元函数微分学\" class=\"headerlink\" title=\"一元函数微分学\"></a>一元函数微分学</h3><p>考试要求</p>\n<ul>\n<li>1.理解导数和微分的概念，理解导数和微分的关系，理解函数的可导性与连续性之间的关系。</li>\n<li>2.掌握导数的四则运算法则和复合函数的求导法则，掌握基本初等函数的导数公式.了解微分的四则运算法则和一阶微分形式的不变性，会求函数的微分。</li>\n<li>3.了解高阶导数的概念，会求简单函数的高阶导数。</li>\n<li>4.会求分段函数的导数，会求隐函数和由参数方程所确定的函数以及反函数的导数。</li>\n<li>5.理解并会用罗尔（Rolle）定理、拉格朗日（Lagrange）中值定理和泰勒（Taylor）定理，了解并会用柯西（Cauchy）中值定理。</li>\n<li>6.掌握用洛必达法则求未定式极限的方法。</li>\n<li>7.理解函数的极值概念，掌握用导数判断函数的单调性和求函数极值的方法，掌握函数最大值和最小值的求法及其应用。</li>\n<li>8.会用导数判断函数图形的凹凸性（注：在区间（a,b）内，设函数f（x）具有二阶导数。当＞0时，f（x）的图形是凹的；当＜0时，f（x）的图形是凸的），会求函数图形的拐点以及水平、铅直和斜渐近线，会描绘函数的图形。</li>\n<li>9.了解曲率、曲率圆和曲率半径的概念，会计算曲率和曲率半径。</li>\n</ul>\n<h3 id=\"一元函数积分学\"><a href=\"#一元函数积分学\" class=\"headerlink\" title=\"一元函数积分学\"></a>一元函数积分学</h3><p>考试内容：原函数和不定积分的概念、不定积分的基本性质、基本积分公式定积分的概念和基本性质、定积分中值定理、积分上限的函数及其导数、牛顿-莱布尼茨（Newton-Leibniz）公式、不定积分和定积分的换元积分法与分部积分法、有理函数、三角函数的有理式和简单无理函数的积分反常（广义）积分、定积分的应用<br>考试要求</p>\n<ul>\n<li>1.理解原函数的概念，理解不定积分和定积分的概念。</li>\n<li>2.掌握不定积分的基本公式，掌握不定积分和定积分的性质及定积分中值定理，掌握换元积分法与分部积分法。</li>\n<li>3.会求有理函数、三角函数有理式和简单无理函数的积分。</li>\n<li>4.理解积分上限的函数，会求它的导数，掌握牛顿一莱布尼茨公式。</li>\n<li>5.了解反常积分的概念，会计算反常积分。</li>\n<li>6.掌握用定积分表达和计算一些几何量与物理量（平面图形的面积、平面曲线的弧长、旋转体的体积及侧面积、平行截面面积为已知的立体体积、功、引力、压力、质心、形心等）及函数的平均值。</li>\n</ul>\n<h3 id=\"多元函数微积分学\"><a href=\"#多元函数微积分学\" class=\"headerlink\" title=\"多元函数微积分学\"></a>多元函数微积分学</h3><p>考试要求</p>\n<ul>\n<li>1.了解多元函数的概念，了解二元函数的几何意义。</li>\n<li>2.了解二元函数的极限与连续的概念，了解有界闭区域上二元连续函数的性质。</li>\n<li>3.了解多元函数偏导数与全微分的概念，会求多元复合函数一阶、二阶偏导数，会求全微分，了解隐函数存在定理，会求多元隐函数的偏导数。</li>\n<li>4.了解多元函数极值和条件极值的概念，掌握多元函数极值存在的必要条件，了解二元函数极值存在的充分条件，会求二元函数的极值，会用拉格朗日乘数法求条件极值，会求简单多元函数的最大值和最小值，并求解一些简单的应用问题。</li>\n<li>5.理解二重积分的概念，了解二重积分的基本性质，了解二重积分的中值定理，掌握二重积分的计算方法（直角坐标、极坐标）。</li>\n</ul>\n<h3 id=\"常微分方程\"><a href=\"#常微分方程\" class=\"headerlink\" title=\"常微分方程\"></a>常微分方程</h3><p>考试内容：常微分方程的基本概念、变量可分离的微分方程、齐次微分方程、一阶线性微分方程、可降阶的高阶微分方程、线性微分方程解的性质及解的结构定理、二阶常系数齐次线性微分方程、高于二阶的某些常系数齐次线性微分方程、简单的二阶常系数非齐次线性微分方程、微分方程的简单应用<br>考试要求</p>\n<ul>\n<li>1.了解微分方程及其阶、解、通解、初始条件和特解等概念。</li>\n<li>2.掌握变量可分离的微分方程及一阶线性微分方程的解法，会解齐次微分方程。</li>\n<li>3.会用降阶法解下列形式的微分方程：</li>\n<li>4.理解线性微分方程解的性质及解的结构。</li>\n<li>5.掌握二阶常系数齐次线性微分方程的解法，并会解某些高于二阶的常系数齐次线性微分方程。</li>\n<li>6.会解自由项为多项式、指数函数、正弦函数、余弦函数以及它们的和与积的二阶常系数非齐次线性微分方程。</li>\n<li>7.会用微分方程解决一些简单的应用问题。</li>\n</ul>\n<h2 id=\"线性代数\"><a href=\"#线性代数\" class=\"headerlink\" title=\"线性代数\"></a>线性代数</h2><h3 id=\"行列式\"><a href=\"#行列式\" class=\"headerlink\" title=\"行列式\"></a>行列式</h3><p>考试内容：行列式的概念和基本性质、行列式按行（列）展开定理<br>考试要求</p>\n<ul>\n<li>1.了解行列式的概念，掌握行列式的性质。</li>\n<li>2.会应用行列式的性质和行列式按行（列）展开定理计算行列式。</li>\n</ul>\n<h3 id=\"矩阵\"><a href=\"#矩阵\" class=\"headerlink\" title=\"矩阵\"></a>矩阵</h3><p>考试内容：矩阵的概念、矩阵的线性运算、矩阵的乘法、方阵的幂、方阵乘积的行列式、矩阵的转置、逆矩阵的概念和性质、矩阵可逆的充分必要条件、伴随矩阵、矩阵的初等变换、初等矩阵、矩阵的秩、矩阵的等价分块矩阵及其运算<br>考试要求<br>1.理解矩阵的概念，了解单位矩阵、数量矩阵、对角矩阵、三角矩阵、对称矩阵、反对称矩阵和正交矩阵以及它们的性质。<br>2.掌握矩阵的线性运算、乘法、转置以及它们的运算规律，了解方阵的幂与方阵乘积的行列式的性质。<br>3.理解逆矩阵的概念，掌握逆矩阵的性质以及矩阵可逆的充分必要条件.理解伴随矩阵的概念，会用伴随矩阵求逆矩阵。<br>4.了解矩阵初等变换的概念，了解初等矩阵的性质和矩阵等价的概念，理解矩阵的秩的概念，掌握用初等变换求矩阵的秩和逆矩阵的方法。<br>5.了解分块矩阵及其运算。<br>向量<br>考试内容：向量的概念、向量的线性组合和线性表示、向量组的线性相关与线性无关、向量组的极大线性无关组、等价向量组、向量组的秩、向量组的秩与矩阵的秩之间的关系、向量的内积、线性无关向量组的正交规范化方法<br>考试要求</p>\n<ul>\n<li>1.理解n维向量、向量的线性组合与线性表示的概念。</li>\n<li>2.理解向量组线性相关、线性无关的概念，掌握向量组线性相关、线性无关的有关性质及判别法。</li>\n<li>3.了解向量组的极大线性无关组和向量组的秩的概念，会求向量组的极大线性无关组及秩。</li>\n<li>4.了解向量组等价的概念，了解矩阵的秩与其行（列）向量组的秩的关系。</li>\n<li>5.了解内积的概念，掌握线性无关向量组正交规范化的施密特（Schmidt）方法。</li>\n</ul>\n<h3 id=\"线性方程组\"><a href=\"#线性方程组\" class=\"headerlink\" title=\"线性方程组\"></a>线性方程组</h3><p>考试内容：线性方程组的克莱姆（Cramer）法则、齐次线性方程组有非零解的充分必要条件、非齐次线性方程组有解的充分必要条件、线性方程组解的性质和解的结构、齐次线性方程组的基础解系和通解、非齐次线性方程组的通解<br>考试要求</p>\n<ul>\n<li>1.会用克莱姆法则。</li>\n<li>2.理解齐次线性方程组有非零解的充分必要条件及非齐次线性方程组有解的充分必要条件。</li>\n<li>3.理解齐次线性方程组的基础解系及通解的概念，掌握齐次线性方程组的基础解系和通解的求法。</li>\n<li>4.理解非齐次线性方程组的解的结构及通解的概念。</li>\n<li>5.会用初等行变换求解线性方程组。</li>\n</ul>\n<h3 id=\"矩阵的特征值和特征向量\"><a href=\"#矩阵的特征值和特征向量\" class=\"headerlink\" title=\"矩阵的特征值和特征向量\"></a>矩阵的特征值和特征向量</h3><p>考试内容：矩阵的特征值和特征向量的概念、性质、相似矩阵的概念及性质、矩阵可相似对角化的充分必要条件及相似对角矩阵、实对称矩阵的特征值、特征向量及其相似对角矩阵<br>考试要求</p>\n<ul>\n<li>1.理解矩阵的特征值和特征向量的概念及性质，会求矩阵的特征值和特征向量。</li>\n<li>2.理解相似矩阵的概念、性质及矩阵可相似对角化的充分必要条件，掌握将矩阵化为相似对角矩阵的方法。</li>\n<li>3.掌握实对称矩阵的特征值和特征向量的性质。</li>\n</ul>\n<h3 id=\"二次型\"><a href=\"#二次型\" class=\"headerlink\" title=\"二次型\"></a>二次型</h3><p>考试内容：二次型及其矩阵表示、合同变换与合同矩阵、二次型的秩、惯性定理、二次型的标准形和规范形用正交变换和配方法化二次型为标准形、二次型及其矩阵的正定性<br>考试要求</p>\n<ul>\n<li>1.掌握二次型及其矩阵表示，了解二次型秩的概念，了解合同变换与合同矩阵的概念，了解二次型的标准形、规范- 形的概念以及惯性定理。</li>\n<li>2.掌握用正交变换化二次型为标准形的方法，会用配方法化二次型为标准形。</li>\n<li>3.理解正定二次型、正定矩阵的概念，并掌握其判别法。</li>\n</ul>\n",
            "tags": []
        }
    ]
}